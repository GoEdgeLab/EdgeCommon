syntax = "proto3";
option go_package = "./pb";

package pb;

import "model_node_cluster.proto";
import "model_api_node.proto";
import "model_node.proto";
import "rpc_messages.proto";

service NodeClusterService {
	// 创建集群
	rpc createNodeCluster (CreateNodeClusterRequest) returns (CreateNodeClusterResponse);

	// 修改集群
	rpc updateNodeCluster (UpdateNodeClusterRequest) returns (RPCUpdateSuccess);

	// 禁用集群
	rpc disableNodeCluster (DisableNodeClusterRequest) returns (DisableNodeClusterResponse);

	// 查找单个集群信息
	rpc findEnabledNodeCluster (FindEnabledNodeClusterRequest) returns (FindEnabledNodeClusterResponse);

	// 查找集群的API节点信息
	rpc findAPINodesWithNodeCluster (FindAPINodesWithNodeClusterRequest) returns (FindAPINodesWithNodeClusterResponse);

	// 获取所有可用集群
	rpc findAllEnabledNodeClusters (FindAllEnabledNodeClustersRequest) returns (FindAllEnabledNodeClustersResponse);

	// 获取变更的集群
	rpc findAllChangedNodeClusters (FindAllChangedNodeClustersRequest) returns (FindAllChangedNodeClustersResponse);

	// 计算所有集群数量
	rpc countAllEnabledNodeClusters (CountAllEnabledNodeClustersRequest) returns (CountAllEnabledNodeClustersResponse);

	// 列出单页集群
	rpc listEnabledNodeClusters (ListEnabledNodeClustersRequest) returns (ListEnabledNodeClustersResponse);

	// 查找集群的健康检查配置
	rpc findNodeClusterHealthCheckConfig (FindNodeClusterHealthCheckConfigRequest) returns (FindNodeClusterHealthCheckConfigResponse);

	// 修改集群健康检查设置
	rpc updateNodeClusterHealthCheck (UpdateNodeClusterHealthCheckRequest) returns (RPCUpdateSuccess);

	// 执行健康检查
	rpc executeNodeClusterHealthCheck (ExecuteNodeClusterHealthCheckRequest) returns (ExecuteNodeClusterHealthCheckResponse);
}

// 获取所有集群的信息
message FindAllEnabledNodeClustersRequest {

}

message FindAllEnabledNodeClustersResponse {
	repeated NodeCluster clusters = 1;
}

// 获取变更的集群
message FindAllChangedNodeClustersRequest {

}

message FindAllChangedNodeClustersResponse {
	repeated NodeCluster clusters = 1;
}

// 创建集群
message CreateNodeClusterRequest {
	string name = 1;
	int64 grantId = 2;
	string installDir = 3;
}

message CreateNodeClusterResponse {
	int64 clusterId = 1;
}

// 修改集群
message UpdateNodeClusterRequest {
	int64 clusterId = 1;
	string name = 2;
	int64 grantId = 3;
	string installDir = 4;
}

// 禁用集群
message DisableNodeClusterRequest {
	int64 clusterId = 1;
}

message DisableNodeClusterResponse {

}

// 查找单个集群信息
message FindEnabledNodeClusterRequest {
	int64 clusterId = 1;
}

message FindEnabledNodeClusterResponse {
	NodeCluster cluster = 1;
}

// 查找集群的API节点信息
message FindAPINodesWithNodeClusterRequest {
	int64 clusterId = 1;
}

message FindAPINodesWithNodeClusterResponse {
	bool useAllAPINodes = 1;
	repeated APINode apiNodes = 2;
}

// 计算所有集群数量
message CountAllEnabledNodeClustersRequest {

}

message CountAllEnabledNodeClustersResponse {
	int64 count = 1;
}

// 列出单页集群
message ListEnabledNodeClustersRequest {
	int64 offset = 1;
	int64 size = 2;
}

message ListEnabledNodeClustersResponse {
	repeated NodeCluster clusters = 1;
}

// 查找集群的健康检查配置
message FindNodeClusterHealthCheckConfigRequest {
	int64 clusterId = 1;
}

message FindNodeClusterHealthCheckConfigResponse {
	bytes healthCheckConfig = 1;
}

// 修改集群健康检查设置
message UpdateNodeClusterHealthCheckRequest {
	int64 clusterId = 1;
	bytes healthCheckJSON = 2;
}

// 执行健康检查
message ExecuteNodeClusterHealthCheckRequest {
	int64 clusterId = 1;
}

message ExecuteNodeClusterHealthCheckResponse {
	repeated Result results = 1;

	message Result {
		Node node = 1;
		string nodeAddr = 2;
		bool isOk = 3;
		string error = 4;
		float costMs = 5;
	}
}