// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: service_ip_library.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建IP库
type CreateIPLibraryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	FileId int64  `protobuf:"varint,3,opt,name=fileId,proto3" json:"fileId,omitempty"`
}

func (x *CreateIPLibraryRequest) Reset() {
	*x = CreateIPLibraryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIPLibraryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIPLibraryRequest) ProtoMessage() {}

func (x *CreateIPLibraryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIPLibraryRequest.ProtoReflect.Descriptor instead.
func (*CreateIPLibraryRequest) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{0}
}

func (x *CreateIPLibraryRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateIPLibraryRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

type CreateIPLibraryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpLibraryId int64 `protobuf:"varint,1,opt,name=ipLibraryId,proto3" json:"ipLibraryId,omitempty"`
}

func (x *CreateIPLibraryResponse) Reset() {
	*x = CreateIPLibraryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIPLibraryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIPLibraryResponse) ProtoMessage() {}

func (x *CreateIPLibraryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIPLibraryResponse.ProtoReflect.Descriptor instead.
func (*CreateIPLibraryResponse) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{1}
}

func (x *CreateIPLibraryResponse) GetIpLibraryId() int64 {
	if x != nil {
		return x.IpLibraryId
	}
	return 0
}

// 查找单个IP库
type FindEnabledIPLibraryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpLibraryId int64 `protobuf:"varint,1,opt,name=ipLibraryId,proto3" json:"ipLibraryId,omitempty"`
}

func (x *FindEnabledIPLibraryRequest) Reset() {
	*x = FindEnabledIPLibraryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledIPLibraryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledIPLibraryRequest) ProtoMessage() {}

func (x *FindEnabledIPLibraryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledIPLibraryRequest.ProtoReflect.Descriptor instead.
func (*FindEnabledIPLibraryRequest) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{2}
}

func (x *FindEnabledIPLibraryRequest) GetIpLibraryId() int64 {
	if x != nil {
		return x.IpLibraryId
	}
	return 0
}

type FindEnabledIPLibraryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpLibrary *IPLibrary `protobuf:"bytes,1,opt,name=ipLibrary,proto3" json:"ipLibrary,omitempty"`
}

func (x *FindEnabledIPLibraryResponse) Reset() {
	*x = FindEnabledIPLibraryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledIPLibraryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledIPLibraryResponse) ProtoMessage() {}

func (x *FindEnabledIPLibraryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledIPLibraryResponse.ProtoReflect.Descriptor instead.
func (*FindEnabledIPLibraryResponse) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{3}
}

func (x *FindEnabledIPLibraryResponse) GetIpLibrary() *IPLibrary {
	if x != nil {
		return x.IpLibrary
	}
	return nil
}

// 查找最新的IP库
type FindLatestIPLibraryWithTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *FindLatestIPLibraryWithTypeRequest) Reset() {
	*x = FindLatestIPLibraryWithTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindLatestIPLibraryWithTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindLatestIPLibraryWithTypeRequest) ProtoMessage() {}

func (x *FindLatestIPLibraryWithTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindLatestIPLibraryWithTypeRequest.ProtoReflect.Descriptor instead.
func (*FindLatestIPLibraryWithTypeRequest) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{4}
}

func (x *FindLatestIPLibraryWithTypeRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type FindLatestIPLibraryWithTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpLibrary *IPLibrary `protobuf:"bytes,1,opt,name=ipLibrary,proto3" json:"ipLibrary,omitempty"`
}

func (x *FindLatestIPLibraryWithTypeResponse) Reset() {
	*x = FindLatestIPLibraryWithTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindLatestIPLibraryWithTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindLatestIPLibraryWithTypeResponse) ProtoMessage() {}

func (x *FindLatestIPLibraryWithTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindLatestIPLibraryWithTypeResponse.ProtoReflect.Descriptor instead.
func (*FindLatestIPLibraryWithTypeResponse) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{5}
}

func (x *FindLatestIPLibraryWithTypeResponse) GetIpLibrary() *IPLibrary {
	if x != nil {
		return x.IpLibrary
	}
	return nil
}

// 列出某个类型的所有IP库
type FindAllEnabledIPLibrariesWithTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *FindAllEnabledIPLibrariesWithTypeRequest) Reset() {
	*x = FindAllEnabledIPLibrariesWithTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllEnabledIPLibrariesWithTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllEnabledIPLibrariesWithTypeRequest) ProtoMessage() {}

func (x *FindAllEnabledIPLibrariesWithTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllEnabledIPLibrariesWithTypeRequest.ProtoReflect.Descriptor instead.
func (*FindAllEnabledIPLibrariesWithTypeRequest) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{6}
}

func (x *FindAllEnabledIPLibrariesWithTypeRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type FindAllEnabledIPLibrariesWithTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpLibraries []*IPLibrary `protobuf:"bytes,1,rep,name=ipLibraries,proto3" json:"ipLibraries,omitempty"`
}

func (x *FindAllEnabledIPLibrariesWithTypeResponse) Reset() {
	*x = FindAllEnabledIPLibrariesWithTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllEnabledIPLibrariesWithTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllEnabledIPLibrariesWithTypeResponse) ProtoMessage() {}

func (x *FindAllEnabledIPLibrariesWithTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllEnabledIPLibrariesWithTypeResponse.ProtoReflect.Descriptor instead.
func (*FindAllEnabledIPLibrariesWithTypeResponse) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{7}
}

func (x *FindAllEnabledIPLibrariesWithTypeResponse) GetIpLibraries() []*IPLibrary {
	if x != nil {
		return x.IpLibraries
	}
	return nil
}

// 删除IP库
type DeleteIPLibraryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpLibraryId int64 `protobuf:"varint,1,opt,name=ipLibraryId,proto3" json:"ipLibraryId,omitempty"`
}

func (x *DeleteIPLibraryRequest) Reset() {
	*x = DeleteIPLibraryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIPLibraryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIPLibraryRequest) ProtoMessage() {}

func (x *DeleteIPLibraryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIPLibraryRequest.ProtoReflect.Descriptor instead.
func (*DeleteIPLibraryRequest) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteIPLibraryRequest) GetIpLibraryId() int64 {
	if x != nil {
		return x.IpLibraryId
	}
	return 0
}

// 查询某个IP信息
type LookupIPRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *LookupIPRegionRequest) Reset() {
	*x = LookupIPRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupIPRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupIPRegionRequest) ProtoMessage() {}

func (x *LookupIPRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupIPRegionRequest.ProtoReflect.Descriptor instead.
func (*LookupIPRegionRequest) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{9}
}

func (x *LookupIPRegionRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type LookupIPRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpRegion *IPRegion `protobuf:"bytes,1,opt,name=ipRegion,proto3" json:"ipRegion,omitempty"`
}

func (x *LookupIPRegionResponse) Reset() {
	*x = LookupIPRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupIPRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupIPRegionResponse) ProtoMessage() {}

func (x *LookupIPRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupIPRegionResponse.ProtoReflect.Descriptor instead.
func (*LookupIPRegionResponse) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{10}
}

func (x *LookupIPRegionResponse) GetIpRegion() *IPRegion {
	if x != nil {
		return x.IpRegion
	}
	return nil
}

// 查询一组IP信息
type LookupIPRegionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpList []string `protobuf:"bytes,1,rep,name=ipList,proto3" json:"ipList,omitempty"`
}

func (x *LookupIPRegionsRequest) Reset() {
	*x = LookupIPRegionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupIPRegionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupIPRegionsRequest) ProtoMessage() {}

func (x *LookupIPRegionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupIPRegionsRequest.ProtoReflect.Descriptor instead.
func (*LookupIPRegionsRequest) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{11}
}

func (x *LookupIPRegionsRequest) GetIpList() []string {
	if x != nil {
		return x.IpList
	}
	return nil
}

type LookupIPRegionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpRegionMap map[string]*IPRegion `protobuf:"bytes,1,rep,name=ipRegionMap,proto3" json:"ipRegionMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LookupIPRegionsResponse) Reset() {
	*x = LookupIPRegionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupIPRegionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupIPRegionsResponse) ProtoMessage() {}

func (x *LookupIPRegionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupIPRegionsResponse.ProtoReflect.Descriptor instead.
func (*LookupIPRegionsResponse) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{12}
}

func (x *LookupIPRegionsResponse) GetIpRegionMap() map[string]*IPRegion {
	if x != nil {
		return x.IpRegionMap
	}
	return nil
}

// IP信息
type IPRegion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country    string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`         // 国家/地区名称
	Region     string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`           // 区域名称
	Province   string `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`       // 省份名称
	City       string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`               // 城市名称
	Isp        string `protobuf:"bytes,5,opt,name=isp,proto3" json:"isp,omitempty"`                 // 运营商名称
	CountryId  int64  `protobuf:"varint,6,opt,name=countryId,proto3" json:"countryId,omitempty"`    // 国家/地区ID
	ProvinceId int64  `protobuf:"varint,7,opt,name=provinceId,proto3" json:"provinceId,omitempty"`  // 省份ID
	CityId     int64  `protobuf:"varint,9,opt,name=cityId,proto3" json:"cityId,omitempty"`          // 城市ID
	TownId     int64  `protobuf:"varint,10,opt,name=townId,proto3" json:"townId,omitempty"`         // 区县ID
	ProviderId int64  `protobuf:"varint,11,opt,name=providerId,proto3" json:"providerId,omitempty"` // 运营商ID
	Summary    string `protobuf:"bytes,8,opt,name=summary,proto3" json:"summary,omitempty"`         // 完整的地区组合
}

func (x *IPRegion) Reset() {
	*x = IPRegion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ip_library_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPRegion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPRegion) ProtoMessage() {}

func (x *IPRegion) ProtoReflect() protoreflect.Message {
	mi := &file_service_ip_library_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPRegion.ProtoReflect.Descriptor instead.
func (*IPRegion) Descriptor() ([]byte, []int) {
	return file_service_ip_library_proto_rawDescGZIP(), []int{13}
}

func (x *IPRegion) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *IPRegion) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *IPRegion) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *IPRegion) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *IPRegion) GetIsp() string {
	if x != nil {
		return x.Isp
	}
	return ""
}

func (x *IPRegion) GetCountryId() int64 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *IPRegion) GetProvinceId() int64 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *IPRegion) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *IPRegion) GetTownId() int64 {
	if x != nil {
		return x.TownId
	}
	return 0
}

func (x *IPRegion) GetProviderId() int64 {
	if x != nil {
		return x.ProviderId
	}
	return 0
}

func (x *IPRegion) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

var File_service_ip_library_proto protoreflect.FileDescriptor

var file_service_ip_library_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x70, 0x5f, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x19,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x70, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x3b,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x70, 0x4c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x69, 0x70, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x1b, 0x46,
	0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x70,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x69, 0x70, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x1c,
	0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x50, 0x4c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x09,
	0x69, 0x70, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x09,
	0x69, 0x70, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x22, 0x38, 0x0a, 0x22, 0x46, 0x69, 0x6e,
	0x64, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x52, 0x0a, 0x23, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x69, 0x70,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x09, 0x69, 0x70,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x22, 0x3e, 0x0a, 0x28, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5c, 0x0a, 0x29, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x69, 0x70, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x0b, 0x69, 0x70, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x70, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x70, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49,
	0x64, 0x22, 0x27, 0x0a, 0x15, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x49, 0x50, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x42, 0x0a, 0x16, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x49, 0x50, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x69, 0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x50, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x69, 0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x30,
	0x0a, 0x16, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x49, 0x50, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xb7, 0x01, 0x0a, 0x17, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x49, 0x50, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0b,
	0x69, 0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x49, 0x50, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49,
	0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x69, 0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x1a, 0x4c, 0x0a, 0x10,
	0x49, 0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x50, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa6, 0x02, 0x0a, 0x08, 0x49,
	0x50, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x73, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x77, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x6f, 0x77, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x32, 0x99, 0x05, 0x0a, 0x10, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x73, 0x0a, 0x1b, 0x66, 0x69, 0x6e,
	0x64, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x5e,
	0x0a, 0x14, 0x66, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x50, 0x4c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x85,
	0x01, 0x0a, 0x21, 0x66, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c,
	0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x65,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x42, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x50, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x47, 0x0a, 0x0e, 0x6c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x49, 0x50, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x49, 0x50, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x49, 0x50, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x49, 0x50, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x49, 0x50, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x49, 0x50,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_ip_library_proto_rawDescOnce sync.Once
	file_service_ip_library_proto_rawDescData = file_service_ip_library_proto_rawDesc
)

func file_service_ip_library_proto_rawDescGZIP() []byte {
	file_service_ip_library_proto_rawDescOnce.Do(func() {
		file_service_ip_library_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_ip_library_proto_rawDescData)
	})
	return file_service_ip_library_proto_rawDescData
}

var file_service_ip_library_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_service_ip_library_proto_goTypes = []interface{}{
	(*CreateIPLibraryRequest)(nil),                    // 0: pb.CreateIPLibraryRequest
	(*CreateIPLibraryResponse)(nil),                   // 1: pb.CreateIPLibraryResponse
	(*FindEnabledIPLibraryRequest)(nil),               // 2: pb.FindEnabledIPLibraryRequest
	(*FindEnabledIPLibraryResponse)(nil),              // 3: pb.FindEnabledIPLibraryResponse
	(*FindLatestIPLibraryWithTypeRequest)(nil),        // 4: pb.FindLatestIPLibraryWithTypeRequest
	(*FindLatestIPLibraryWithTypeResponse)(nil),       // 5: pb.FindLatestIPLibraryWithTypeResponse
	(*FindAllEnabledIPLibrariesWithTypeRequest)(nil),  // 6: pb.FindAllEnabledIPLibrariesWithTypeRequest
	(*FindAllEnabledIPLibrariesWithTypeResponse)(nil), // 7: pb.FindAllEnabledIPLibrariesWithTypeResponse
	(*DeleteIPLibraryRequest)(nil),                    // 8: pb.DeleteIPLibraryRequest
	(*LookupIPRegionRequest)(nil),                     // 9: pb.LookupIPRegionRequest
	(*LookupIPRegionResponse)(nil),                    // 10: pb.LookupIPRegionResponse
	(*LookupIPRegionsRequest)(nil),                    // 11: pb.LookupIPRegionsRequest
	(*LookupIPRegionsResponse)(nil),                   // 12: pb.LookupIPRegionsResponse
	(*IPRegion)(nil),                                  // 13: pb.IPRegion
	nil,                                               // 14: pb.LookupIPRegionsResponse.IpRegionMapEntry
	(*IPLibrary)(nil),                                 // 15: pb.IPLibrary
	(*RPCSuccess)(nil),                                // 16: pb.RPCSuccess
}
var file_service_ip_library_proto_depIdxs = []int32{
	15, // 0: pb.FindEnabledIPLibraryResponse.ipLibrary:type_name -> pb.IPLibrary
	15, // 1: pb.FindLatestIPLibraryWithTypeResponse.ipLibrary:type_name -> pb.IPLibrary
	15, // 2: pb.FindAllEnabledIPLibrariesWithTypeResponse.ipLibraries:type_name -> pb.IPLibrary
	13, // 3: pb.LookupIPRegionResponse.ipRegion:type_name -> pb.IPRegion
	14, // 4: pb.LookupIPRegionsResponse.ipRegionMap:type_name -> pb.LookupIPRegionsResponse.IpRegionMapEntry
	13, // 5: pb.LookupIPRegionsResponse.IpRegionMapEntry.value:type_name -> pb.IPRegion
	0,  // 6: pb.IPLibraryService.createIPLibrary:input_type -> pb.CreateIPLibraryRequest
	4,  // 7: pb.IPLibraryService.findLatestIPLibraryWithType:input_type -> pb.FindLatestIPLibraryWithTypeRequest
	2,  // 8: pb.IPLibraryService.findEnabledIPLibrary:input_type -> pb.FindEnabledIPLibraryRequest
	6,  // 9: pb.IPLibraryService.findAllEnabledIPLibrariesWithType:input_type -> pb.FindAllEnabledIPLibrariesWithTypeRequest
	8,  // 10: pb.IPLibraryService.deleteIPLibrary:input_type -> pb.DeleteIPLibraryRequest
	9,  // 11: pb.IPLibraryService.lookupIPRegion:input_type -> pb.LookupIPRegionRequest
	11, // 12: pb.IPLibraryService.lookupIPRegions:input_type -> pb.LookupIPRegionsRequest
	1,  // 13: pb.IPLibraryService.createIPLibrary:output_type -> pb.CreateIPLibraryResponse
	5,  // 14: pb.IPLibraryService.findLatestIPLibraryWithType:output_type -> pb.FindLatestIPLibraryWithTypeResponse
	3,  // 15: pb.IPLibraryService.findEnabledIPLibrary:output_type -> pb.FindEnabledIPLibraryResponse
	7,  // 16: pb.IPLibraryService.findAllEnabledIPLibrariesWithType:output_type -> pb.FindAllEnabledIPLibrariesWithTypeResponse
	16, // 17: pb.IPLibraryService.deleteIPLibrary:output_type -> pb.RPCSuccess
	10, // 18: pb.IPLibraryService.lookupIPRegion:output_type -> pb.LookupIPRegionResponse
	12, // 19: pb.IPLibraryService.lookupIPRegions:output_type -> pb.LookupIPRegionsResponse
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_service_ip_library_proto_init() }
func file_service_ip_library_proto_init() {
	if File_service_ip_library_proto != nil {
		return
	}
	file_models_rpc_messages_proto_init()
	file_models_model_ip_library_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_ip_library_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIPLibraryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ip_library_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIPLibraryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ip_library_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledIPLibraryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ip_library_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledIPLibraryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ip_library_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindLatestIPLibraryWithTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ip_library_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindLatestIPLibraryWithTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ip_library_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllEnabledIPLibrariesWithTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ip_library_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllEnabledIPLibrariesWithTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ip_library_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIPLibraryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ip_library_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupIPRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ip_library_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupIPRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ip_library_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupIPRegionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ip_library_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupIPRegionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ip_library_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPRegion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_ip_library_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_ip_library_proto_goTypes,
		DependencyIndexes: file_service_ip_library_proto_depIdxs,
		MessageInfos:      file_service_ip_library_proto_msgTypes,
	}.Build()
	File_service_ip_library_proto = out.File
	file_service_ip_library_proto_rawDesc = nil
	file_service_ip_library_proto_goTypes = nil
	file_service_ip_library_proto_depIdxs = nil
}
