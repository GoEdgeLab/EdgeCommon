// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: service_ad_package_instance.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建实例
type CreateADPackageInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdPackageId   int64    `protobuf:"varint,1,opt,name=adPackageId,proto3" json:"adPackageId,omitempty"`
	NodeClusterId int64    `protobuf:"varint,2,opt,name=nodeClusterId,proto3" json:"nodeClusterId,omitempty"`
	NodeIds       []int64  `protobuf:"varint,3,rep,packed,name=nodeIds,proto3" json:"nodeIds,omitempty"`
	IpAddresses   []string `protobuf:"bytes,4,rep,name=ipAddresses,proto3" json:"ipAddresses,omitempty"`
}

func (x *CreateADPackageInstanceRequest) Reset() {
	*x = CreateADPackageInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ad_package_instance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateADPackageInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateADPackageInstanceRequest) ProtoMessage() {}

func (x *CreateADPackageInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ad_package_instance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateADPackageInstanceRequest.ProtoReflect.Descriptor instead.
func (*CreateADPackageInstanceRequest) Descriptor() ([]byte, []int) {
	return file_service_ad_package_instance_proto_rawDescGZIP(), []int{0}
}

func (x *CreateADPackageInstanceRequest) GetAdPackageId() int64 {
	if x != nil {
		return x.AdPackageId
	}
	return 0
}

func (x *CreateADPackageInstanceRequest) GetNodeClusterId() int64 {
	if x != nil {
		return x.NodeClusterId
	}
	return 0
}

func (x *CreateADPackageInstanceRequest) GetNodeIds() []int64 {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *CreateADPackageInstanceRequest) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

type CreateADPackageInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdPackageInstanceId int64 `protobuf:"varint,1,opt,name=adPackageInstanceId,proto3" json:"adPackageInstanceId,omitempty"`
}

func (x *CreateADPackageInstanceResponse) Reset() {
	*x = CreateADPackageInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ad_package_instance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateADPackageInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateADPackageInstanceResponse) ProtoMessage() {}

func (x *CreateADPackageInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ad_package_instance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateADPackageInstanceResponse.ProtoReflect.Descriptor instead.
func (*CreateADPackageInstanceResponse) Descriptor() ([]byte, []int) {
	return file_service_ad_package_instance_proto_rawDescGZIP(), []int{1}
}

func (x *CreateADPackageInstanceResponse) GetAdPackageInstanceId() int64 {
	if x != nil {
		return x.AdPackageInstanceId
	}
	return 0
}

// 修改实例
type UpdateADPackageInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdPackageInstanceId int64    `protobuf:"varint,1,opt,name=adPackageInstanceId,proto3" json:"adPackageInstanceId,omitempty"`
	NodeClusterId       int64    `protobuf:"varint,2,opt,name=nodeClusterId,proto3" json:"nodeClusterId,omitempty"`
	NodeIds             []int64  `protobuf:"varint,3,rep,packed,name=nodeIds,proto3" json:"nodeIds,omitempty"`
	IpAddresses         []string `protobuf:"bytes,4,rep,name=ipAddresses,proto3" json:"ipAddresses,omitempty"`
	IsOn                bool     `protobuf:"varint,5,opt,name=isOn,proto3" json:"isOn,omitempty"`
}

func (x *UpdateADPackageInstanceRequest) Reset() {
	*x = UpdateADPackageInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ad_package_instance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateADPackageInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateADPackageInstanceRequest) ProtoMessage() {}

func (x *UpdateADPackageInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ad_package_instance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateADPackageInstanceRequest.ProtoReflect.Descriptor instead.
func (*UpdateADPackageInstanceRequest) Descriptor() ([]byte, []int) {
	return file_service_ad_package_instance_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateADPackageInstanceRequest) GetAdPackageInstanceId() int64 {
	if x != nil {
		return x.AdPackageInstanceId
	}
	return 0
}

func (x *UpdateADPackageInstanceRequest) GetNodeClusterId() int64 {
	if x != nil {
		return x.NodeClusterId
	}
	return 0
}

func (x *UpdateADPackageInstanceRequest) GetNodeIds() []int64 {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *UpdateADPackageInstanceRequest) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

func (x *UpdateADPackageInstanceRequest) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

// 查找单个实例
type FindADPackageInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdPackageInstanceId int64 `protobuf:"varint,1,opt,name=adPackageInstanceId,proto3" json:"adPackageInstanceId,omitempty"`
}

func (x *FindADPackageInstanceRequest) Reset() {
	*x = FindADPackageInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ad_package_instance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindADPackageInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindADPackageInstanceRequest) ProtoMessage() {}

func (x *FindADPackageInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ad_package_instance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindADPackageInstanceRequest.ProtoReflect.Descriptor instead.
func (*FindADPackageInstanceRequest) Descriptor() ([]byte, []int) {
	return file_service_ad_package_instance_proto_rawDescGZIP(), []int{3}
}

func (x *FindADPackageInstanceRequest) GetAdPackageInstanceId() int64 {
	if x != nil {
		return x.AdPackageInstanceId
	}
	return 0
}

type FindADPackageInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdPackageInstance *ADPackageInstance `protobuf:"bytes,1,opt,name=adPackageInstance,proto3" json:"adPackageInstance,omitempty"`
}

func (x *FindADPackageInstanceResponse) Reset() {
	*x = FindADPackageInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ad_package_instance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindADPackageInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindADPackageInstanceResponse) ProtoMessage() {}

func (x *FindADPackageInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ad_package_instance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindADPackageInstanceResponse.ProtoReflect.Descriptor instead.
func (*FindADPackageInstanceResponse) Descriptor() ([]byte, []int) {
	return file_service_ad_package_instance_proto_rawDescGZIP(), []int{4}
}

func (x *FindADPackageInstanceResponse) GetAdPackageInstance() *ADPackageInstance {
	if x != nil {
		return x.AdPackageInstance
	}
	return nil
}

// 列出单个高防产品所有实例
type FindAllADPackageInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdPackageId int64 `protobuf:"varint,1,opt,name=adPackageId,proto3" json:"adPackageId,omitempty"`
}

func (x *FindAllADPackageInstancesRequest) Reset() {
	*x = FindAllADPackageInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ad_package_instance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllADPackageInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllADPackageInstancesRequest) ProtoMessage() {}

func (x *FindAllADPackageInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ad_package_instance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllADPackageInstancesRequest.ProtoReflect.Descriptor instead.
func (*FindAllADPackageInstancesRequest) Descriptor() ([]byte, []int) {
	return file_service_ad_package_instance_proto_rawDescGZIP(), []int{5}
}

func (x *FindAllADPackageInstancesRequest) GetAdPackageId() int64 {
	if x != nil {
		return x.AdPackageId
	}
	return 0
}

type FindAllADPackageInstancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdPackageInstances []*ADPackageInstance `protobuf:"bytes,1,rep,name=adPackageInstances,proto3" json:"adPackageInstances,omitempty"`
}

func (x *FindAllADPackageInstancesResponse) Reset() {
	*x = FindAllADPackageInstancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ad_package_instance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllADPackageInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllADPackageInstancesResponse) ProtoMessage() {}

func (x *FindAllADPackageInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ad_package_instance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllADPackageInstancesResponse.ProtoReflect.Descriptor instead.
func (*FindAllADPackageInstancesResponse) Descriptor() ([]byte, []int) {
	return file_service_ad_package_instance_proto_rawDescGZIP(), []int{6}
}

func (x *FindAllADPackageInstancesResponse) GetAdPackageInstances() []*ADPackageInstance {
	if x != nil {
		return x.AdPackageInstances
	}
	return nil
}

// 删除实例
type DeleteADPackageInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdPackageInstanceId int64 `protobuf:"varint,1,opt,name=adPackageInstanceId,proto3" json:"adPackageInstanceId,omitempty"`
}

func (x *DeleteADPackageInstanceRequest) Reset() {
	*x = DeleteADPackageInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ad_package_instance_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteADPackageInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteADPackageInstanceRequest) ProtoMessage() {}

func (x *DeleteADPackageInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ad_package_instance_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteADPackageInstanceRequest.ProtoReflect.Descriptor instead.
func (*DeleteADPackageInstanceRequest) Descriptor() ([]byte, []int) {
	return file_service_ad_package_instance_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteADPackageInstanceRequest) GetAdPackageInstanceId() int64 {
	if x != nil {
		return x.AdPackageInstanceId
	}
	return 0
}

// 计算可购的实例数量
type CountIdleADPackageInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdPackageId int64 `protobuf:"varint,1,opt,name=adPackageId,proto3" json:"adPackageId,omitempty"`
}

func (x *CountIdleADPackageInstancesRequest) Reset() {
	*x = CountIdleADPackageInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ad_package_instance_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountIdleADPackageInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountIdleADPackageInstancesRequest) ProtoMessage() {}

func (x *CountIdleADPackageInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ad_package_instance_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountIdleADPackageInstancesRequest.ProtoReflect.Descriptor instead.
func (*CountIdleADPackageInstancesRequest) Descriptor() ([]byte, []int) {
	return file_service_ad_package_instance_proto_rawDescGZIP(), []int{8}
}

func (x *CountIdleADPackageInstancesRequest) GetAdPackageId() int64 {
	if x != nil {
		return x.AdPackageId
	}
	return 0
}

// 计算实例数量
type CountADPackageInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdNetworkId int64  `protobuf:"varint,1,opt,name=adNetworkId,proto3" json:"adNetworkId,omitempty"` // 可选，线路
	AdPackageId int64  `protobuf:"varint,2,opt,name=adPackageId,proto3" json:"adPackageId,omitempty"` // 可选，如果不填则表示获取所有实例数量
	UserId      int64  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`           // 可选，用户ID
	Ip          string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`                    // 可选，高防IP
}

func (x *CountADPackageInstancesRequest) Reset() {
	*x = CountADPackageInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ad_package_instance_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountADPackageInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountADPackageInstancesRequest) ProtoMessage() {}

func (x *CountADPackageInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ad_package_instance_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountADPackageInstancesRequest.ProtoReflect.Descriptor instead.
func (*CountADPackageInstancesRequest) Descriptor() ([]byte, []int) {
	return file_service_ad_package_instance_proto_rawDescGZIP(), []int{9}
}

func (x *CountADPackageInstancesRequest) GetAdNetworkId() int64 {
	if x != nil {
		return x.AdNetworkId
	}
	return 0
}

func (x *CountADPackageInstancesRequest) GetAdPackageId() int64 {
	if x != nil {
		return x.AdPackageId
	}
	return 0
}

func (x *CountADPackageInstancesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CountADPackageInstancesRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

// 列出单页实例
type ListADPackageInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdNetworkId int64  `protobuf:"varint,1,opt,name=adNetworkId,proto3" json:"adNetworkId,omitempty"` // 可选，线路
	AdPackageId int64  `protobuf:"varint,2,opt,name=adPackageId,proto3" json:"adPackageId,omitempty"` // 可选，如果不填则表示获取所有实例数量
	UserId      int64  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`           // 可选，用户ID
	Ip          string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`                    // 可选，高防IP
	Offset      int64  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Size        int64  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListADPackageInstancesRequest) Reset() {
	*x = ListADPackageInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ad_package_instance_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListADPackageInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListADPackageInstancesRequest) ProtoMessage() {}

func (x *ListADPackageInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ad_package_instance_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListADPackageInstancesRequest.ProtoReflect.Descriptor instead.
func (*ListADPackageInstancesRequest) Descriptor() ([]byte, []int) {
	return file_service_ad_package_instance_proto_rawDescGZIP(), []int{10}
}

func (x *ListADPackageInstancesRequest) GetAdNetworkId() int64 {
	if x != nil {
		return x.AdNetworkId
	}
	return 0
}

func (x *ListADPackageInstancesRequest) GetAdPackageId() int64 {
	if x != nil {
		return x.AdPackageId
	}
	return 0
}

func (x *ListADPackageInstancesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListADPackageInstancesRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ListADPackageInstancesRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListADPackageInstancesRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListADPackageInstancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdPackageInstances []*ADPackageInstance `protobuf:"bytes,1,rep,name=adPackageInstances,proto3" json:"adPackageInstances,omitempty"`
}

func (x *ListADPackageInstancesResponse) Reset() {
	*x = ListADPackageInstancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ad_package_instance_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListADPackageInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListADPackageInstancesResponse) ProtoMessage() {}

func (x *ListADPackageInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ad_package_instance_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListADPackageInstancesResponse.ProtoReflect.Descriptor instead.
func (*ListADPackageInstancesResponse) Descriptor() ([]byte, []int) {
	return file_service_ad_package_instance_proto_rawDescGZIP(), []int{11}
}

func (x *ListADPackageInstancesResponse) GetAdPackageInstances() []*ADPackageInstance {
	if x != nil {
		return x.AdPackageInstances
	}
	return nil
}

var File_service_ad_package_instance_proto protoreflect.FileDescriptor

var file_service_ad_package_instance_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x26, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x1e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x22, 0x53, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x44, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x73, 0x4f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4f,
	0x6e, 0x22, 0x50, 0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13,
	0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x1d, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x44, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x11, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x11, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x20, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x6c, 0x6c, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22,
	0x6a, 0x0a, 0x21, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x12, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x12, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x1e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x13, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x61, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x46, 0x0a, 0x22, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x6c, 0x65, 0x41, 0x44, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x1e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x61, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0xb7, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61,
	0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x22, 0x67, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x12, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x12, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x32, 0xf7, 0x05, 0x0a, 0x18, 0x41, 0x44,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x44, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x17, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x5c, 0x0a, 0x15, 0x66, 0x69, 0x6e,
	0x64, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x44, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x44,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x19, 0x66, 0x69, 0x6e, 0x64, 0x41,
	0x6c, 0x6c, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c,
	0x6c, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x17, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x44, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x5b, 0x0a, 0x1b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x6c, 0x65, 0x41, 0x44, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x26, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x6c, 0x65, 0x41, 0x44,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x17, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x50, 0x43, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5f, 0x0a, 0x16, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_service_ad_package_instance_proto_rawDescOnce sync.Once
	file_service_ad_package_instance_proto_rawDescData = file_service_ad_package_instance_proto_rawDesc
)

func file_service_ad_package_instance_proto_rawDescGZIP() []byte {
	file_service_ad_package_instance_proto_rawDescOnce.Do(func() {
		file_service_ad_package_instance_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_ad_package_instance_proto_rawDescData)
	})
	return file_service_ad_package_instance_proto_rawDescData
}

var file_service_ad_package_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_service_ad_package_instance_proto_goTypes = []interface{}{
	(*CreateADPackageInstanceRequest)(nil),     // 0: pb.CreateADPackageInstanceRequest
	(*CreateADPackageInstanceResponse)(nil),    // 1: pb.CreateADPackageInstanceResponse
	(*UpdateADPackageInstanceRequest)(nil),     // 2: pb.UpdateADPackageInstanceRequest
	(*FindADPackageInstanceRequest)(nil),       // 3: pb.FindADPackageInstanceRequest
	(*FindADPackageInstanceResponse)(nil),      // 4: pb.FindADPackageInstanceResponse
	(*FindAllADPackageInstancesRequest)(nil),   // 5: pb.FindAllADPackageInstancesRequest
	(*FindAllADPackageInstancesResponse)(nil),  // 6: pb.FindAllADPackageInstancesResponse
	(*DeleteADPackageInstanceRequest)(nil),     // 7: pb.DeleteADPackageInstanceRequest
	(*CountIdleADPackageInstancesRequest)(nil), // 8: pb.CountIdleADPackageInstancesRequest
	(*CountADPackageInstancesRequest)(nil),     // 9: pb.CountADPackageInstancesRequest
	(*ListADPackageInstancesRequest)(nil),      // 10: pb.ListADPackageInstancesRequest
	(*ListADPackageInstancesResponse)(nil),     // 11: pb.ListADPackageInstancesResponse
	(*ADPackageInstance)(nil),                  // 12: pb.ADPackageInstance
	(*RPCSuccess)(nil),                         // 13: pb.RPCSuccess
	(*RPCCountResponse)(nil),                   // 14: pb.RPCCountResponse
}
var file_service_ad_package_instance_proto_depIdxs = []int32{
	12, // 0: pb.FindADPackageInstanceResponse.adPackageInstance:type_name -> pb.ADPackageInstance
	12, // 1: pb.FindAllADPackageInstancesResponse.adPackageInstances:type_name -> pb.ADPackageInstance
	12, // 2: pb.ListADPackageInstancesResponse.adPackageInstances:type_name -> pb.ADPackageInstance
	0,  // 3: pb.ADPackageInstanceService.createADPackageInstance:input_type -> pb.CreateADPackageInstanceRequest
	2,  // 4: pb.ADPackageInstanceService.updateADPackageInstance:input_type -> pb.UpdateADPackageInstanceRequest
	3,  // 5: pb.ADPackageInstanceService.findADPackageInstance:input_type -> pb.FindADPackageInstanceRequest
	5,  // 6: pb.ADPackageInstanceService.findAllADPackageInstances:input_type -> pb.FindAllADPackageInstancesRequest
	7,  // 7: pb.ADPackageInstanceService.deleteADPackageInstance:input_type -> pb.DeleteADPackageInstanceRequest
	8,  // 8: pb.ADPackageInstanceService.countIdleADPackageInstances:input_type -> pb.CountIdleADPackageInstancesRequest
	9,  // 9: pb.ADPackageInstanceService.countADPackageInstances:input_type -> pb.CountADPackageInstancesRequest
	10, // 10: pb.ADPackageInstanceService.listADPackageInstances:input_type -> pb.ListADPackageInstancesRequest
	1,  // 11: pb.ADPackageInstanceService.createADPackageInstance:output_type -> pb.CreateADPackageInstanceResponse
	13, // 12: pb.ADPackageInstanceService.updateADPackageInstance:output_type -> pb.RPCSuccess
	4,  // 13: pb.ADPackageInstanceService.findADPackageInstance:output_type -> pb.FindADPackageInstanceResponse
	6,  // 14: pb.ADPackageInstanceService.findAllADPackageInstances:output_type -> pb.FindAllADPackageInstancesResponse
	13, // 15: pb.ADPackageInstanceService.deleteADPackageInstance:output_type -> pb.RPCSuccess
	14, // 16: pb.ADPackageInstanceService.countIdleADPackageInstances:output_type -> pb.RPCCountResponse
	14, // 17: pb.ADPackageInstanceService.countADPackageInstances:output_type -> pb.RPCCountResponse
	11, // 18: pb.ADPackageInstanceService.listADPackageInstances:output_type -> pb.ListADPackageInstancesResponse
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_service_ad_package_instance_proto_init() }
func file_service_ad_package_instance_proto_init() {
	if File_service_ad_package_instance_proto != nil {
		return
	}
	file_models_model_ad_package_instance_proto_init()
	file_models_rpc_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_ad_package_instance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateADPackageInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ad_package_instance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateADPackageInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ad_package_instance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateADPackageInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ad_package_instance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindADPackageInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ad_package_instance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindADPackageInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ad_package_instance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllADPackageInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ad_package_instance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllADPackageInstancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ad_package_instance_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteADPackageInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ad_package_instance_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountIdleADPackageInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ad_package_instance_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountADPackageInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ad_package_instance_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListADPackageInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ad_package_instance_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListADPackageInstancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_ad_package_instance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_ad_package_instance_proto_goTypes,
		DependencyIndexes: file_service_ad_package_instance_proto_depIdxs,
		MessageInfos:      file_service_ad_package_instance_proto_msgTypes,
	}.Build()
	File_service_ad_package_instance_proto = out.File
	file_service_ad_package_instance_proto_rawDesc = nil
	file_service_ad_package_instance_proto_goTypes = nil
	file_service_ad_package_instance_proto_depIdxs = nil
}
