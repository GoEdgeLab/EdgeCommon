// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: service_user_ticket.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建工单
type CreateUserTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTicketCategoryId int64  `protobuf:"varint,1,opt,name=userTicketCategoryId,proto3" json:"userTicketCategoryId,omitempty"`
	Subject              string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Body                 string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *CreateUserTicketRequest) Reset() {
	*x = CreateUserTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_ticket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserTicketRequest) ProtoMessage() {}

func (x *CreateUserTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_ticket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserTicketRequest.ProtoReflect.Descriptor instead.
func (*CreateUserTicketRequest) Descriptor() ([]byte, []int) {
	return file_service_user_ticket_proto_rawDescGZIP(), []int{0}
}

func (x *CreateUserTicketRequest) GetUserTicketCategoryId() int64 {
	if x != nil {
		return x.UserTicketCategoryId
	}
	return 0
}

func (x *CreateUserTicketRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateUserTicketRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type CreateUserTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTicketId int64 `protobuf:"varint,1,opt,name=userTicketId,proto3" json:"userTicketId,omitempty"`
}

func (x *CreateUserTicketResponse) Reset() {
	*x = CreateUserTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_ticket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserTicketResponse) ProtoMessage() {}

func (x *CreateUserTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_ticket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserTicketResponse.ProtoReflect.Descriptor instead.
func (*CreateUserTicketResponse) Descriptor() ([]byte, []int) {
	return file_service_user_ticket_proto_rawDescGZIP(), []int{1}
}

func (x *CreateUserTicketResponse) GetUserTicketId() int64 {
	if x != nil {
		return x.UserTicketId
	}
	return 0
}

// 修改工单
type UpdateUserTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTicketId         int64  `protobuf:"varint,1,opt,name=userTicketId,proto3" json:"userTicketId,omitempty"`
	UserTicketCategoryId int64  `protobuf:"varint,2,opt,name=userTicketCategoryId,proto3" json:"userTicketCategoryId,omitempty"`
	Subject              string `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Body                 string `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *UpdateUserTicketRequest) Reset() {
	*x = UpdateUserTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_ticket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserTicketRequest) ProtoMessage() {}

func (x *UpdateUserTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_ticket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserTicketRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserTicketRequest) Descriptor() ([]byte, []int) {
	return file_service_user_ticket_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateUserTicketRequest) GetUserTicketId() int64 {
	if x != nil {
		return x.UserTicketId
	}
	return 0
}

func (x *UpdateUserTicketRequest) GetUserTicketCategoryId() int64 {
	if x != nil {
		return x.UserTicketCategoryId
	}
	return 0
}

func (x *UpdateUserTicketRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *UpdateUserTicketRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

// 删除工单
type DeleteUserTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTicketId int64 `protobuf:"varint,1,opt,name=userTicketId,proto3" json:"userTicketId,omitempty"`
}

func (x *DeleteUserTicketRequest) Reset() {
	*x = DeleteUserTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_ticket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserTicketRequest) ProtoMessage() {}

func (x *DeleteUserTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_ticket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserTicketRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserTicketRequest) Descriptor() ([]byte, []int) {
	return file_service_user_ticket_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteUserTicketRequest) GetUserTicketId() int64 {
	if x != nil {
		return x.UserTicketId
	}
	return 0
}

// 计算工单数量
type CountUserTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserTicketCategoryId int64  `protobuf:"varint,2,opt,name=userTicketCategoryId,proto3" json:"userTicketCategoryId,omitempty"`
	Status               string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CountUserTicketsRequest) Reset() {
	*x = CountUserTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_ticket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserTicketsRequest) ProtoMessage() {}

func (x *CountUserTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_ticket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserTicketsRequest.ProtoReflect.Descriptor instead.
func (*CountUserTicketsRequest) Descriptor() ([]byte, []int) {
	return file_service_user_ticket_proto_rawDescGZIP(), []int{4}
}

func (x *CountUserTicketsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CountUserTicketsRequest) GetUserTicketCategoryId() int64 {
	if x != nil {
		return x.UserTicketCategoryId
	}
	return 0
}

func (x *CountUserTicketsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 列出单页工单
type ListUserTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserTicketCategoryId int64  `protobuf:"varint,2,opt,name=userTicketCategoryId,proto3" json:"userTicketCategoryId,omitempty"`
	Status               string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Offset               int64  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Size                 int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListUserTicketsRequest) Reset() {
	*x = ListUserTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_ticket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserTicketsRequest) ProtoMessage() {}

func (x *ListUserTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_ticket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserTicketsRequest.ProtoReflect.Descriptor instead.
func (*ListUserTicketsRequest) Descriptor() ([]byte, []int) {
	return file_service_user_ticket_proto_rawDescGZIP(), []int{5}
}

func (x *ListUserTicketsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListUserTicketsRequest) GetUserTicketCategoryId() int64 {
	if x != nil {
		return x.UserTicketCategoryId
	}
	return 0
}

func (x *ListUserTicketsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListUserTicketsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListUserTicketsRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListUserTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTickets []*UserTicket `protobuf:"bytes,1,rep,name=userTickets,proto3" json:"userTickets,omitempty"`
}

func (x *ListUserTicketsResponse) Reset() {
	*x = ListUserTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_ticket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserTicketsResponse) ProtoMessage() {}

func (x *ListUserTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_ticket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserTicketsResponse.ProtoReflect.Descriptor instead.
func (*ListUserTicketsResponse) Descriptor() ([]byte, []int) {
	return file_service_user_ticket_proto_rawDescGZIP(), []int{6}
}

func (x *ListUserTicketsResponse) GetUserTickets() []*UserTicket {
	if x != nil {
		return x.UserTickets
	}
	return nil
}

// 查找单个工单
type FindUserTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTicketId int64 `protobuf:"varint,1,opt,name=userTicketId,proto3" json:"userTicketId,omitempty"`
}

func (x *FindUserTicketRequest) Reset() {
	*x = FindUserTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_ticket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserTicketRequest) ProtoMessage() {}

func (x *FindUserTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_ticket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserTicketRequest.ProtoReflect.Descriptor instead.
func (*FindUserTicketRequest) Descriptor() ([]byte, []int) {
	return file_service_user_ticket_proto_rawDescGZIP(), []int{7}
}

func (x *FindUserTicketRequest) GetUserTicketId() int64 {
	if x != nil {
		return x.UserTicketId
	}
	return 0
}

type FindUserTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTicket *UserTicket `protobuf:"bytes,1,opt,name=userTicket,proto3" json:"userTicket,omitempty"`
}

func (x *FindUserTicketResponse) Reset() {
	*x = FindUserTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_ticket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserTicketResponse) ProtoMessage() {}

func (x *FindUserTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_ticket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserTicketResponse.ProtoReflect.Descriptor instead.
func (*FindUserTicketResponse) Descriptor() ([]byte, []int) {
	return file_service_user_ticket_proto_rawDescGZIP(), []int{8}
}

func (x *FindUserTicketResponse) GetUserTicket() *UserTicket {
	if x != nil {
		return x.UserTicket
	}
	return nil
}

var File_service_user_ticket_proto protoreflect.FileDescriptor

var file_service_user_ticket_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a,
	0x1e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7b, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x3e, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x3d, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x75,
	0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0x4b, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22,
	0x3b, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x16,
	0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x32, 0xc0, 0x03, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x10,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x10,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x45, 0x0a,
	0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_user_ticket_proto_rawDescOnce sync.Once
	file_service_user_ticket_proto_rawDescData = file_service_user_ticket_proto_rawDesc
)

func file_service_user_ticket_proto_rawDescGZIP() []byte {
	file_service_user_ticket_proto_rawDescOnce.Do(func() {
		file_service_user_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_user_ticket_proto_rawDescData)
	})
	return file_service_user_ticket_proto_rawDescData
}

var file_service_user_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_service_user_ticket_proto_goTypes = []interface{}{
	(*CreateUserTicketRequest)(nil),  // 0: pb.CreateUserTicketRequest
	(*CreateUserTicketResponse)(nil), // 1: pb.CreateUserTicketResponse
	(*UpdateUserTicketRequest)(nil),  // 2: pb.UpdateUserTicketRequest
	(*DeleteUserTicketRequest)(nil),  // 3: pb.DeleteUserTicketRequest
	(*CountUserTicketsRequest)(nil),  // 4: pb.CountUserTicketsRequest
	(*ListUserTicketsRequest)(nil),   // 5: pb.ListUserTicketsRequest
	(*ListUserTicketsResponse)(nil),  // 6: pb.ListUserTicketsResponse
	(*FindUserTicketRequest)(nil),    // 7: pb.FindUserTicketRequest
	(*FindUserTicketResponse)(nil),   // 8: pb.FindUserTicketResponse
	(*UserTicket)(nil),               // 9: pb.UserTicket
	(*RPCSuccess)(nil),               // 10: pb.RPCSuccess
	(*RPCCountResponse)(nil),         // 11: pb.RPCCountResponse
}
var file_service_user_ticket_proto_depIdxs = []int32{
	9,  // 0: pb.ListUserTicketsResponse.userTickets:type_name -> pb.UserTicket
	9,  // 1: pb.FindUserTicketResponse.userTicket:type_name -> pb.UserTicket
	0,  // 2: pb.UserTicketService.createUserTicket:input_type -> pb.CreateUserTicketRequest
	2,  // 3: pb.UserTicketService.updateUserTicket:input_type -> pb.UpdateUserTicketRequest
	3,  // 4: pb.UserTicketService.deleteUserTicket:input_type -> pb.DeleteUserTicketRequest
	4,  // 5: pb.UserTicketService.countUserTickets:input_type -> pb.CountUserTicketsRequest
	5,  // 6: pb.UserTicketService.listUserTickets:input_type -> pb.ListUserTicketsRequest
	7,  // 7: pb.UserTicketService.findUserTicket:input_type -> pb.FindUserTicketRequest
	1,  // 8: pb.UserTicketService.createUserTicket:output_type -> pb.CreateUserTicketResponse
	10, // 9: pb.UserTicketService.updateUserTicket:output_type -> pb.RPCSuccess
	10, // 10: pb.UserTicketService.deleteUserTicket:output_type -> pb.RPCSuccess
	11, // 11: pb.UserTicketService.countUserTickets:output_type -> pb.RPCCountResponse
	6,  // 12: pb.UserTicketService.listUserTickets:output_type -> pb.ListUserTicketsResponse
	8,  // 13: pb.UserTicketService.findUserTicket:output_type -> pb.FindUserTicketResponse
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_service_user_ticket_proto_init() }
func file_service_user_ticket_proto_init() {
	if File_service_user_ticket_proto != nil {
		return
	}
	file_models_model_user_ticket_proto_init()
	file_models_rpc_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_user_ticket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_ticket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_ticket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_ticket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_ticket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountUserTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_ticket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_ticket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_ticket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_ticket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_user_ticket_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_user_ticket_proto_goTypes,
		DependencyIndexes: file_service_user_ticket_proto_depIdxs,
		MessageInfos:      file_service_user_ticket_proto_msgTypes,
	}.Build()
	File_service_user_ticket_proto = out.File
	file_service_user_ticket_proto_rawDesc = nil
	file_service_user_ticket_proto_goTypes = nil
	file_service_user_ticket_proto_depIdxs = nil
}
