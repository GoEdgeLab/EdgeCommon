// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: service_origin.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建源站
type CreateOriginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                       // 名称，为可选项
	Addr            *NetworkAddress `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`                       // 源站网络地址
	OssJSON         []byte          `protobuf:"bytes,15,opt,name=ossJSON,proto3" json:"ossJSON,omitempty"`                // OSS配置信息，源站网络地址中protocol为oss:开头时需要设置此项
	Description     string          `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`         // 描述，为可选项
	Weight          int32           `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`                  // 权重，不小于0，一般设置为10
	IsOn            bool            `protobuf:"varint,5,opt,name=isOn,proto3" json:"isOn,omitempty"`                      // 是否启用
	ConnTimeoutJSON []byte          `protobuf:"bytes,6,opt,name=connTimeoutJSON,proto3" json:"connTimeoutJSON,omitempty"` // 可选项，连接超时时间
	ReadTimeoutJSON []byte          `protobuf:"bytes,7,opt,name=readTimeoutJSON,proto3" json:"readTimeoutJSON,omitempty"` // 可选项，读取超时时间
	IdleTimeoutJSON []byte          `protobuf:"bytes,8,opt,name=idleTimeoutJSON,proto3" json:"idleTimeoutJSON,omitempty"` // 可选项，空闲超时时间
	MaxConns        int32           `protobuf:"varint,9,opt,name=maxConns,proto3" json:"maxConns,omitempty"`              // 可选项，最大连接数
	MaxIdleConns    int32           `protobuf:"varint,10,opt,name=maxIdleConns,proto3" json:"maxIdleConns,omitempty"`     // 可选项，最大空闲连接数
	Domains         []string        `protobuf:"bytes,11,rep,name=domains,proto3" json:"domains,omitempty"`                // 可选项，专属域名列表
	CertRefJSON     []byte          `protobuf:"bytes,12,opt,name=certRefJSON,proto3" json:"certRefJSON,omitempty"`        // 可选项，证书设置
	Host            string          `protobuf:"bytes,13,opt,name=host,proto3" json:"host,omitempty"`                      // 可选项，回源主机名
	FollowPort      bool            `protobuf:"varint,14,opt,name=followPort,proto3" json:"followPort,omitempty"`         // 可选项，是否跟随端口
	Http2Enabled    bool            `protobuf:"varint,16,opt,name=http2Enabled,proto3" json:"http2Enabled,omitempty"`     // 可选项，是否支持HTTP/2，只在HTTPS源站时生效
}

func (x *CreateOriginRequest) Reset() {
	*x = CreateOriginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_origin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOriginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOriginRequest) ProtoMessage() {}

func (x *CreateOriginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_origin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOriginRequest.ProtoReflect.Descriptor instead.
func (*CreateOriginRequest) Descriptor() ([]byte, []int) {
	return file_service_origin_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOriginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateOriginRequest) GetAddr() *NetworkAddress {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *CreateOriginRequest) GetOssJSON() []byte {
	if x != nil {
		return x.OssJSON
	}
	return nil
}

func (x *CreateOriginRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateOriginRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *CreateOriginRequest) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *CreateOriginRequest) GetConnTimeoutJSON() []byte {
	if x != nil {
		return x.ConnTimeoutJSON
	}
	return nil
}

func (x *CreateOriginRequest) GetReadTimeoutJSON() []byte {
	if x != nil {
		return x.ReadTimeoutJSON
	}
	return nil
}

func (x *CreateOriginRequest) GetIdleTimeoutJSON() []byte {
	if x != nil {
		return x.IdleTimeoutJSON
	}
	return nil
}

func (x *CreateOriginRequest) GetMaxConns() int32 {
	if x != nil {
		return x.MaxConns
	}
	return 0
}

func (x *CreateOriginRequest) GetMaxIdleConns() int32 {
	if x != nil {
		return x.MaxIdleConns
	}
	return 0
}

func (x *CreateOriginRequest) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *CreateOriginRequest) GetCertRefJSON() []byte {
	if x != nil {
		return x.CertRefJSON
	}
	return nil
}

func (x *CreateOriginRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *CreateOriginRequest) GetFollowPort() bool {
	if x != nil {
		return x.FollowPort
	}
	return false
}

func (x *CreateOriginRequest) GetHttp2Enabled() bool {
	if x != nil {
		return x.Http2Enabled
	}
	return false
}

type CreateOriginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginId int64 `protobuf:"varint,1,opt,name=originId,proto3" json:"originId,omitempty"` // 创建的源站ID
}

func (x *CreateOriginResponse) Reset() {
	*x = CreateOriginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_origin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOriginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOriginResponse) ProtoMessage() {}

func (x *CreateOriginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_origin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOriginResponse.ProtoReflect.Descriptor instead.
func (*CreateOriginResponse) Descriptor() ([]byte, []int) {
	return file_service_origin_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOriginResponse) GetOriginId() int64 {
	if x != nil {
		return x.OriginId
	}
	return 0
}

// 修改源站
type UpdateOriginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginId        int64           `protobuf:"varint,1,opt,name=originId,proto3" json:"originId,omitempty"`              // 源站ID
	Name            string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                       // 可选项
	Addr            *NetworkAddress `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`                       // 源站网络地址
	OssJSON         []byte          `protobuf:"bytes,16,opt,name=ossJSON,proto3" json:"ossJSON,omitempty"`                // OSS配置信息，源站网络地址中protocol为oss:开头时需要设置此项
	Description     string          `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`         // 可选项
	Weight          int32           `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`                  // 权重，不小于0，一般设置为10
	IsOn            bool            `protobuf:"varint,6,opt,name=isOn,proto3" json:"isOn,omitempty"`                      // 是否启用
	ConnTimeoutJSON []byte          `protobuf:"bytes,7,opt,name=connTimeoutJSON,proto3" json:"connTimeoutJSON,omitempty"` // 可选项
	ReadTimeoutJSON []byte          `protobuf:"bytes,8,opt,name=readTimeoutJSON,proto3" json:"readTimeoutJSON,omitempty"` // 可选项
	IdleTimeoutJSON []byte          `protobuf:"bytes,9,opt,name=idleTimeoutJSON,proto3" json:"idleTimeoutJSON,omitempty"` // 可选项
	MaxConns        int32           `protobuf:"varint,10,opt,name=maxConns,proto3" json:"maxConns,omitempty"`             // 可选项
	MaxIdleConns    int32           `protobuf:"varint,11,opt,name=maxIdleConns,proto3" json:"maxIdleConns,omitempty"`     // 可选项
	Domains         []string        `protobuf:"bytes,12,rep,name=domains,proto3" json:"domains,omitempty"`                // 可选项
	CertRefJSON     []byte          `protobuf:"bytes,13,opt,name=certRefJSON,proto3" json:"certRefJSON,omitempty"`        // 可选项
	Host            string          `protobuf:"bytes,14,opt,name=host,proto3" json:"host,omitempty"`                      // 可选项
	FollowPort      bool            `protobuf:"varint,15,opt,name=followPort,proto3" json:"followPort,omitempty"`         // 可选项
	Http2Enabled    bool            `protobuf:"varint,17,opt,name=http2Enabled,proto3" json:"http2Enabled,omitempty"`     // 可选项，是否支持HTTP/2，只在HTTPS源站时生效
}

func (x *UpdateOriginRequest) Reset() {
	*x = UpdateOriginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_origin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOriginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOriginRequest) ProtoMessage() {}

func (x *UpdateOriginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_origin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOriginRequest.ProtoReflect.Descriptor instead.
func (*UpdateOriginRequest) Descriptor() ([]byte, []int) {
	return file_service_origin_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateOriginRequest) GetOriginId() int64 {
	if x != nil {
		return x.OriginId
	}
	return 0
}

func (x *UpdateOriginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateOriginRequest) GetAddr() *NetworkAddress {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *UpdateOriginRequest) GetOssJSON() []byte {
	if x != nil {
		return x.OssJSON
	}
	return nil
}

func (x *UpdateOriginRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateOriginRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UpdateOriginRequest) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *UpdateOriginRequest) GetConnTimeoutJSON() []byte {
	if x != nil {
		return x.ConnTimeoutJSON
	}
	return nil
}

func (x *UpdateOriginRequest) GetReadTimeoutJSON() []byte {
	if x != nil {
		return x.ReadTimeoutJSON
	}
	return nil
}

func (x *UpdateOriginRequest) GetIdleTimeoutJSON() []byte {
	if x != nil {
		return x.IdleTimeoutJSON
	}
	return nil
}

func (x *UpdateOriginRequest) GetMaxConns() int32 {
	if x != nil {
		return x.MaxConns
	}
	return 0
}

func (x *UpdateOriginRequest) GetMaxIdleConns() int32 {
	if x != nil {
		return x.MaxIdleConns
	}
	return 0
}

func (x *UpdateOriginRequest) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *UpdateOriginRequest) GetCertRefJSON() []byte {
	if x != nil {
		return x.CertRefJSON
	}
	return nil
}

func (x *UpdateOriginRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *UpdateOriginRequest) GetFollowPort() bool {
	if x != nil {
		return x.FollowPort
	}
	return false
}

func (x *UpdateOriginRequest) GetHttp2Enabled() bool {
	if x != nil {
		return x.Http2Enabled
	}
	return false
}

// 查找单个源站信息
type FindEnabledOriginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginId int64 `protobuf:"varint,1,opt,name=originId,proto3" json:"originId,omitempty"`
}

func (x *FindEnabledOriginRequest) Reset() {
	*x = FindEnabledOriginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_origin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledOriginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledOriginRequest) ProtoMessage() {}

func (x *FindEnabledOriginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_origin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledOriginRequest.ProtoReflect.Descriptor instead.
func (*FindEnabledOriginRequest) Descriptor() ([]byte, []int) {
	return file_service_origin_proto_rawDescGZIP(), []int{3}
}

func (x *FindEnabledOriginRequest) GetOriginId() int64 {
	if x != nil {
		return x.OriginId
	}
	return 0
}

type FindEnabledOriginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin *Origin `protobuf:"bytes,1,opt,name=Origin,proto3" json:"Origin,omitempty"`
}

func (x *FindEnabledOriginResponse) Reset() {
	*x = FindEnabledOriginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_origin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledOriginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledOriginResponse) ProtoMessage() {}

func (x *FindEnabledOriginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_origin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledOriginResponse.ProtoReflect.Descriptor instead.
func (*FindEnabledOriginResponse) Descriptor() ([]byte, []int) {
	return file_service_origin_proto_rawDescGZIP(), []int{4}
}

func (x *FindEnabledOriginResponse) GetOrigin() *Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

// 查找源站配置
type FindEnabledOriginConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginId int64 `protobuf:"varint,1,opt,name=originId,proto3" json:"originId,omitempty"`
}

func (x *FindEnabledOriginConfigRequest) Reset() {
	*x = FindEnabledOriginConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_origin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledOriginConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledOriginConfigRequest) ProtoMessage() {}

func (x *FindEnabledOriginConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_origin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledOriginConfigRequest.ProtoReflect.Descriptor instead.
func (*FindEnabledOriginConfigRequest) Descriptor() ([]byte, []int) {
	return file_service_origin_proto_rawDescGZIP(), []int{5}
}

func (x *FindEnabledOriginConfigRequest) GetOriginId() int64 {
	if x != nil {
		return x.OriginId
	}
	return 0
}

type FindEnabledOriginConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginJSON []byte `protobuf:"bytes,1,opt,name=originJSON,proto3" json:"originJSON,omitempty"`
}

func (x *FindEnabledOriginConfigResponse) Reset() {
	*x = FindEnabledOriginConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_origin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledOriginConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledOriginConfigResponse) ProtoMessage() {}

func (x *FindEnabledOriginConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_origin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledOriginConfigResponse.ProtoReflect.Descriptor instead.
func (*FindEnabledOriginConfigResponse) Descriptor() ([]byte, []int) {
	return file_service_origin_proto_rawDescGZIP(), []int{6}
}

func (x *FindEnabledOriginConfigResponse) GetOriginJSON() []byte {
	if x != nil {
		return x.OriginJSON
	}
	return nil
}

var File_service_origin_proto protoreflect.FileDescriptor

var file_service_origin_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x19, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x04, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x73, 0x73, 0x4a,
	0x53, 0x4f, 0x4e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x73, 0x73, 0x4a, 0x53,
	0x4f, 0x4e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x73, 0x4f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4f, 0x6e,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4a,
	0x53, 0x4f, 0x4e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65,
	0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x69,
	0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61,
	0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x66, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x66, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x32, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x32, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x22, 0x32, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xa7, 0x04, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x73, 0x73, 0x4a, 0x53, 0x4f,
	0x4e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x73, 0x73, 0x4a, 0x53, 0x4f, 0x4e,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73,
	0x4f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4a, 0x53, 0x4f,
	0x4e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4a, 0x53,
	0x4f, 0x4e, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x69, 0x64, 0x6c,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x49,
	0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x66, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x66, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x68, 0x74, 0x74, 0x70, 0x32, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x32, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x22, 0x36, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x52, 0x06, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x3c, 0x0a, 0x1e, 0x46, 0x69, 0x6e,
	0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x1f, 0x46, 0x69, 0x6e, 0x64, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4a, 0x53, 0x4f, 0x4e, 0x32, 0xc1, 0x02, 0x0a, 0x0d, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12,
	0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50,
	0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x50, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x64,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x17, 0x66, 0x69,
	0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_origin_proto_rawDescOnce sync.Once
	file_service_origin_proto_rawDescData = file_service_origin_proto_rawDesc
)

func file_service_origin_proto_rawDescGZIP() []byte {
	file_service_origin_proto_rawDescOnce.Do(func() {
		file_service_origin_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_origin_proto_rawDescData)
	})
	return file_service_origin_proto_rawDescData
}

var file_service_origin_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_service_origin_proto_goTypes = []interface{}{
	(*CreateOriginRequest)(nil),             // 0: pb.CreateOriginRequest
	(*CreateOriginResponse)(nil),            // 1: pb.CreateOriginResponse
	(*UpdateOriginRequest)(nil),             // 2: pb.UpdateOriginRequest
	(*FindEnabledOriginRequest)(nil),        // 3: pb.FindEnabledOriginRequest
	(*FindEnabledOriginResponse)(nil),       // 4: pb.FindEnabledOriginResponse
	(*FindEnabledOriginConfigRequest)(nil),  // 5: pb.FindEnabledOriginConfigRequest
	(*FindEnabledOriginConfigResponse)(nil), // 6: pb.FindEnabledOriginConfigResponse
	(*NetworkAddress)(nil),                  // 7: pb.NetworkAddress
	(*Origin)(nil),                          // 8: pb.Origin
	(*RPCSuccess)(nil),                      // 9: pb.RPCSuccess
}
var file_service_origin_proto_depIdxs = []int32{
	7, // 0: pb.CreateOriginRequest.addr:type_name -> pb.NetworkAddress
	7, // 1: pb.UpdateOriginRequest.addr:type_name -> pb.NetworkAddress
	8, // 2: pb.FindEnabledOriginResponse.Origin:type_name -> pb.Origin
	0, // 3: pb.OriginService.createOrigin:input_type -> pb.CreateOriginRequest
	2, // 4: pb.OriginService.updateOrigin:input_type -> pb.UpdateOriginRequest
	3, // 5: pb.OriginService.findEnabledOrigin:input_type -> pb.FindEnabledOriginRequest
	5, // 6: pb.OriginService.findEnabledOriginConfig:input_type -> pb.FindEnabledOriginConfigRequest
	1, // 7: pb.OriginService.createOrigin:output_type -> pb.CreateOriginResponse
	9, // 8: pb.OriginService.updateOrigin:output_type -> pb.RPCSuccess
	4, // 9: pb.OriginService.findEnabledOrigin:output_type -> pb.FindEnabledOriginResponse
	6, // 10: pb.OriginService.findEnabledOriginConfig:output_type -> pb.FindEnabledOriginConfigResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_service_origin_proto_init() }
func file_service_origin_proto_init() {
	if File_service_origin_proto != nil {
		return
	}
	file_models_model_origin_proto_init()
	file_models_model_network_address_proto_init()
	file_models_rpc_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_origin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOriginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_origin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOriginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_origin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOriginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_origin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledOriginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_origin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledOriginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_origin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledOriginConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_origin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledOriginConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_origin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_origin_proto_goTypes,
		DependencyIndexes: file_service_origin_proto_depIdxs,
		MessageInfos:      file_service_origin_proto_msgTypes,
	}.Build()
	File_service_origin_proto = out.File
	file_service_origin_proto_rawDesc = nil
	file_service_origin_proto_goTypes = nil
	file_service_origin_proto_depIdxs = nil
}
