// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: service_traffic_package_price.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 设置流量包价格
type UpdateTrafficPackagePriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrafficPackageId       int64   `protobuf:"varint,1,opt,name=trafficPackageId,proto3" json:"trafficPackageId,omitempty"`
	NodeRegionId           int64   `protobuf:"varint,2,opt,name=nodeRegionId,proto3" json:"nodeRegionId,omitempty"`
	TrafficPackagePeriodId int64   `protobuf:"varint,3,opt,name=trafficPackagePeriodId,proto3" json:"trafficPackagePeriodId,omitempty"`
	Price                  float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *UpdateTrafficPackagePriceRequest) Reset() {
	*x = UpdateTrafficPackagePriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_traffic_package_price_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrafficPackagePriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrafficPackagePriceRequest) ProtoMessage() {}

func (x *UpdateTrafficPackagePriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_traffic_package_price_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrafficPackagePriceRequest.ProtoReflect.Descriptor instead.
func (*UpdateTrafficPackagePriceRequest) Descriptor() ([]byte, []int) {
	return file_service_traffic_package_price_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateTrafficPackagePriceRequest) GetTrafficPackageId() int64 {
	if x != nil {
		return x.TrafficPackageId
	}
	return 0
}

func (x *UpdateTrafficPackagePriceRequest) GetNodeRegionId() int64 {
	if x != nil {
		return x.NodeRegionId
	}
	return 0
}

func (x *UpdateTrafficPackagePriceRequest) GetTrafficPackagePeriodId() int64 {
	if x != nil {
		return x.TrafficPackagePeriodId
	}
	return 0
}

func (x *UpdateTrafficPackagePriceRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

// 获取单个流量包具体价格
type FindTrafficPackagePriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrafficPackageId       int64 `protobuf:"varint,1,opt,name=trafficPackageId,proto3" json:"trafficPackageId,omitempty"`
	NodeRegionId           int64 `protobuf:"varint,2,opt,name=nodeRegionId,proto3" json:"nodeRegionId,omitempty"`
	TrafficPackagePeriodId int64 `protobuf:"varint,3,opt,name=trafficPackagePeriodId,proto3" json:"trafficPackagePeriodId,omitempty"`
	Count                  int32 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *FindTrafficPackagePriceRequest) Reset() {
	*x = FindTrafficPackagePriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_traffic_package_price_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTrafficPackagePriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTrafficPackagePriceRequest) ProtoMessage() {}

func (x *FindTrafficPackagePriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_traffic_package_price_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTrafficPackagePriceRequest.ProtoReflect.Descriptor instead.
func (*FindTrafficPackagePriceRequest) Descriptor() ([]byte, []int) {
	return file_service_traffic_package_price_proto_rawDescGZIP(), []int{1}
}

func (x *FindTrafficPackagePriceRequest) GetTrafficPackageId() int64 {
	if x != nil {
		return x.TrafficPackageId
	}
	return 0
}

func (x *FindTrafficPackagePriceRequest) GetNodeRegionId() int64 {
	if x != nil {
		return x.NodeRegionId
	}
	return 0
}

func (x *FindTrafficPackagePriceRequest) GetTrafficPackagePeriodId() int64 {
	if x != nil {
		return x.TrafficPackagePeriodId
	}
	return 0
}

func (x *FindTrafficPackagePriceRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type FindTrafficPackagePriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price  float64 `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`   // 单价
	Amount float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"` // 总价
}

func (x *FindTrafficPackagePriceResponse) Reset() {
	*x = FindTrafficPackagePriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_traffic_package_price_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTrafficPackagePriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTrafficPackagePriceResponse) ProtoMessage() {}

func (x *FindTrafficPackagePriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_traffic_package_price_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTrafficPackagePriceResponse.ProtoReflect.Descriptor instead.
func (*FindTrafficPackagePriceResponse) Descriptor() ([]byte, []int) {
	return file_service_traffic_package_price_proto_rawDescGZIP(), []int{2}
}

func (x *FindTrafficPackagePriceResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *FindTrafficPackagePriceResponse) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// 计算流量包价格项数量
type CountTrafficPackagePricesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrafficPackageId int64 `protobuf:"varint,1,opt,name=trafficPackageId,proto3" json:"trafficPackageId,omitempty"`
}

func (x *CountTrafficPackagePricesRequest) Reset() {
	*x = CountTrafficPackagePricesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_traffic_package_price_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountTrafficPackagePricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountTrafficPackagePricesRequest) ProtoMessage() {}

func (x *CountTrafficPackagePricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_traffic_package_price_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountTrafficPackagePricesRequest.ProtoReflect.Descriptor instead.
func (*CountTrafficPackagePricesRequest) Descriptor() ([]byte, []int) {
	return file_service_traffic_package_price_proto_rawDescGZIP(), []int{3}
}

func (x *CountTrafficPackagePricesRequest) GetTrafficPackageId() int64 {
	if x != nil {
		return x.TrafficPackageId
	}
	return 0
}

// 查找流量包价格
type FindTrafficPackagePricesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrafficPackageId int64 `protobuf:"varint,1,opt,name=trafficPackageId,proto3" json:"trafficPackageId,omitempty"`
}

func (x *FindTrafficPackagePricesRequest) Reset() {
	*x = FindTrafficPackagePricesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_traffic_package_price_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTrafficPackagePricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTrafficPackagePricesRequest) ProtoMessage() {}

func (x *FindTrafficPackagePricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_traffic_package_price_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTrafficPackagePricesRequest.ProtoReflect.Descriptor instead.
func (*FindTrafficPackagePricesRequest) Descriptor() ([]byte, []int) {
	return file_service_traffic_package_price_proto_rawDescGZIP(), []int{4}
}

func (x *FindTrafficPackagePricesRequest) GetTrafficPackageId() int64 {
	if x != nil {
		return x.TrafficPackageId
	}
	return 0
}

type FindTrafficPackagePricesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrafficPackagePrices []*TrafficPackagePrice `protobuf:"bytes,1,rep,name=trafficPackagePrices,proto3" json:"trafficPackagePrices,omitempty"`
}

func (x *FindTrafficPackagePricesResponse) Reset() {
	*x = FindTrafficPackagePricesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_traffic_package_price_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTrafficPackagePricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTrafficPackagePricesResponse) ProtoMessage() {}

func (x *FindTrafficPackagePricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_traffic_package_price_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTrafficPackagePricesResponse.ProtoReflect.Descriptor instead.
func (*FindTrafficPackagePricesResponse) Descriptor() ([]byte, []int) {
	return file_service_traffic_package_price_proto_rawDescGZIP(), []int{5}
}

func (x *FindTrafficPackagePricesResponse) GetTrafficPackagePrices() []*TrafficPackagePrice {
	if x != nil {
		return x.TrafficPackagePrices
	}
	return nil
}

// 查找所有流量包价格
type FindAllTrafficPackagePricesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FindAllTrafficPackagePricesRequest) Reset() {
	*x = FindAllTrafficPackagePricesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_traffic_package_price_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllTrafficPackagePricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllTrafficPackagePricesRequest) ProtoMessage() {}

func (x *FindAllTrafficPackagePricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_traffic_package_price_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllTrafficPackagePricesRequest.ProtoReflect.Descriptor instead.
func (*FindAllTrafficPackagePricesRequest) Descriptor() ([]byte, []int) {
	return file_service_traffic_package_price_proto_rawDescGZIP(), []int{6}
}

type FindAllTrafficPackagePricesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrafficPackagePrices []*TrafficPackagePrice `protobuf:"bytes,1,rep,name=trafficPackagePrices,proto3" json:"trafficPackagePrices,omitempty"`
}

func (x *FindAllTrafficPackagePricesResponse) Reset() {
	*x = FindAllTrafficPackagePricesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_traffic_package_price_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllTrafficPackagePricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllTrafficPackagePricesResponse) ProtoMessage() {}

func (x *FindAllTrafficPackagePricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_traffic_package_price_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllTrafficPackagePricesResponse.ProtoReflect.Descriptor instead.
func (*FindAllTrafficPackagePricesResponse) Descriptor() ([]byte, []int) {
	return file_service_traffic_package_price_proto_rawDescGZIP(), []int{7}
}

func (x *FindAllTrafficPackagePricesResponse) GetTrafficPackagePrices() []*TrafficPackagePrice {
	if x != nil {
		return x.TrafficPackagePrices
	}
	return nil
}

var File_service_traffic_package_price_proto protoreflect.FileDescriptor

var file_service_traffic_package_price_proto_rawDesc = []byte{
	0x0a, 0x23, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x28, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0,
	0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x16, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x22, 0xbe, 0x01, 0x0a, 0x1e, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x4f, 0x0a, 0x1f, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x20, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x1f, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x22, 0x6f, 0x0a, 0x20, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x14, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x22, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x72, 0x0a, 0x23, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4b, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x14, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x32, 0x83, 0x04,
	0x0a, 0x1a, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x19,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x62, 0x0a, 0x17, 0x66, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x19, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x18,
	0x66, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x1b, 0x66, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_service_traffic_package_price_proto_rawDescOnce sync.Once
	file_service_traffic_package_price_proto_rawDescData = file_service_traffic_package_price_proto_rawDesc
)

func file_service_traffic_package_price_proto_rawDescGZIP() []byte {
	file_service_traffic_package_price_proto_rawDescOnce.Do(func() {
		file_service_traffic_package_price_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_traffic_package_price_proto_rawDescData)
	})
	return file_service_traffic_package_price_proto_rawDescData
}

var file_service_traffic_package_price_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_service_traffic_package_price_proto_goTypes = []interface{}{
	(*UpdateTrafficPackagePriceRequest)(nil),    // 0: pb.UpdateTrafficPackagePriceRequest
	(*FindTrafficPackagePriceRequest)(nil),      // 1: pb.FindTrafficPackagePriceRequest
	(*FindTrafficPackagePriceResponse)(nil),     // 2: pb.FindTrafficPackagePriceResponse
	(*CountTrafficPackagePricesRequest)(nil),    // 3: pb.CountTrafficPackagePricesRequest
	(*FindTrafficPackagePricesRequest)(nil),     // 4: pb.FindTrafficPackagePricesRequest
	(*FindTrafficPackagePricesResponse)(nil),    // 5: pb.FindTrafficPackagePricesResponse
	(*FindAllTrafficPackagePricesRequest)(nil),  // 6: pb.FindAllTrafficPackagePricesRequest
	(*FindAllTrafficPackagePricesResponse)(nil), // 7: pb.FindAllTrafficPackagePricesResponse
	(*TrafficPackagePrice)(nil),                 // 8: pb.TrafficPackagePrice
	(*RPCSuccess)(nil),                          // 9: pb.RPCSuccess
	(*RPCCountResponse)(nil),                    // 10: pb.RPCCountResponse
}
var file_service_traffic_package_price_proto_depIdxs = []int32{
	8,  // 0: pb.FindTrafficPackagePricesResponse.trafficPackagePrices:type_name -> pb.TrafficPackagePrice
	8,  // 1: pb.FindAllTrafficPackagePricesResponse.trafficPackagePrices:type_name -> pb.TrafficPackagePrice
	0,  // 2: pb.TrafficPackagePriceService.updateTrafficPackagePrice:input_type -> pb.UpdateTrafficPackagePriceRequest
	1,  // 3: pb.TrafficPackagePriceService.findTrafficPackagePrice:input_type -> pb.FindTrafficPackagePriceRequest
	3,  // 4: pb.TrafficPackagePriceService.countTrafficPackagePrices:input_type -> pb.CountTrafficPackagePricesRequest
	4,  // 5: pb.TrafficPackagePriceService.findTrafficPackagePrices:input_type -> pb.FindTrafficPackagePricesRequest
	6,  // 6: pb.TrafficPackagePriceService.findAllTrafficPackagePrices:input_type -> pb.FindAllTrafficPackagePricesRequest
	9,  // 7: pb.TrafficPackagePriceService.updateTrafficPackagePrice:output_type -> pb.RPCSuccess
	2,  // 8: pb.TrafficPackagePriceService.findTrafficPackagePrice:output_type -> pb.FindTrafficPackagePriceResponse
	10, // 9: pb.TrafficPackagePriceService.countTrafficPackagePrices:output_type -> pb.RPCCountResponse
	5,  // 10: pb.TrafficPackagePriceService.findTrafficPackagePrices:output_type -> pb.FindTrafficPackagePricesResponse
	7,  // 11: pb.TrafficPackagePriceService.findAllTrafficPackagePrices:output_type -> pb.FindAllTrafficPackagePricesResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_service_traffic_package_price_proto_init() }
func file_service_traffic_package_price_proto_init() {
	if File_service_traffic_package_price_proto != nil {
		return
	}
	file_models_model_traffic_package_price_proto_init()
	file_models_rpc_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_traffic_package_price_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrafficPackagePriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_traffic_package_price_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTrafficPackagePriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_traffic_package_price_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTrafficPackagePriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_traffic_package_price_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountTrafficPackagePricesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_traffic_package_price_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTrafficPackagePricesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_traffic_package_price_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTrafficPackagePricesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_traffic_package_price_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllTrafficPackagePricesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_traffic_package_price_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllTrafficPackagePricesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_traffic_package_price_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_traffic_package_price_proto_goTypes,
		DependencyIndexes: file_service_traffic_package_price_proto_depIdxs,
		MessageInfos:      file_service_traffic_package_price_proto_msgTypes,
	}.Build()
	File_service_traffic_package_price_proto = out.File
	file_service_traffic_package_price_proto_rawDesc = nil
	file_service_traffic_package_price_proto_goTypes = nil
	file_service_traffic_package_price_proto_depIdxs = nil
}
