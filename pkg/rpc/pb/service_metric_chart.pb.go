// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: service_metric_chart.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建图表
type CreateMetricChartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricItemId    int64    `protobuf:"varint,1,opt,name=metricItemId,proto3" json:"metricItemId,omitempty"`
	Name            string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type            string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	WidthDiv        int32    `protobuf:"varint,4,opt,name=widthDiv,proto3" json:"widthDiv,omitempty"`
	ParamsJSON      []byte   `protobuf:"bytes,5,opt,name=paramsJSON,proto3" json:"paramsJSON,omitempty"`
	MaxItems        int32    `protobuf:"varint,6,opt,name=maxItems,proto3" json:"maxItems,omitempty"`
	IgnoreEmptyKeys bool     `protobuf:"varint,7,opt,name=ignoreEmptyKeys,proto3" json:"ignoreEmptyKeys,omitempty"`
	IgnoredKeys     []string `protobuf:"bytes,8,rep,name=ignoredKeys,proto3" json:"ignoredKeys,omitempty"`
}

func (x *CreateMetricChartRequest) Reset() {
	*x = CreateMetricChartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_metric_chart_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMetricChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMetricChartRequest) ProtoMessage() {}

func (x *CreateMetricChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_metric_chart_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMetricChartRequest.ProtoReflect.Descriptor instead.
func (*CreateMetricChartRequest) Descriptor() ([]byte, []int) {
	return file_service_metric_chart_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMetricChartRequest) GetMetricItemId() int64 {
	if x != nil {
		return x.MetricItemId
	}
	return 0
}

func (x *CreateMetricChartRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMetricChartRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateMetricChartRequest) GetWidthDiv() int32 {
	if x != nil {
		return x.WidthDiv
	}
	return 0
}

func (x *CreateMetricChartRequest) GetParamsJSON() []byte {
	if x != nil {
		return x.ParamsJSON
	}
	return nil
}

func (x *CreateMetricChartRequest) GetMaxItems() int32 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *CreateMetricChartRequest) GetIgnoreEmptyKeys() bool {
	if x != nil {
		return x.IgnoreEmptyKeys
	}
	return false
}

func (x *CreateMetricChartRequest) GetIgnoredKeys() []string {
	if x != nil {
		return x.IgnoredKeys
	}
	return nil
}

type CreateMetricChartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricChartId int64 `protobuf:"varint,1,opt,name=metricChartId,proto3" json:"metricChartId,omitempty"`
}

func (x *CreateMetricChartResponse) Reset() {
	*x = CreateMetricChartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_metric_chart_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMetricChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMetricChartResponse) ProtoMessage() {}

func (x *CreateMetricChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_metric_chart_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMetricChartResponse.ProtoReflect.Descriptor instead.
func (*CreateMetricChartResponse) Descriptor() ([]byte, []int) {
	return file_service_metric_chart_proto_rawDescGZIP(), []int{1}
}

func (x *CreateMetricChartResponse) GetMetricChartId() int64 {
	if x != nil {
		return x.MetricChartId
	}
	return 0
}

// 修改图表
type UpdateMetricChartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricChartId   int64    `protobuf:"varint,1,opt,name=metricChartId,proto3" json:"metricChartId,omitempty"`
	Name            string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type            string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	WidthDiv        int32    `protobuf:"varint,4,opt,name=widthDiv,proto3" json:"widthDiv,omitempty"`
	ParamsJSON      []byte   `protobuf:"bytes,5,opt,name=paramsJSON,proto3" json:"paramsJSON,omitempty"`
	IsOn            bool     `protobuf:"varint,6,opt,name=isOn,proto3" json:"isOn,omitempty"`
	MaxItems        int32    `protobuf:"varint,7,opt,name=maxItems,proto3" json:"maxItems,omitempty"`
	IgnoreEmptyKeys bool     `protobuf:"varint,8,opt,name=ignoreEmptyKeys,proto3" json:"ignoreEmptyKeys,omitempty"`
	IgnoredKeys     []string `protobuf:"bytes,9,rep,name=ignoredKeys,proto3" json:"ignoredKeys,omitempty"`
}

func (x *UpdateMetricChartRequest) Reset() {
	*x = UpdateMetricChartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_metric_chart_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMetricChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMetricChartRequest) ProtoMessage() {}

func (x *UpdateMetricChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_metric_chart_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMetricChartRequest.ProtoReflect.Descriptor instead.
func (*UpdateMetricChartRequest) Descriptor() ([]byte, []int) {
	return file_service_metric_chart_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateMetricChartRequest) GetMetricChartId() int64 {
	if x != nil {
		return x.MetricChartId
	}
	return 0
}

func (x *UpdateMetricChartRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMetricChartRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateMetricChartRequest) GetWidthDiv() int32 {
	if x != nil {
		return x.WidthDiv
	}
	return 0
}

func (x *UpdateMetricChartRequest) GetParamsJSON() []byte {
	if x != nil {
		return x.ParamsJSON
	}
	return nil
}

func (x *UpdateMetricChartRequest) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *UpdateMetricChartRequest) GetMaxItems() int32 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *UpdateMetricChartRequest) GetIgnoreEmptyKeys() bool {
	if x != nil {
		return x.IgnoreEmptyKeys
	}
	return false
}

func (x *UpdateMetricChartRequest) GetIgnoredKeys() []string {
	if x != nil {
		return x.IgnoredKeys
	}
	return nil
}

// 查找单个图表
type FindEnabledMetricChartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricChartId int64 `protobuf:"varint,1,opt,name=metricChartId,proto3" json:"metricChartId,omitempty"`
}

func (x *FindEnabledMetricChartRequest) Reset() {
	*x = FindEnabledMetricChartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_metric_chart_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledMetricChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledMetricChartRequest) ProtoMessage() {}

func (x *FindEnabledMetricChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_metric_chart_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledMetricChartRequest.ProtoReflect.Descriptor instead.
func (*FindEnabledMetricChartRequest) Descriptor() ([]byte, []int) {
	return file_service_metric_chart_proto_rawDescGZIP(), []int{3}
}

func (x *FindEnabledMetricChartRequest) GetMetricChartId() int64 {
	if x != nil {
		return x.MetricChartId
	}
	return 0
}

type FindEnabledMetricChartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricChart *MetricChart `protobuf:"bytes,1,opt,name=metricChart,proto3" json:"metricChart,omitempty"`
}

func (x *FindEnabledMetricChartResponse) Reset() {
	*x = FindEnabledMetricChartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_metric_chart_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledMetricChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledMetricChartResponse) ProtoMessage() {}

func (x *FindEnabledMetricChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_metric_chart_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledMetricChartResponse.ProtoReflect.Descriptor instead.
func (*FindEnabledMetricChartResponse) Descriptor() ([]byte, []int) {
	return file_service_metric_chart_proto_rawDescGZIP(), []int{4}
}

func (x *FindEnabledMetricChartResponse) GetMetricChart() *MetricChart {
	if x != nil {
		return x.MetricChart
	}
	return nil
}

// 计算图表数量
type CountEnabledMetricChartsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricItemId int64 `protobuf:"varint,1,opt,name=metricItemId,proto3" json:"metricItemId,omitempty"`
}

func (x *CountEnabledMetricChartsRequest) Reset() {
	*x = CountEnabledMetricChartsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_metric_chart_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountEnabledMetricChartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountEnabledMetricChartsRequest) ProtoMessage() {}

func (x *CountEnabledMetricChartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_metric_chart_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountEnabledMetricChartsRequest.ProtoReflect.Descriptor instead.
func (*CountEnabledMetricChartsRequest) Descriptor() ([]byte, []int) {
	return file_service_metric_chart_proto_rawDescGZIP(), []int{5}
}

func (x *CountEnabledMetricChartsRequest) GetMetricItemId() int64 {
	if x != nil {
		return x.MetricItemId
	}
	return 0
}

// 列出单页图表
type ListEnabledMetricChartsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricItemId int64 `protobuf:"varint,1,opt,name=metricItemId,proto3" json:"metricItemId,omitempty"`
	Offset       int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Size         int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListEnabledMetricChartsRequest) Reset() {
	*x = ListEnabledMetricChartsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_metric_chart_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnabledMetricChartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnabledMetricChartsRequest) ProtoMessage() {}

func (x *ListEnabledMetricChartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_metric_chart_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnabledMetricChartsRequest.ProtoReflect.Descriptor instead.
func (*ListEnabledMetricChartsRequest) Descriptor() ([]byte, []int) {
	return file_service_metric_chart_proto_rawDescGZIP(), []int{6}
}

func (x *ListEnabledMetricChartsRequest) GetMetricItemId() int64 {
	if x != nil {
		return x.MetricItemId
	}
	return 0
}

func (x *ListEnabledMetricChartsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListEnabledMetricChartsRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListEnabledMetricChartsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricCharts []*MetricChart `protobuf:"bytes,1,rep,name=metricCharts,proto3" json:"metricCharts,omitempty"`
}

func (x *ListEnabledMetricChartsResponse) Reset() {
	*x = ListEnabledMetricChartsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_metric_chart_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnabledMetricChartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnabledMetricChartsResponse) ProtoMessage() {}

func (x *ListEnabledMetricChartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_metric_chart_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnabledMetricChartsResponse.ProtoReflect.Descriptor instead.
func (*ListEnabledMetricChartsResponse) Descriptor() ([]byte, []int) {
	return file_service_metric_chart_proto_rawDescGZIP(), []int{7}
}

func (x *ListEnabledMetricChartsResponse) GetMetricCharts() []*MetricChart {
	if x != nil {
		return x.MetricCharts
	}
	return nil
}

// 删除图表
type DeleteMetricChartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricChartId int64 `protobuf:"varint,1,opt,name=metricChartId,proto3" json:"metricChartId,omitempty"`
}

func (x *DeleteMetricChartRequest) Reset() {
	*x = DeleteMetricChartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_metric_chart_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMetricChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMetricChartRequest) ProtoMessage() {}

func (x *DeleteMetricChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_metric_chart_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMetricChartRequest.ProtoReflect.Descriptor instead.
func (*DeleteMetricChartRequest) Descriptor() ([]byte, []int) {
	return file_service_metric_chart_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteMetricChartRequest) GetMetricChartId() int64 {
	if x != nil {
		return x.MetricChartId
	}
	return 0
}

var File_service_metric_chart_proto protoreflect.FileDescriptor

var file_service_metric_chart_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x1a, 0x1f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x02, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x64, 0x74, 0x68, 0x44, 0x69,
	0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x64, 0x74, 0x68, 0x44, 0x69,
	0x76, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4a, 0x53, 0x4f, 0x4e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4a, 0x53, 0x4f,
	0x4e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x41, 0x0a, 0x19, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22, 0xa0, 0x02, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x44, 0x69, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x44, 0x69, 0x76, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4a, 0x53, 0x4f,
	0x4e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4a,
	0x53, 0x4f, 0x4e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x4f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x69, 0x73, 0x4f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x22,
	0x45, 0x0a, 0x1d, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x0b,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x22, 0x45, 0x0a, 0x1f, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x22, 0x70, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x22, 0x56, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x0c,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x22, 0x40, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x64, 0x32, 0x88,
	0x04, 0x0a, 0x12, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x1c, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x5f, 0x0a, 0x16, 0x66, 0x69,
	0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x12, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x18, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x50, 0x43, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x62, 0x0a, 0x17, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x12, 0x22, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_metric_chart_proto_rawDescOnce sync.Once
	file_service_metric_chart_proto_rawDescData = file_service_metric_chart_proto_rawDesc
)

func file_service_metric_chart_proto_rawDescGZIP() []byte {
	file_service_metric_chart_proto_rawDescOnce.Do(func() {
		file_service_metric_chart_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_metric_chart_proto_rawDescData)
	})
	return file_service_metric_chart_proto_rawDescData
}

var file_service_metric_chart_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_service_metric_chart_proto_goTypes = []interface{}{
	(*CreateMetricChartRequest)(nil),        // 0: pb.CreateMetricChartRequest
	(*CreateMetricChartResponse)(nil),       // 1: pb.CreateMetricChartResponse
	(*UpdateMetricChartRequest)(nil),        // 2: pb.UpdateMetricChartRequest
	(*FindEnabledMetricChartRequest)(nil),   // 3: pb.FindEnabledMetricChartRequest
	(*FindEnabledMetricChartResponse)(nil),  // 4: pb.FindEnabledMetricChartResponse
	(*CountEnabledMetricChartsRequest)(nil), // 5: pb.CountEnabledMetricChartsRequest
	(*ListEnabledMetricChartsRequest)(nil),  // 6: pb.ListEnabledMetricChartsRequest
	(*ListEnabledMetricChartsResponse)(nil), // 7: pb.ListEnabledMetricChartsResponse
	(*DeleteMetricChartRequest)(nil),        // 8: pb.DeleteMetricChartRequest
	(*MetricChart)(nil),                     // 9: pb.MetricChart
	(*RPCSuccess)(nil),                      // 10: pb.RPCSuccess
	(*RPCCountResponse)(nil),                // 11: pb.RPCCountResponse
}
var file_service_metric_chart_proto_depIdxs = []int32{
	9,  // 0: pb.FindEnabledMetricChartResponse.metricChart:type_name -> pb.MetricChart
	9,  // 1: pb.ListEnabledMetricChartsResponse.metricCharts:type_name -> pb.MetricChart
	0,  // 2: pb.MetricChartService.createMetricChart:input_type -> pb.CreateMetricChartRequest
	2,  // 3: pb.MetricChartService.updateMetricChart:input_type -> pb.UpdateMetricChartRequest
	3,  // 4: pb.MetricChartService.findEnabledMetricChart:input_type -> pb.FindEnabledMetricChartRequest
	5,  // 5: pb.MetricChartService.countEnabledMetricCharts:input_type -> pb.CountEnabledMetricChartsRequest
	6,  // 6: pb.MetricChartService.listEnabledMetricCharts:input_type -> pb.ListEnabledMetricChartsRequest
	8,  // 7: pb.MetricChartService.deleteMetricChart:input_type -> pb.DeleteMetricChartRequest
	1,  // 8: pb.MetricChartService.createMetricChart:output_type -> pb.CreateMetricChartResponse
	10, // 9: pb.MetricChartService.updateMetricChart:output_type -> pb.RPCSuccess
	4,  // 10: pb.MetricChartService.findEnabledMetricChart:output_type -> pb.FindEnabledMetricChartResponse
	11, // 11: pb.MetricChartService.countEnabledMetricCharts:output_type -> pb.RPCCountResponse
	7,  // 12: pb.MetricChartService.listEnabledMetricCharts:output_type -> pb.ListEnabledMetricChartsResponse
	10, // 13: pb.MetricChartService.deleteMetricChart:output_type -> pb.RPCSuccess
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_service_metric_chart_proto_init() }
func file_service_metric_chart_proto_init() {
	if File_service_metric_chart_proto != nil {
		return
	}
	file_models_model_metric_chart_proto_init()
	file_models_rpc_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_metric_chart_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMetricChartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_metric_chart_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMetricChartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_metric_chart_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMetricChartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_metric_chart_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledMetricChartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_metric_chart_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledMetricChartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_metric_chart_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountEnabledMetricChartsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_metric_chart_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnabledMetricChartsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_metric_chart_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnabledMetricChartsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_metric_chart_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMetricChartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_metric_chart_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_metric_chart_proto_goTypes,
		DependencyIndexes: file_service_metric_chart_proto_depIdxs,
		MessageInfos:      file_service_metric_chart_proto_msgTypes,
	}.Build()
	File_service_metric_chart_proto = out.File
	file_service_metric_chart_proto_rawDesc = nil
	file_service_metric_chart_proto_goTypes = nil
	file_service_metric_chart_proto_depIdxs = nil
}
