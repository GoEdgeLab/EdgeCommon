// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.19.4
// source: service_message_receiver.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 修改接收者
type UpdateMessageReceiversRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role             string                                                     `protobuf:"bytes,7,opt,name=role,proto3" json:"role,omitempty"`
	NodeClusterId    int64                                                      `protobuf:"varint,1,opt,name=nodeClusterId,proto3" json:"nodeClusterId,omitempty"`
	NodeId           int64                                                      `protobuf:"varint,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	ServerId         int64                                                      `protobuf:"varint,3,opt,name=serverId,proto3" json:"serverId,omitempty"`
	ParamsJSON       []byte                                                     `protobuf:"bytes,5,opt,name=paramsJSON,proto3" json:"paramsJSON,omitempty"`
	RecipientOptions map[string]*UpdateMessageReceiversRequest_RecipientOptions `protobuf:"bytes,6,rep,name=recipientOptions,proto3" json:"recipientOptions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // type => options
}

func (x *UpdateMessageReceiversRequest) Reset() {
	*x = UpdateMessageReceiversRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_receiver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMessageReceiversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessageReceiversRequest) ProtoMessage() {}

func (x *UpdateMessageReceiversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_receiver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessageReceiversRequest.ProtoReflect.Descriptor instead.
func (*UpdateMessageReceiversRequest) Descriptor() ([]byte, []int) {
	return file_service_message_receiver_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateMessageReceiversRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UpdateMessageReceiversRequest) GetNodeClusterId() int64 {
	if x != nil {
		return x.NodeClusterId
	}
	return 0
}

func (x *UpdateMessageReceiversRequest) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *UpdateMessageReceiversRequest) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *UpdateMessageReceiversRequest) GetParamsJSON() []byte {
	if x != nil {
		return x.ParamsJSON
	}
	return nil
}

func (x *UpdateMessageReceiversRequest) GetRecipientOptions() map[string]*UpdateMessageReceiversRequest_RecipientOptions {
	if x != nil {
		return x.RecipientOptions
	}
	return nil
}

// 查找接收者
type FindAllEnabledMessageReceiversRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role          string `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	NodeClusterId int64  `protobuf:"varint,1,opt,name=nodeClusterId,proto3" json:"nodeClusterId,omitempty"`
	NodeId        int64  `protobuf:"varint,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	ServerId      int64  `protobuf:"varint,3,opt,name=serverId,proto3" json:"serverId,omitempty"`
}

func (x *FindAllEnabledMessageReceiversRequest) Reset() {
	*x = FindAllEnabledMessageReceiversRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_receiver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllEnabledMessageReceiversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllEnabledMessageReceiversRequest) ProtoMessage() {}

func (x *FindAllEnabledMessageReceiversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_receiver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllEnabledMessageReceiversRequest.ProtoReflect.Descriptor instead.
func (*FindAllEnabledMessageReceiversRequest) Descriptor() ([]byte, []int) {
	return file_service_message_receiver_proto_rawDescGZIP(), []int{1}
}

func (x *FindAllEnabledMessageReceiversRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *FindAllEnabledMessageReceiversRequest) GetNodeClusterId() int64 {
	if x != nil {
		return x.NodeClusterId
	}
	return 0
}

func (x *FindAllEnabledMessageReceiversRequest) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *FindAllEnabledMessageReceiversRequest) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type FindAllEnabledMessageReceiversResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageReceivers []*MessageReceiver `protobuf:"bytes,1,rep,name=messageReceivers,proto3" json:"messageReceivers,omitempty"`
}

func (x *FindAllEnabledMessageReceiversResponse) Reset() {
	*x = FindAllEnabledMessageReceiversResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_receiver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllEnabledMessageReceiversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllEnabledMessageReceiversResponse) ProtoMessage() {}

func (x *FindAllEnabledMessageReceiversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_receiver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllEnabledMessageReceiversResponse.ProtoReflect.Descriptor instead.
func (*FindAllEnabledMessageReceiversResponse) Descriptor() ([]byte, []int) {
	return file_service_message_receiver_proto_rawDescGZIP(), []int{2}
}

func (x *FindAllEnabledMessageReceiversResponse) GetMessageReceivers() []*MessageReceiver {
	if x != nil {
		return x.MessageReceivers
	}
	return nil
}

// 删除接收者
type DeleteMessageReceiverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageReceiverId int64 `protobuf:"varint,1,opt,name=messageReceiverId,proto3" json:"messageReceiverId,omitempty"`
}

func (x *DeleteMessageReceiverRequest) Reset() {
	*x = DeleteMessageReceiverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_receiver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageReceiverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageReceiverRequest) ProtoMessage() {}

func (x *DeleteMessageReceiverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_receiver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageReceiverRequest.ProtoReflect.Descriptor instead.
func (*DeleteMessageReceiverRequest) Descriptor() ([]byte, []int) {
	return file_service_message_receiver_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteMessageReceiverRequest) GetMessageReceiverId() int64 {
	if x != nil {
		return x.MessageReceiverId
	}
	return 0
}

// 计算接收者数量
type CountAllEnabledMessageReceiversRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role          string `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	NodeClusterId int64  `protobuf:"varint,1,opt,name=nodeClusterId,proto3" json:"nodeClusterId,omitempty"`
	NodeId        int64  `protobuf:"varint,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	ServerId      int64  `protobuf:"varint,3,opt,name=serverId,proto3" json:"serverId,omitempty"`
}

func (x *CountAllEnabledMessageReceiversRequest) Reset() {
	*x = CountAllEnabledMessageReceiversRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_receiver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAllEnabledMessageReceiversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAllEnabledMessageReceiversRequest) ProtoMessage() {}

func (x *CountAllEnabledMessageReceiversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_receiver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAllEnabledMessageReceiversRequest.ProtoReflect.Descriptor instead.
func (*CountAllEnabledMessageReceiversRequest) Descriptor() ([]byte, []int) {
	return file_service_message_receiver_proto_rawDescGZIP(), []int{4}
}

func (x *CountAllEnabledMessageReceiversRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CountAllEnabledMessageReceiversRequest) GetNodeClusterId() int64 {
	if x != nil {
		return x.NodeClusterId
	}
	return 0
}

func (x *CountAllEnabledMessageReceiversRequest) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *CountAllEnabledMessageReceiversRequest) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type UpdateMessageReceiversRequest_RecipientOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageRecipientId      int64 `protobuf:"varint,1,opt,name=messageRecipientId,proto3" json:"messageRecipientId,omitempty"`
	MessageRecipientGroupId int64 `protobuf:"varint,2,opt,name=messageRecipientGroupId,proto3" json:"messageRecipientGroupId,omitempty"`
}

func (x *UpdateMessageReceiversRequest_RecipientOption) Reset() {
	*x = UpdateMessageReceiversRequest_RecipientOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_receiver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMessageReceiversRequest_RecipientOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessageReceiversRequest_RecipientOption) ProtoMessage() {}

func (x *UpdateMessageReceiversRequest_RecipientOption) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_receiver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessageReceiversRequest_RecipientOption.ProtoReflect.Descriptor instead.
func (*UpdateMessageReceiversRequest_RecipientOption) Descriptor() ([]byte, []int) {
	return file_service_message_receiver_proto_rawDescGZIP(), []int{0, 1}
}

func (x *UpdateMessageReceiversRequest_RecipientOption) GetMessageRecipientId() int64 {
	if x != nil {
		return x.MessageRecipientId
	}
	return 0
}

func (x *UpdateMessageReceiversRequest_RecipientOption) GetMessageRecipientGroupId() int64 {
	if x != nil {
		return x.MessageRecipientGroupId
	}
	return 0
}

type UpdateMessageReceiversRequest_RecipientOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipientOptions []*UpdateMessageReceiversRequest_RecipientOption `protobuf:"bytes,1,rep,name=recipientOptions,proto3" json:"recipientOptions,omitempty"`
}

func (x *UpdateMessageReceiversRequest_RecipientOptions) Reset() {
	*x = UpdateMessageReceiversRequest_RecipientOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_receiver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMessageReceiversRequest_RecipientOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessageReceiversRequest_RecipientOptions) ProtoMessage() {}

func (x *UpdateMessageReceiversRequest_RecipientOptions) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_receiver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessageReceiversRequest_RecipientOptions.ProtoReflect.Descriptor instead.
func (*UpdateMessageReceiversRequest_RecipientOptions) Descriptor() ([]byte, []int) {
	return file_service_message_receiver_proto_rawDescGZIP(), []int{0, 2}
}

func (x *UpdateMessageReceiversRequest_RecipientOptions) GetRecipientOptions() []*UpdateMessageReceiversRequest_RecipientOption {
	if x != nil {
		return x.RecipientOptions
	}
	return nil
}

var File_service_message_receiver_proto protoreflect.FileDescriptor

var file_service_message_receiver_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x1a, 0x23, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfb, 0x04, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f,
	0x64, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4a, 0x53,
	0x4f, 0x4e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x63, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x77, 0x0a, 0x15, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x7b, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a,
	0x71, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x5d, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x10, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x25, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x26, 0x46, 0x69,
	0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x22, 0x4c, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x26, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x32, 0x8e, 0x03, 0x0a,
	0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x12, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x77, 0x0a, 0x1e, 0x66, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x15, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50,
	0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x63, 0x0a, 0x1f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_message_receiver_proto_rawDescOnce sync.Once
	file_service_message_receiver_proto_rawDescData = file_service_message_receiver_proto_rawDesc
)

func file_service_message_receiver_proto_rawDescGZIP() []byte {
	file_service_message_receiver_proto_rawDescOnce.Do(func() {
		file_service_message_receiver_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_message_receiver_proto_rawDescData)
	})
	return file_service_message_receiver_proto_rawDescData
}

var file_service_message_receiver_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_service_message_receiver_proto_goTypes = []interface{}{
	(*UpdateMessageReceiversRequest)(nil),          // 0: pb.UpdateMessageReceiversRequest
	(*FindAllEnabledMessageReceiversRequest)(nil),  // 1: pb.FindAllEnabledMessageReceiversRequest
	(*FindAllEnabledMessageReceiversResponse)(nil), // 2: pb.FindAllEnabledMessageReceiversResponse
	(*DeleteMessageReceiverRequest)(nil),           // 3: pb.DeleteMessageReceiverRequest
	(*CountAllEnabledMessageReceiversRequest)(nil), // 4: pb.CountAllEnabledMessageReceiversRequest
	nil, // 5: pb.UpdateMessageReceiversRequest.RecipientOptionsEntry
	(*UpdateMessageReceiversRequest_RecipientOption)(nil),  // 6: pb.UpdateMessageReceiversRequest.RecipientOption
	(*UpdateMessageReceiversRequest_RecipientOptions)(nil), // 7: pb.UpdateMessageReceiversRequest.RecipientOptions
	(*MessageReceiver)(nil),                                // 8: pb.MessageReceiver
	(*RPCSuccess)(nil),                                     // 9: pb.RPCSuccess
	(*RPCCountResponse)(nil),                               // 10: pb.RPCCountResponse
}
var file_service_message_receiver_proto_depIdxs = []int32{
	5,  // 0: pb.UpdateMessageReceiversRequest.recipientOptions:type_name -> pb.UpdateMessageReceiversRequest.RecipientOptionsEntry
	8,  // 1: pb.FindAllEnabledMessageReceiversResponse.messageReceivers:type_name -> pb.MessageReceiver
	7,  // 2: pb.UpdateMessageReceiversRequest.RecipientOptionsEntry.value:type_name -> pb.UpdateMessageReceiversRequest.RecipientOptions
	6,  // 3: pb.UpdateMessageReceiversRequest.RecipientOptions.recipientOptions:type_name -> pb.UpdateMessageReceiversRequest.RecipientOption
	0,  // 4: pb.MessageReceiverService.updateMessageReceivers:input_type -> pb.UpdateMessageReceiversRequest
	1,  // 5: pb.MessageReceiverService.findAllEnabledMessageReceivers:input_type -> pb.FindAllEnabledMessageReceiversRequest
	3,  // 6: pb.MessageReceiverService.deleteMessageReceiver:input_type -> pb.DeleteMessageReceiverRequest
	4,  // 7: pb.MessageReceiverService.countAllEnabledMessageReceivers:input_type -> pb.CountAllEnabledMessageReceiversRequest
	9,  // 8: pb.MessageReceiverService.updateMessageReceivers:output_type -> pb.RPCSuccess
	2,  // 9: pb.MessageReceiverService.findAllEnabledMessageReceivers:output_type -> pb.FindAllEnabledMessageReceiversResponse
	9,  // 10: pb.MessageReceiverService.deleteMessageReceiver:output_type -> pb.RPCSuccess
	10, // 11: pb.MessageReceiverService.countAllEnabledMessageReceivers:output_type -> pb.RPCCountResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_service_message_receiver_proto_init() }
func file_service_message_receiver_proto_init() {
	if File_service_message_receiver_proto != nil {
		return
	}
	file_models_model_message_receiver_proto_init()
	file_models_rpc_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_message_receiver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMessageReceiversRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_receiver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllEnabledMessageReceiversRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_receiver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllEnabledMessageReceiversResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_receiver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageReceiverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_receiver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAllEnabledMessageReceiversRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_receiver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMessageReceiversRequest_RecipientOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_receiver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMessageReceiversRequest_RecipientOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_message_receiver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_message_receiver_proto_goTypes,
		DependencyIndexes: file_service_message_receiver_proto_depIdxs,
		MessageInfos:      file_service_message_receiver_proto_msgTypes,
	}.Build()
	File_service_message_receiver_proto = out.File
	file_service_message_receiver_proto_rawDesc = nil
	file_service_message_receiver_proto_goTypes = nil
	file_service_message_receiver_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MessageReceiverServiceClient is the client API for MessageReceiverService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageReceiverServiceClient interface {
	// 修改接收者
	UpdateMessageReceivers(ctx context.Context, in *UpdateMessageReceiversRequest, opts ...grpc.CallOption) (*RPCSuccess, error)
	// 查找接收者
	FindAllEnabledMessageReceivers(ctx context.Context, in *FindAllEnabledMessageReceiversRequest, opts ...grpc.CallOption) (*FindAllEnabledMessageReceiversResponse, error)
	// 删除接收者
	DeleteMessageReceiver(ctx context.Context, in *DeleteMessageReceiverRequest, opts ...grpc.CallOption) (*RPCSuccess, error)
	// 计算接收者数量
	CountAllEnabledMessageReceivers(ctx context.Context, in *CountAllEnabledMessageReceiversRequest, opts ...grpc.CallOption) (*RPCCountResponse, error)
}

type messageReceiverServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMessageReceiverServiceClient(cc grpc.ClientConnInterface) MessageReceiverServiceClient {
	return &messageReceiverServiceClient{cc}
}

func (c *messageReceiverServiceClient) UpdateMessageReceivers(ctx context.Context, in *UpdateMessageReceiversRequest, opts ...grpc.CallOption) (*RPCSuccess, error) {
	out := new(RPCSuccess)
	err := c.cc.Invoke(ctx, "/pb.MessageReceiverService/updateMessageReceivers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageReceiverServiceClient) FindAllEnabledMessageReceivers(ctx context.Context, in *FindAllEnabledMessageReceiversRequest, opts ...grpc.CallOption) (*FindAllEnabledMessageReceiversResponse, error) {
	out := new(FindAllEnabledMessageReceiversResponse)
	err := c.cc.Invoke(ctx, "/pb.MessageReceiverService/findAllEnabledMessageReceivers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageReceiverServiceClient) DeleteMessageReceiver(ctx context.Context, in *DeleteMessageReceiverRequest, opts ...grpc.CallOption) (*RPCSuccess, error) {
	out := new(RPCSuccess)
	err := c.cc.Invoke(ctx, "/pb.MessageReceiverService/deleteMessageReceiver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageReceiverServiceClient) CountAllEnabledMessageReceivers(ctx context.Context, in *CountAllEnabledMessageReceiversRequest, opts ...grpc.CallOption) (*RPCCountResponse, error) {
	out := new(RPCCountResponse)
	err := c.cc.Invoke(ctx, "/pb.MessageReceiverService/countAllEnabledMessageReceivers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessageReceiverServiceServer is the server API for MessageReceiverService service.
type MessageReceiverServiceServer interface {
	// 修改接收者
	UpdateMessageReceivers(context.Context, *UpdateMessageReceiversRequest) (*RPCSuccess, error)
	// 查找接收者
	FindAllEnabledMessageReceivers(context.Context, *FindAllEnabledMessageReceiversRequest) (*FindAllEnabledMessageReceiversResponse, error)
	// 删除接收者
	DeleteMessageReceiver(context.Context, *DeleteMessageReceiverRequest) (*RPCSuccess, error)
	// 计算接收者数量
	CountAllEnabledMessageReceivers(context.Context, *CountAllEnabledMessageReceiversRequest) (*RPCCountResponse, error)
}

// UnimplementedMessageReceiverServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMessageReceiverServiceServer struct {
}

func (*UnimplementedMessageReceiverServiceServer) UpdateMessageReceivers(context.Context, *UpdateMessageReceiversRequest) (*RPCSuccess, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMessageReceivers not implemented")
}
func (*UnimplementedMessageReceiverServiceServer) FindAllEnabledMessageReceivers(context.Context, *FindAllEnabledMessageReceiversRequest) (*FindAllEnabledMessageReceiversResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllEnabledMessageReceivers not implemented")
}
func (*UnimplementedMessageReceiverServiceServer) DeleteMessageReceiver(context.Context, *DeleteMessageReceiverRequest) (*RPCSuccess, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMessageReceiver not implemented")
}
func (*UnimplementedMessageReceiverServiceServer) CountAllEnabledMessageReceivers(context.Context, *CountAllEnabledMessageReceiversRequest) (*RPCCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountAllEnabledMessageReceivers not implemented")
}

func RegisterMessageReceiverServiceServer(s *grpc.Server, srv MessageReceiverServiceServer) {
	s.RegisterService(&_MessageReceiverService_serviceDesc, srv)
}

func _MessageReceiverService_UpdateMessageReceivers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMessageReceiversRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageReceiverServiceServer).UpdateMessageReceivers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MessageReceiverService/UpdateMessageReceivers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageReceiverServiceServer).UpdateMessageReceivers(ctx, req.(*UpdateMessageReceiversRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageReceiverService_FindAllEnabledMessageReceivers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindAllEnabledMessageReceiversRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageReceiverServiceServer).FindAllEnabledMessageReceivers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MessageReceiverService/FindAllEnabledMessageReceivers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageReceiverServiceServer).FindAllEnabledMessageReceivers(ctx, req.(*FindAllEnabledMessageReceiversRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageReceiverService_DeleteMessageReceiver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMessageReceiverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageReceiverServiceServer).DeleteMessageReceiver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MessageReceiverService/DeleteMessageReceiver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageReceiverServiceServer).DeleteMessageReceiver(ctx, req.(*DeleteMessageReceiverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageReceiverService_CountAllEnabledMessageReceivers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountAllEnabledMessageReceiversRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageReceiverServiceServer).CountAllEnabledMessageReceivers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MessageReceiverService/CountAllEnabledMessageReceivers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageReceiverServiceServer).CountAllEnabledMessageReceivers(ctx, req.(*CountAllEnabledMessageReceiversRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MessageReceiverService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.MessageReceiverService",
	HandlerType: (*MessageReceiverServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "updateMessageReceivers",
			Handler:    _MessageReceiverService_UpdateMessageReceivers_Handler,
		},
		{
			MethodName: "findAllEnabledMessageReceivers",
			Handler:    _MessageReceiverService_FindAllEnabledMessageReceivers_Handler,
		},
		{
			MethodName: "deleteMessageReceiver",
			Handler:    _MessageReceiverService_DeleteMessageReceiver_Handler,
		},
		{
			MethodName: "countAllEnabledMessageReceivers",
			Handler:    _MessageReceiverService_CountAllEnabledMessageReceivers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service_message_receiver.proto",
}
