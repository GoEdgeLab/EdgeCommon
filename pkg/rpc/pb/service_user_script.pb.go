// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: service_user_script.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查找单个用户脚本信息
type FindUserScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserScriptId int64 `protobuf:"varint,1,opt,name=userScriptId,proto3" json:"userScriptId,omitempty"` // 用户脚本ID
}

func (x *FindUserScriptRequest) Reset() {
	*x = FindUserScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_script_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserScriptRequest) ProtoMessage() {}

func (x *FindUserScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_script_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserScriptRequest.ProtoReflect.Descriptor instead.
func (*FindUserScriptRequest) Descriptor() ([]byte, []int) {
	return file_service_user_script_proto_rawDescGZIP(), []int{0}
}

func (x *FindUserScriptRequest) GetUserScriptId() int64 {
	if x != nil {
		return x.UserScriptId
	}
	return 0
}

type FindUserScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserScript *UserScript `protobuf:"bytes,1,opt,name=userScript,proto3" json:"userScript,omitempty"` // 用户脚本信息
}

func (x *FindUserScriptResponse) Reset() {
	*x = FindUserScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_script_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserScriptResponse) ProtoMessage() {}

func (x *FindUserScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_script_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserScriptResponse.ProtoReflect.Descriptor instead.
func (*FindUserScriptResponse) Descriptor() ([]byte, []int) {
	return file_service_user_script_proto_rawDescGZIP(), []int{1}
}

func (x *FindUserScriptResponse) GetUserScript() *UserScript {
	if x != nil {
		return x.UserScript
	}
	return nil
}

// 根据代码MD5查找脚本
type FindUserScriptWithMD5Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeMD5 string `protobuf:"bytes,1,opt,name=codeMD5,proto3" json:"codeMD5,omitempty"` // 代码MD5（32位）
}

func (x *FindUserScriptWithMD5Request) Reset() {
	*x = FindUserScriptWithMD5Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_script_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserScriptWithMD5Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserScriptWithMD5Request) ProtoMessage() {}

func (x *FindUserScriptWithMD5Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_script_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserScriptWithMD5Request.ProtoReflect.Descriptor instead.
func (*FindUserScriptWithMD5Request) Descriptor() ([]byte, []int) {
	return file_service_user_script_proto_rawDescGZIP(), []int{2}
}

func (x *FindUserScriptWithMD5Request) GetCodeMD5() string {
	if x != nil {
		return x.CodeMD5
	}
	return ""
}

type FindUserScriptWithMD5Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserScript *UserScript `protobuf:"bytes,1,opt,name=userScript,proto3" json:"userScript,omitempty"` // 用户脚本信息
}

func (x *FindUserScriptWithMD5Response) Reset() {
	*x = FindUserScriptWithMD5Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_script_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserScriptWithMD5Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserScriptWithMD5Response) ProtoMessage() {}

func (x *FindUserScriptWithMD5Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_script_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserScriptWithMD5Response.ProtoReflect.Descriptor instead.
func (*FindUserScriptWithMD5Response) Descriptor() ([]byte, []int) {
	return file_service_user_script_proto_rawDescGZIP(), []int{3}
}

func (x *FindUserScriptWithMD5Response) GetUserScript() *UserScript {
	if x != nil {
		return x.UserScript
	}
	return nil
}

// 计算用户脚本数量
type CountUserScriptsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`         // 所属用户ID
	IsAuditing bool  `protobuf:"varint,2,opt,name=isAuditing,proto3" json:"isAuditing,omitempty"` // 是否正在审核
}

func (x *CountUserScriptsRequest) Reset() {
	*x = CountUserScriptsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_script_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserScriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserScriptsRequest) ProtoMessage() {}

func (x *CountUserScriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_script_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserScriptsRequest.ProtoReflect.Descriptor instead.
func (*CountUserScriptsRequest) Descriptor() ([]byte, []int) {
	return file_service_user_script_proto_rawDescGZIP(), []int{4}
}

func (x *CountUserScriptsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CountUserScriptsRequest) GetIsAuditing() bool {
	if x != nil {
		return x.IsAuditing
	}
	return false
}

// 列出单页用户脚本
type ListUserScriptsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`         // 所属用户ID
	IsAuditing bool  `protobuf:"varint,2,opt,name=isAuditing,proto3" json:"isAuditing,omitempty"` // 是否正在审核
	Offset     int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`         // 开始读取位置
	Size       int64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`             // 读取数量
}

func (x *ListUserScriptsRequest) Reset() {
	*x = ListUserScriptsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_script_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserScriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserScriptsRequest) ProtoMessage() {}

func (x *ListUserScriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_script_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserScriptsRequest.ProtoReflect.Descriptor instead.
func (*ListUserScriptsRequest) Descriptor() ([]byte, []int) {
	return file_service_user_script_proto_rawDescGZIP(), []int{5}
}

func (x *ListUserScriptsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListUserScriptsRequest) GetIsAuditing() bool {
	if x != nil {
		return x.IsAuditing
	}
	return false
}

func (x *ListUserScriptsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListUserScriptsRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListUserScriptsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserScripts []*UserScript `protobuf:"bytes,1,rep,name=userScripts,proto3" json:"userScripts,omitempty"` // 用户脚本列表
}

func (x *ListUserScriptsResponse) Reset() {
	*x = ListUserScriptsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_script_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserScriptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserScriptsResponse) ProtoMessage() {}

func (x *ListUserScriptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_script_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserScriptsResponse.ProtoReflect.Descriptor instead.
func (*ListUserScriptsResponse) Descriptor() ([]byte, []int) {
	return file_service_user_script_proto_rawDescGZIP(), []int{6}
}

func (x *ListUserScriptsResponse) GetUserScripts() []*UserScript {
	if x != nil {
		return x.UserScripts
	}
	return nil
}

// 审核并通过用户脚本
type PassUserScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserScriptId int64 `protobuf:"varint,1,opt,name=userScriptId,proto3" json:"userScriptId,omitempty"` // 用户脚本ID
}

func (x *PassUserScriptRequest) Reset() {
	*x = PassUserScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_script_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassUserScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassUserScriptRequest) ProtoMessage() {}

func (x *PassUserScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_script_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassUserScriptRequest.ProtoReflect.Descriptor instead.
func (*PassUserScriptRequest) Descriptor() ([]byte, []int) {
	return file_service_user_script_proto_rawDescGZIP(), []int{7}
}

func (x *PassUserScriptRequest) GetUserScriptId() int64 {
	if x != nil {
		return x.UserScriptId
	}
	return 0
}

// 审核并驳回用户脚本
type RejectUserScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserScriptId int64  `protobuf:"varint,1,opt,name=userScriptId,proto3" json:"userScriptId,omitempty"` // 用户脚本ID
	Reason       string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`              // 驳回理由
}

func (x *RejectUserScriptRequest) Reset() {
	*x = RejectUserScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_user_script_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectUserScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectUserScriptRequest) ProtoMessage() {}

func (x *RejectUserScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_user_script_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectUserScriptRequest.ProtoReflect.Descriptor instead.
func (*RejectUserScriptRequest) Descriptor() ([]byte, []int) {
	return file_service_user_script_proto_rawDescGZIP(), []int{8}
}

func (x *RejectUserScriptRequest) GetUserScriptId() int64 {
	if x != nil {
		return x.UserScriptId
	}
	return 0
}

func (x *RejectUserScriptRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_service_user_script_proto protoreflect.FileDescriptor

var file_service_user_script_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a,
	0x1e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x15, 0x46, 0x69,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x22, 0x38, 0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x44, 0x35, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x4d, 0x44, 0x35, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x4d, 0x44, 0x35, 0x22, 0x4f, 0x0a, 0x1d, 0x46,
	0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x4d, 0x44, 0x35, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x51, 0x0a, 0x17,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x41, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x22,
	0x7c, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x41, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x4b, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x22, 0x3b, 0x0a, 0x15, 0x50, 0x61,
	0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x17, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x32, 0xcb,
	0x03, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a,
	0x15, 0x66, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x4d, 0x44, 0x35, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x44,
	0x35, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x4d, 0x44, 0x35, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x12,
	0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x50, 0x43, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x10, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12,
	0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_user_script_proto_rawDescOnce sync.Once
	file_service_user_script_proto_rawDescData = file_service_user_script_proto_rawDesc
)

func file_service_user_script_proto_rawDescGZIP() []byte {
	file_service_user_script_proto_rawDescOnce.Do(func() {
		file_service_user_script_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_user_script_proto_rawDescData)
	})
	return file_service_user_script_proto_rawDescData
}

var file_service_user_script_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_service_user_script_proto_goTypes = []interface{}{
	(*FindUserScriptRequest)(nil),         // 0: pb.FindUserScriptRequest
	(*FindUserScriptResponse)(nil),        // 1: pb.FindUserScriptResponse
	(*FindUserScriptWithMD5Request)(nil),  // 2: pb.FindUserScriptWithMD5Request
	(*FindUserScriptWithMD5Response)(nil), // 3: pb.FindUserScriptWithMD5Response
	(*CountUserScriptsRequest)(nil),       // 4: pb.CountUserScriptsRequest
	(*ListUserScriptsRequest)(nil),        // 5: pb.ListUserScriptsRequest
	(*ListUserScriptsResponse)(nil),       // 6: pb.ListUserScriptsResponse
	(*PassUserScriptRequest)(nil),         // 7: pb.PassUserScriptRequest
	(*RejectUserScriptRequest)(nil),       // 8: pb.RejectUserScriptRequest
	(*UserScript)(nil),                    // 9: pb.UserScript
	(*RPCCountResponse)(nil),              // 10: pb.RPCCountResponse
	(*RPCSuccess)(nil),                    // 11: pb.RPCSuccess
}
var file_service_user_script_proto_depIdxs = []int32{
	9,  // 0: pb.FindUserScriptResponse.userScript:type_name -> pb.UserScript
	9,  // 1: pb.FindUserScriptWithMD5Response.userScript:type_name -> pb.UserScript
	9,  // 2: pb.ListUserScriptsResponse.userScripts:type_name -> pb.UserScript
	0,  // 3: pb.UserScriptService.findUserScript:input_type -> pb.FindUserScriptRequest
	2,  // 4: pb.UserScriptService.findUserScriptWithMD5:input_type -> pb.FindUserScriptWithMD5Request
	4,  // 5: pb.UserScriptService.countUserScripts:input_type -> pb.CountUserScriptsRequest
	5,  // 6: pb.UserScriptService.listUserScripts:input_type -> pb.ListUserScriptsRequest
	7,  // 7: pb.UserScriptService.passUserScript:input_type -> pb.PassUserScriptRequest
	8,  // 8: pb.UserScriptService.rejectUserScript:input_type -> pb.RejectUserScriptRequest
	1,  // 9: pb.UserScriptService.findUserScript:output_type -> pb.FindUserScriptResponse
	3,  // 10: pb.UserScriptService.findUserScriptWithMD5:output_type -> pb.FindUserScriptWithMD5Response
	10, // 11: pb.UserScriptService.countUserScripts:output_type -> pb.RPCCountResponse
	6,  // 12: pb.UserScriptService.listUserScripts:output_type -> pb.ListUserScriptsResponse
	11, // 13: pb.UserScriptService.passUserScript:output_type -> pb.RPCSuccess
	11, // 14: pb.UserScriptService.rejectUserScript:output_type -> pb.RPCSuccess
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_service_user_script_proto_init() }
func file_service_user_script_proto_init() {
	if File_service_user_script_proto != nil {
		return
	}
	file_models_model_user_script_proto_init()
	file_models_rpc_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_user_script_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_script_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_script_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserScriptWithMD5Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_script_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserScriptWithMD5Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_script_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountUserScriptsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_script_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserScriptsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_script_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserScriptsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_script_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassUserScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_user_script_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectUserScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_user_script_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_user_script_proto_goTypes,
		DependencyIndexes: file_service_user_script_proto_depIdxs,
		MessageInfos:      file_service_user_script_proto_msgTypes,
	}.Build()
	File_service_user_script_proto = out.File
	file_service_user_script_proto_rawDesc = nil
	file_service_user_script_proto_goTypes = nil
	file_service_user_script_proto_depIdxs = nil
}
