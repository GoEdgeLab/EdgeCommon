// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: service_db_node.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建数据库节点
type CreateDBNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOn        bool   `protobuf:"varint,1,opt,name=isOn,proto3" json:"isOn,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Host        string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Port        int32  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Database    string `protobuf:"bytes,6,opt,name=database,proto3" json:"database,omitempty"`
	Username    string `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`
	Password    string `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	Charset     string `protobuf:"bytes,9,opt,name=charset,proto3" json:"charset,omitempty"`
}

func (x *CreateDBNodeRequest) Reset() {
	*x = CreateDBNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDBNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDBNodeRequest) ProtoMessage() {}

func (x *CreateDBNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDBNodeRequest.ProtoReflect.Descriptor instead.
func (*CreateDBNodeRequest) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDBNodeRequest) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *CreateDBNodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDBNodeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateDBNodeRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *CreateDBNodeRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *CreateDBNodeRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *CreateDBNodeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateDBNodeRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateDBNodeRequest) GetCharset() string {
	if x != nil {
		return x.Charset
	}
	return ""
}

type CreateDBNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbNodeId int64 `protobuf:"varint,1,opt,name=dbNodeId,proto3" json:"dbNodeId,omitempty"`
}

func (x *CreateDBNodeResponse) Reset() {
	*x = CreateDBNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDBNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDBNodeResponse) ProtoMessage() {}

func (x *CreateDBNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDBNodeResponse.ProtoReflect.Descriptor instead.
func (*CreateDBNodeResponse) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDBNodeResponse) GetDbNodeId() int64 {
	if x != nil {
		return x.DbNodeId
	}
	return 0
}

// 修改数据库节点
type UpdateDBNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbNodeId    int64  `protobuf:"varint,1,opt,name=dbNodeId,proto3" json:"dbNodeId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsOn        bool   `protobuf:"varint,4,opt,name=isOn,proto3" json:"isOn,omitempty"`
	Host        string `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
	Port        int32  `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	Database    string `protobuf:"bytes,7,opt,name=database,proto3" json:"database,omitempty"`
	Username    string `protobuf:"bytes,8,opt,name=username,proto3" json:"username,omitempty"`
	Password    string `protobuf:"bytes,9,opt,name=password,proto3" json:"password,omitempty"`
	Charset     string `protobuf:"bytes,10,opt,name=charset,proto3" json:"charset,omitempty"`
}

func (x *UpdateDBNodeRequest) Reset() {
	*x = UpdateDBNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDBNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDBNodeRequest) ProtoMessage() {}

func (x *UpdateDBNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDBNodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateDBNodeRequest) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDBNodeRequest) GetDbNodeId() int64 {
	if x != nil {
		return x.DbNodeId
	}
	return 0
}

func (x *UpdateDBNodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDBNodeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateDBNodeRequest) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *UpdateDBNodeRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *UpdateDBNodeRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *UpdateDBNodeRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *UpdateDBNodeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateDBNodeRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateDBNodeRequest) GetCharset() string {
	if x != nil {
		return x.Charset
	}
	return ""
}

// 删除节点
type DeleteDBNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbNodeId int64 `protobuf:"varint,1,opt,name=dbNodeId,proto3" json:"dbNodeId,omitempty"`
}

func (x *DeleteDBNodeRequest) Reset() {
	*x = DeleteDBNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDBNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDBNodeRequest) ProtoMessage() {}

func (x *DeleteDBNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDBNodeRequest.ProtoReflect.Descriptor instead.
func (*DeleteDBNodeRequest) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteDBNodeRequest) GetDbNodeId() int64 {
	if x != nil {
		return x.DbNodeId
	}
	return 0
}

// 计算可用的数据库节点数量
type CountAllEnabledDBNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CountAllEnabledDBNodesRequest) Reset() {
	*x = CountAllEnabledDBNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAllEnabledDBNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAllEnabledDBNodesRequest) ProtoMessage() {}

func (x *CountAllEnabledDBNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAllEnabledDBNodesRequest.ProtoReflect.Descriptor instead.
func (*CountAllEnabledDBNodesRequest) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{4}
}

// 列出单页的数据库节点
type ListEnabledDBNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListEnabledDBNodesRequest) Reset() {
	*x = ListEnabledDBNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnabledDBNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnabledDBNodesRequest) ProtoMessage() {}

func (x *ListEnabledDBNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnabledDBNodesRequest.ProtoReflect.Descriptor instead.
func (*ListEnabledDBNodesRequest) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{5}
}

func (x *ListEnabledDBNodesRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListEnabledDBNodesRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListEnabledDBNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbNodes []*DBNode `protobuf:"bytes,1,rep,name=dbNodes,proto3" json:"dbNodes,omitempty"`
}

func (x *ListEnabledDBNodesResponse) Reset() {
	*x = ListEnabledDBNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnabledDBNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnabledDBNodesResponse) ProtoMessage() {}

func (x *ListEnabledDBNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnabledDBNodesResponse.ProtoReflect.Descriptor instead.
func (*ListEnabledDBNodesResponse) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{6}
}

func (x *ListEnabledDBNodesResponse) GetDbNodes() []*DBNode {
	if x != nil {
		return x.DbNodes
	}
	return nil
}

// 根据ID查找可用的数据库节点
type FindEnabledDBNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbNodeId int64 `protobuf:"varint,1,opt,name=dbNodeId,proto3" json:"dbNodeId,omitempty"`
}

func (x *FindEnabledDBNodeRequest) Reset() {
	*x = FindEnabledDBNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledDBNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledDBNodeRequest) ProtoMessage() {}

func (x *FindEnabledDBNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledDBNodeRequest.ProtoReflect.Descriptor instead.
func (*FindEnabledDBNodeRequest) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{7}
}

func (x *FindEnabledDBNodeRequest) GetDbNodeId() int64 {
	if x != nil {
		return x.DbNodeId
	}
	return 0
}

type FindEnabledDBNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbNode *DBNode `protobuf:"bytes,1,opt,name=dbNode,proto3" json:"dbNode,omitempty"`
}

func (x *FindEnabledDBNodeResponse) Reset() {
	*x = FindEnabledDBNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledDBNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledDBNodeResponse) ProtoMessage() {}

func (x *FindEnabledDBNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledDBNodeResponse.ProtoReflect.Descriptor instead.
func (*FindEnabledDBNodeResponse) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{8}
}

func (x *FindEnabledDBNodeResponse) GetDbNode() *DBNode {
	if x != nil {
		return x.DbNode
	}
	return nil
}

// 获取所有表信息
type FindAllDBNodeTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbNodeId int64 `protobuf:"varint,1,opt,name=dbNodeId,proto3" json:"dbNodeId,omitempty"`
}

func (x *FindAllDBNodeTablesRequest) Reset() {
	*x = FindAllDBNodeTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllDBNodeTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllDBNodeTablesRequest) ProtoMessage() {}

func (x *FindAllDBNodeTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllDBNodeTablesRequest.ProtoReflect.Descriptor instead.
func (*FindAllDBNodeTablesRequest) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{9}
}

func (x *FindAllDBNodeTablesRequest) GetDbNodeId() int64 {
	if x != nil {
		return x.DbNodeId
	}
	return 0
}

type FindAllDBNodeTablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbNodeTables []*DBTable `protobuf:"bytes,1,rep,name=dbNodeTables,proto3" json:"dbNodeTables,omitempty"`
}

func (x *FindAllDBNodeTablesResponse) Reset() {
	*x = FindAllDBNodeTablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllDBNodeTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllDBNodeTablesResponse) ProtoMessage() {}

func (x *FindAllDBNodeTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllDBNodeTablesResponse.ProtoReflect.Descriptor instead.
func (*FindAllDBNodeTablesResponse) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{10}
}

func (x *FindAllDBNodeTablesResponse) GetDbNodeTables() []*DBTable {
	if x != nil {
		return x.DbNodeTables
	}
	return nil
}

// 删除表
type DeleteDBNodeTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbNodeId    int64  `protobuf:"varint,1,opt,name=dbNodeId,proto3" json:"dbNodeId,omitempty"`
	DbNodeTable string `protobuf:"bytes,2,opt,name=dbNodeTable,proto3" json:"dbNodeTable,omitempty"`
}

func (x *DeleteDBNodeTableRequest) Reset() {
	*x = DeleteDBNodeTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDBNodeTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDBNodeTableRequest) ProtoMessage() {}

func (x *DeleteDBNodeTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDBNodeTableRequest.ProtoReflect.Descriptor instead.
func (*DeleteDBNodeTableRequest) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteDBNodeTableRequest) GetDbNodeId() int64 {
	if x != nil {
		return x.DbNodeId
	}
	return 0
}

func (x *DeleteDBNodeTableRequest) GetDbNodeTable() string {
	if x != nil {
		return x.DbNodeTable
	}
	return ""
}

// 清空表
type TruncateDBNodeTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbNodeId    int64  `protobuf:"varint,1,opt,name=dbNodeId,proto3" json:"dbNodeId,omitempty"`
	DbNodeTable string `protobuf:"bytes,2,opt,name=dbNodeTable,proto3" json:"dbNodeTable,omitempty"`
}

func (x *TruncateDBNodeTableRequest) Reset() {
	*x = TruncateDBNodeTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TruncateDBNodeTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateDBNodeTableRequest) ProtoMessage() {}

func (x *TruncateDBNodeTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateDBNodeTableRequest.ProtoReflect.Descriptor instead.
func (*TruncateDBNodeTableRequest) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{12}
}

func (x *TruncateDBNodeTableRequest) GetDbNodeId() int64 {
	if x != nil {
		return x.DbNodeId
	}
	return 0
}

func (x *TruncateDBNodeTableRequest) GetDbNodeTable() string {
	if x != nil {
		return x.DbNodeTable
	}
	return ""
}

// 检查数据库节点状态
type CheckDBNodeStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbNodeId int64 `protobuf:"varint,1,opt,name=dbNodeId,proto3" json:"dbNodeId,omitempty"`
}

func (x *CheckDBNodeStatusRequest) Reset() {
	*x = CheckDBNodeStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDBNodeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDBNodeStatusRequest) ProtoMessage() {}

func (x *CheckDBNodeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDBNodeStatusRequest.ProtoReflect.Descriptor instead.
func (*CheckDBNodeStatusRequest) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{13}
}

func (x *CheckDBNodeStatusRequest) GetDbNodeId() int64 {
	if x != nil {
		return x.DbNodeId
	}
	return 0
}

type CheckDBNodeStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbNodeStatus *DBNodeStatus `protobuf:"bytes,1,opt,name=dbNodeStatus,proto3" json:"dbNodeStatus,omitempty"`
}

func (x *CheckDBNodeStatusResponse) Reset() {
	*x = CheckDBNodeStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_db_node_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDBNodeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDBNodeStatusResponse) ProtoMessage() {}

func (x *CheckDBNodeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_db_node_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDBNodeStatusResponse.ProtoReflect.Descriptor instead.
func (*CheckDBNodeStatusResponse) Descriptor() ([]byte, []int) {
	return file_service_db_node_proto_rawDescGZIP(), []int{14}
}

func (x *CheckDBNodeStatusResponse) GetDbNodeStatus() *DBNodeStatus {
	if x != nil {
		return x.DbNodeStatus
	}
	return nil
}

var File_service_db_node_proto protoreflect.FileDescriptor

var file_service_db_node_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x62, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1a, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x64, 0x62, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x64, 0x62, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xf5, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x4f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x72, 0x73, 0x65, 0x74, 0x22, 0x32, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x91, 0x02, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x4f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65, 0x74, 0x22,
	0x31, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x42, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x44, 0x42, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x64, 0x62,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x22, 0x36, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x44,
	0x42, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x42, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x06, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x38, 0x0a, 0x1a, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x6c, 0x6c, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x62, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x62, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x44, 0x42,
	0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0c, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x42,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0c, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x22, 0x58, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x42, 0x4e,
	0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x62, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x5a, 0x0a,
	0x1a, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x62, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x62, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x62, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x62,
	0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x36, 0x0a, 0x18, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x22, 0x51, 0x0a, 0x19, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x0c, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x64, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x32, 0xf2, 0x05, 0x0a, 0x0d, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x42, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x37, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x42, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x42,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x51, 0x0a, 0x16, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x44, 0x42,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50,
	0x43, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53,
	0x0a, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x44, 0x42, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x66, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c,
	0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x70,
	0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70,
	0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x42,
	0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x45, 0x0a, 0x13, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x44, 0x42, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x75,
	0x6e, 0x63, 0x61, 0x74, 0x65, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x50, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_db_node_proto_rawDescOnce sync.Once
	file_service_db_node_proto_rawDescData = file_service_db_node_proto_rawDesc
)

func file_service_db_node_proto_rawDescGZIP() []byte {
	file_service_db_node_proto_rawDescOnce.Do(func() {
		file_service_db_node_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_db_node_proto_rawDescData)
	})
	return file_service_db_node_proto_rawDescData
}

var file_service_db_node_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_service_db_node_proto_goTypes = []interface{}{
	(*CreateDBNodeRequest)(nil),           // 0: pb.CreateDBNodeRequest
	(*CreateDBNodeResponse)(nil),          // 1: pb.CreateDBNodeResponse
	(*UpdateDBNodeRequest)(nil),           // 2: pb.UpdateDBNodeRequest
	(*DeleteDBNodeRequest)(nil),           // 3: pb.DeleteDBNodeRequest
	(*CountAllEnabledDBNodesRequest)(nil), // 4: pb.CountAllEnabledDBNodesRequest
	(*ListEnabledDBNodesRequest)(nil),     // 5: pb.ListEnabledDBNodesRequest
	(*ListEnabledDBNodesResponse)(nil),    // 6: pb.ListEnabledDBNodesResponse
	(*FindEnabledDBNodeRequest)(nil),      // 7: pb.FindEnabledDBNodeRequest
	(*FindEnabledDBNodeResponse)(nil),     // 8: pb.FindEnabledDBNodeResponse
	(*FindAllDBNodeTablesRequest)(nil),    // 9: pb.FindAllDBNodeTablesRequest
	(*FindAllDBNodeTablesResponse)(nil),   // 10: pb.FindAllDBNodeTablesResponse
	(*DeleteDBNodeTableRequest)(nil),      // 11: pb.DeleteDBNodeTableRequest
	(*TruncateDBNodeTableRequest)(nil),    // 12: pb.TruncateDBNodeTableRequest
	(*CheckDBNodeStatusRequest)(nil),      // 13: pb.CheckDBNodeStatusRequest
	(*CheckDBNodeStatusResponse)(nil),     // 14: pb.CheckDBNodeStatusResponse
	(*DBNode)(nil),                        // 15: pb.DBNode
	(*DBTable)(nil),                       // 16: pb.DBTable
	(*DBNodeStatus)(nil),                  // 17: pb.DBNodeStatus
	(*RPCSuccess)(nil),                    // 18: pb.RPCSuccess
	(*RPCCountResponse)(nil),              // 19: pb.RPCCountResponse
}
var file_service_db_node_proto_depIdxs = []int32{
	15, // 0: pb.ListEnabledDBNodesResponse.dbNodes:type_name -> pb.DBNode
	15, // 1: pb.FindEnabledDBNodeResponse.dbNode:type_name -> pb.DBNode
	16, // 2: pb.FindAllDBNodeTablesResponse.dbNodeTables:type_name -> pb.DBTable
	17, // 3: pb.CheckDBNodeStatusResponse.dbNodeStatus:type_name -> pb.DBNodeStatus
	0,  // 4: pb.DBNodeService.createDBNode:input_type -> pb.CreateDBNodeRequest
	2,  // 5: pb.DBNodeService.updateDBNode:input_type -> pb.UpdateDBNodeRequest
	3,  // 6: pb.DBNodeService.deleteDBNode:input_type -> pb.DeleteDBNodeRequest
	4,  // 7: pb.DBNodeService.countAllEnabledDBNodes:input_type -> pb.CountAllEnabledDBNodesRequest
	5,  // 8: pb.DBNodeService.listEnabledDBNodes:input_type -> pb.ListEnabledDBNodesRequest
	7,  // 9: pb.DBNodeService.findEnabledDBNode:input_type -> pb.FindEnabledDBNodeRequest
	9,  // 10: pb.DBNodeService.findAllDBNodeTables:input_type -> pb.FindAllDBNodeTablesRequest
	11, // 11: pb.DBNodeService.deleteDBNodeTable:input_type -> pb.DeleteDBNodeTableRequest
	12, // 12: pb.DBNodeService.truncateDBNodeTable:input_type -> pb.TruncateDBNodeTableRequest
	13, // 13: pb.DBNodeService.checkDBNodeStatus:input_type -> pb.CheckDBNodeStatusRequest
	1,  // 14: pb.DBNodeService.createDBNode:output_type -> pb.CreateDBNodeResponse
	18, // 15: pb.DBNodeService.updateDBNode:output_type -> pb.RPCSuccess
	18, // 16: pb.DBNodeService.deleteDBNode:output_type -> pb.RPCSuccess
	19, // 17: pb.DBNodeService.countAllEnabledDBNodes:output_type -> pb.RPCCountResponse
	6,  // 18: pb.DBNodeService.listEnabledDBNodes:output_type -> pb.ListEnabledDBNodesResponse
	8,  // 19: pb.DBNodeService.findEnabledDBNode:output_type -> pb.FindEnabledDBNodeResponse
	10, // 20: pb.DBNodeService.findAllDBNodeTables:output_type -> pb.FindAllDBNodeTablesResponse
	18, // 21: pb.DBNodeService.deleteDBNodeTable:output_type -> pb.RPCSuccess
	18, // 22: pb.DBNodeService.truncateDBNodeTable:output_type -> pb.RPCSuccess
	14, // 23: pb.DBNodeService.checkDBNodeStatus:output_type -> pb.CheckDBNodeStatusResponse
	14, // [14:24] is the sub-list for method output_type
	4,  // [4:14] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_service_db_node_proto_init() }
func file_service_db_node_proto_init() {
	if File_service_db_node_proto != nil {
		return
	}
	file_models_model_db_node_proto_init()
	file_models_rpc_messages_proto_init()
	file_models_model_db_table_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_db_node_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDBNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDBNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDBNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDBNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAllEnabledDBNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnabledDBNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnabledDBNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledDBNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledDBNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllDBNodeTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllDBNodeTablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDBNodeTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TruncateDBNodeTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDBNodeStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_db_node_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDBNodeStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_db_node_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_db_node_proto_goTypes,
		DependencyIndexes: file_service_db_node_proto_depIdxs,
		MessageInfos:      file_service_db_node_proto_msgTypes,
	}.Build()
	File_service_db_node_proto = out.File
	file_service_db_node_proto_rawDesc = nil
	file_service_db_node_proto_goTypes = nil
	file_service_db_node_proto_depIdxs = nil
}
