// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: service_message_task.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CountMessageTasksWithStatusRequest_Status int32

const (
	CountMessageTasksWithStatusRequest_MessageTaskStatusNone    CountMessageTasksWithStatusRequest_Status = 0
	CountMessageTasksWithStatusRequest_MessageTaskStatusSending CountMessageTasksWithStatusRequest_Status = 1
	CountMessageTasksWithStatusRequest_MessageTaskStatusSuccess CountMessageTasksWithStatusRequest_Status = 2
	CountMessageTasksWithStatusRequest_MessageTaskStatusFailed  CountMessageTasksWithStatusRequest_Status = 3
)

// Enum value maps for CountMessageTasksWithStatusRequest_Status.
var (
	CountMessageTasksWithStatusRequest_Status_name = map[int32]string{
		0: "MessageTaskStatusNone",
		1: "MessageTaskStatusSending",
		2: "MessageTaskStatusSuccess",
		3: "MessageTaskStatusFailed",
	}
	CountMessageTasksWithStatusRequest_Status_value = map[string]int32{
		"MessageTaskStatusNone":    0,
		"MessageTaskStatusSending": 1,
		"MessageTaskStatusSuccess": 2,
		"MessageTaskStatusFailed":  3,
	}
)

func (x CountMessageTasksWithStatusRequest_Status) Enum() *CountMessageTasksWithStatusRequest_Status {
	p := new(CountMessageTasksWithStatusRequest_Status)
	*p = x
	return p
}

func (x CountMessageTasksWithStatusRequest_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CountMessageTasksWithStatusRequest_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_service_message_task_proto_enumTypes[0].Descriptor()
}

func (CountMessageTasksWithStatusRequest_Status) Type() protoreflect.EnumType {
	return &file_service_message_task_proto_enumTypes[0]
}

func (x CountMessageTasksWithStatusRequest_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CountMessageTasksWithStatusRequest_Status.Descriptor instead.
func (CountMessageTasksWithStatusRequest_Status) EnumDescriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{5, 0}
}

type ListMessageTasksWithStatusRequest_Status int32

const (
	ListMessageTasksWithStatusRequest_MessageTaskStatusNone    ListMessageTasksWithStatusRequest_Status = 0
	ListMessageTasksWithStatusRequest_MessageTaskStatusSending ListMessageTasksWithStatusRequest_Status = 1
	ListMessageTasksWithStatusRequest_MessageTaskStatusSuccess ListMessageTasksWithStatusRequest_Status = 2
	ListMessageTasksWithStatusRequest_MessageTaskStatusFailed  ListMessageTasksWithStatusRequest_Status = 3
)

// Enum value maps for ListMessageTasksWithStatusRequest_Status.
var (
	ListMessageTasksWithStatusRequest_Status_name = map[int32]string{
		0: "MessageTaskStatusNone",
		1: "MessageTaskStatusSending",
		2: "MessageTaskStatusSuccess",
		3: "MessageTaskStatusFailed",
	}
	ListMessageTasksWithStatusRequest_Status_value = map[string]int32{
		"MessageTaskStatusNone":    0,
		"MessageTaskStatusSending": 1,
		"MessageTaskStatusSuccess": 2,
		"MessageTaskStatusFailed":  3,
	}
)

func (x ListMessageTasksWithStatusRequest_Status) Enum() *ListMessageTasksWithStatusRequest_Status {
	p := new(ListMessageTasksWithStatusRequest_Status)
	*p = x
	return p
}

func (x ListMessageTasksWithStatusRequest_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMessageTasksWithStatusRequest_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_service_message_task_proto_enumTypes[1].Descriptor()
}

func (ListMessageTasksWithStatusRequest_Status) Type() protoreflect.EnumType {
	return &file_service_message_task_proto_enumTypes[1]
}

func (x ListMessageTasksWithStatusRequest_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMessageTasksWithStatusRequest_Status.Descriptor instead.
func (ListMessageTasksWithStatusRequest_Status) EnumDescriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{6, 0}
}

type UpdateMessageTaskStatusRequest_Status int32

const (
	UpdateMessageTaskStatusRequest_MessageTaskStatusNone    UpdateMessageTaskStatusRequest_Status = 0
	UpdateMessageTaskStatusRequest_MessageTaskStatusSending UpdateMessageTaskStatusRequest_Status = 1
	UpdateMessageTaskStatusRequest_MessageTaskStatusSuccess UpdateMessageTaskStatusRequest_Status = 2
	UpdateMessageTaskStatusRequest_MessageTaskStatusFailed  UpdateMessageTaskStatusRequest_Status = 3
)

// Enum value maps for UpdateMessageTaskStatusRequest_Status.
var (
	UpdateMessageTaskStatusRequest_Status_name = map[int32]string{
		0: "MessageTaskStatusNone",
		1: "MessageTaskStatusSending",
		2: "MessageTaskStatusSuccess",
		3: "MessageTaskStatusFailed",
	}
	UpdateMessageTaskStatusRequest_Status_value = map[string]int32{
		"MessageTaskStatusNone":    0,
		"MessageTaskStatusSending": 1,
		"MessageTaskStatusSuccess": 2,
		"MessageTaskStatusFailed":  3,
	}
)

func (x UpdateMessageTaskStatusRequest_Status) Enum() *UpdateMessageTaskStatusRequest_Status {
	p := new(UpdateMessageTaskStatusRequest_Status)
	*p = x
	return p
}

func (x UpdateMessageTaskStatusRequest_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateMessageTaskStatusRequest_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_service_message_task_proto_enumTypes[2].Descriptor()
}

func (UpdateMessageTaskStatusRequest_Status) Type() protoreflect.EnumType {
	return &file_service_message_task_proto_enumTypes[2]
}

func (x UpdateMessageTaskStatusRequest_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateMessageTaskStatusRequest_Status.Descriptor instead.
func (UpdateMessageTaskStatusRequest_Status) EnumDescriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{10, 0}
}

// 创建消息任务
type CreateMessageTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageRecipientId     int64  `protobuf:"varint,1,opt,name=messageRecipientId,proto3" json:"messageRecipientId,omitempty"`         // 接收人ID
	MessageMediaInstanceId int64  `protobuf:"varint,2,opt,name=messageMediaInstanceId,proto3" json:"messageMediaInstanceId,omitempty"` // 媒介实例ID
	User                   string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`                                      // 用户标识
	Subject                string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`                                // 标题
	Body                   string `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`                                      // 内容
	IsPrimary              bool   `protobuf:"varint,6,opt,name=isPrimary,proto3" json:"isPrimary,omitempty"`                           // 是否优先发送
}

func (x *CreateMessageTaskRequest) Reset() {
	*x = CreateMessageTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessageTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageTaskRequest) ProtoMessage() {}

func (x *CreateMessageTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateMessageTaskRequest) Descriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMessageTaskRequest) GetMessageRecipientId() int64 {
	if x != nil {
		return x.MessageRecipientId
	}
	return 0
}

func (x *CreateMessageTaskRequest) GetMessageMediaInstanceId() int64 {
	if x != nil {
		return x.MessageMediaInstanceId
	}
	return 0
}

func (x *CreateMessageTaskRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CreateMessageTaskRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateMessageTaskRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CreateMessageTaskRequest) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

type CreateMessageTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageTaskId int64 `protobuf:"varint,1,opt,name=messageTaskId,proto3" json:"messageTaskId,omitempty"` // 消息任务ID
}

func (x *CreateMessageTaskResponse) Reset() {
	*x = CreateMessageTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessageTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageTaskResponse) ProtoMessage() {}

func (x *CreateMessageTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateMessageTaskResponse) Descriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{1}
}

func (x *CreateMessageTaskResponse) GetMessageTaskId() int64 {
	if x != nil {
		return x.MessageTaskId
	}
	return 0
}

// 删除消息任务
type DeleteMessageTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageTaskId int64 `protobuf:"varint,1,opt,name=messageTaskId,proto3" json:"messageTaskId,omitempty"` // 消息任务ID
}

func (x *DeleteMessageTaskRequest) Reset() {
	*x = DeleteMessageTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageTaskRequest) ProtoMessage() {}

func (x *DeleteMessageTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteMessageTaskRequest) Descriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteMessageTaskRequest) GetMessageTaskId() int64 {
	if x != nil {
		return x.MessageTaskId
	}
	return 0
}

// 读取消息任务状态
type FindEnabledMessageTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageTaskId int64 `protobuf:"varint,1,opt,name=messageTaskId,proto3" json:"messageTaskId,omitempty"` // 消息任务ID
}

func (x *FindEnabledMessageTaskRequest) Reset() {
	*x = FindEnabledMessageTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_task_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledMessageTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledMessageTaskRequest) ProtoMessage() {}

func (x *FindEnabledMessageTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_task_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledMessageTaskRequest.ProtoReflect.Descriptor instead.
func (*FindEnabledMessageTaskRequest) Descriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{3}
}

func (x *FindEnabledMessageTaskRequest) GetMessageTaskId() int64 {
	if x != nil {
		return x.MessageTaskId
	}
	return 0
}

type FindEnabledMessageTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageTask *MessageTask `protobuf:"bytes,1,opt,name=messageTask,proto3" json:"messageTask,omitempty"` // 消息任务信息
}

func (x *FindEnabledMessageTaskResponse) Reset() {
	*x = FindEnabledMessageTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_task_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledMessageTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledMessageTaskResponse) ProtoMessage() {}

func (x *FindEnabledMessageTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_task_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledMessageTaskResponse.ProtoReflect.Descriptor instead.
func (*FindEnabledMessageTaskResponse) Descriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{4}
}

func (x *FindEnabledMessageTaskResponse) GetMessageTask() *MessageTask {
	if x != nil {
		return x.MessageTask
	}
	return nil
}

// 计算某个状态的消息任务数量
type CountMessageTasksWithStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status CountMessageTasksWithStatusRequest_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pb.CountMessageTasksWithStatusRequest_Status" json:"status,omitempty"` // 任务状态
}

func (x *CountMessageTasksWithStatusRequest) Reset() {
	*x = CountMessageTasksWithStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_task_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountMessageTasksWithStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountMessageTasksWithStatusRequest) ProtoMessage() {}

func (x *CountMessageTasksWithStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_task_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountMessageTasksWithStatusRequest.ProtoReflect.Descriptor instead.
func (*CountMessageTasksWithStatusRequest) Descriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{5}
}

func (x *CountMessageTasksWithStatusRequest) GetStatus() CountMessageTasksWithStatusRequest_Status {
	if x != nil {
		return x.Status
	}
	return CountMessageTasksWithStatusRequest_MessageTaskStatusNone
}

// 根据状态列出某页任务
type ListMessageTasksWithStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ListMessageTasksWithStatusRequest_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pb.ListMessageTasksWithStatusRequest_Status" json:"status,omitempty"` // 任务状态
	Offset int64                                    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int64                                    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListMessageTasksWithStatusRequest) Reset() {
	*x = ListMessageTasksWithStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_task_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMessageTasksWithStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessageTasksWithStatusRequest) ProtoMessage() {}

func (x *ListMessageTasksWithStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_task_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessageTasksWithStatusRequest.ProtoReflect.Descriptor instead.
func (*ListMessageTasksWithStatusRequest) Descriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{6}
}

func (x *ListMessageTasksWithStatusRequest) GetStatus() ListMessageTasksWithStatusRequest_Status {
	if x != nil {
		return x.Status
	}
	return ListMessageTasksWithStatusRequest_MessageTaskStatusNone
}

func (x *ListMessageTasksWithStatusRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListMessageTasksWithStatusRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListMessageTasksWithStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageTasks []*MessageTask `protobuf:"bytes,1,rep,name=messageTasks,proto3" json:"messageTasks,omitempty"`
}

func (x *ListMessageTasksWithStatusResponse) Reset() {
	*x = ListMessageTasksWithStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_task_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMessageTasksWithStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessageTasksWithStatusResponse) ProtoMessage() {}

func (x *ListMessageTasksWithStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_task_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessageTasksWithStatusResponse.ProtoReflect.Descriptor instead.
func (*ListMessageTasksWithStatusResponse) Descriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{7}
}

func (x *ListMessageTasksWithStatusResponse) GetMessageTasks() []*MessageTask {
	if x != nil {
		return x.MessageTasks
	}
	return nil
}

// 发送某个消息任务
// 与创建消息任务放入到后台任务队列不同，此API是直接发送
type SendMessageTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageMediaInstanceId int64  `protobuf:"varint,1,opt,name=messageMediaInstanceId,proto3" json:"messageMediaInstanceId,omitempty"` // 媒介实例ID
	User                   string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`                                      // 用户标识
	Subject                string `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`                                // 标题
	Body                   string `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`                                      // 内容
}

func (x *SendMessageTaskRequest) Reset() {
	*x = SendMessageTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_task_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageTaskRequest) ProtoMessage() {}

func (x *SendMessageTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_task_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageTaskRequest.ProtoReflect.Descriptor instead.
func (*SendMessageTaskRequest) Descriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{8}
}

func (x *SendMessageTaskRequest) GetMessageMediaInstanceId() int64 {
	if x != nil {
		return x.MessageMediaInstanceId
	}
	return 0
}

func (x *SendMessageTaskRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SendMessageTaskRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SendMessageTaskRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type SendMessageTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOk     bool   `protobuf:"varint,1,opt,name=isOk,proto3" json:"isOk,omitempty"`        // 是否成功
	Error    string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`       // 失败时的提示信息
	Response string `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"` // 发送成功后响应内容
}

func (x *SendMessageTaskResponse) Reset() {
	*x = SendMessageTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_task_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageTaskResponse) ProtoMessage() {}

func (x *SendMessageTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_task_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageTaskResponse.ProtoReflect.Descriptor instead.
func (*SendMessageTaskResponse) Descriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{9}
}

func (x *SendMessageTaskResponse) GetIsOk() bool {
	if x != nil {
		return x.IsOk
	}
	return false
}

func (x *SendMessageTaskResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SendMessageTaskResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

// 修改消息任务状态
type UpdateMessageTaskStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageTaskId int64                                 `protobuf:"varint,1,opt,name=messageTaskId,proto3" json:"messageTaskId,omitempty"`                                 // 消息任务ID
	Status        UpdateMessageTaskStatusRequest_Status `protobuf:"varint,2,opt,name=status,proto3,enum=pb.UpdateMessageTaskStatusRequest_Status" json:"status,omitempty"` // 新的状态
}

func (x *UpdateMessageTaskStatusRequest) Reset() {
	*x = UpdateMessageTaskStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_message_task_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMessageTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessageTaskStatusRequest) ProtoMessage() {}

func (x *UpdateMessageTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_message_task_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessageTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateMessageTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_service_message_task_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateMessageTaskStatusRequest) GetMessageTaskId() int64 {
	if x != nil {
		return x.MessageTaskId
	}
	return 0
}

func (x *UpdateMessageTaskStatusRequest) GetStatus() UpdateMessageTaskStatusRequest_Status {
	if x != nil {
		return x.Status
	}
	return UpdateMessageTaskStatusRequest_MessageTaskStatusNone
}

var File_service_message_task_proto protoreflect.FileDescriptor

var file_service_message_task_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x1a, 0x1f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x01, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x22, 0x41, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x1d, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x53, 0x0a,
	0x1e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x22, 0xe9, 0x01, 0x0a, 0x22, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x7c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e,
	0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x02, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x22, 0x93,
	0x02, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x7c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x19, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x53, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x10, 0x03, 0x22, 0x59, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x22,
	0x92, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0x5f, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x73, 0x4f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69,
	0x73, 0x4f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x87, 0x02, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x41,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x7c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x32,
	0xef, 0x04, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x5f, 0x0a, 0x16, 0x66,
	0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x1b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x1a, 0x6c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_service_message_task_proto_rawDescOnce sync.Once
	file_service_message_task_proto_rawDescData = file_service_message_task_proto_rawDesc
)

func file_service_message_task_proto_rawDescGZIP() []byte {
	file_service_message_task_proto_rawDescOnce.Do(func() {
		file_service_message_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_message_task_proto_rawDescData)
	})
	return file_service_message_task_proto_rawDescData
}

var file_service_message_task_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_service_message_task_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_service_message_task_proto_goTypes = []interface{}{
	(CountMessageTasksWithStatusRequest_Status)(0), // 0: pb.CountMessageTasksWithStatusRequest.Status
	(ListMessageTasksWithStatusRequest_Status)(0),  // 1: pb.ListMessageTasksWithStatusRequest.Status
	(UpdateMessageTaskStatusRequest_Status)(0),     // 2: pb.UpdateMessageTaskStatusRequest.Status
	(*CreateMessageTaskRequest)(nil),               // 3: pb.CreateMessageTaskRequest
	(*CreateMessageTaskResponse)(nil),              // 4: pb.CreateMessageTaskResponse
	(*DeleteMessageTaskRequest)(nil),               // 5: pb.DeleteMessageTaskRequest
	(*FindEnabledMessageTaskRequest)(nil),          // 6: pb.FindEnabledMessageTaskRequest
	(*FindEnabledMessageTaskResponse)(nil),         // 7: pb.FindEnabledMessageTaskResponse
	(*CountMessageTasksWithStatusRequest)(nil),     // 8: pb.CountMessageTasksWithStatusRequest
	(*ListMessageTasksWithStatusRequest)(nil),      // 9: pb.ListMessageTasksWithStatusRequest
	(*ListMessageTasksWithStatusResponse)(nil),     // 10: pb.ListMessageTasksWithStatusResponse
	(*SendMessageTaskRequest)(nil),                 // 11: pb.SendMessageTaskRequest
	(*SendMessageTaskResponse)(nil),                // 12: pb.SendMessageTaskResponse
	(*UpdateMessageTaskStatusRequest)(nil),         // 13: pb.UpdateMessageTaskStatusRequest
	(*MessageTask)(nil),                            // 14: pb.MessageTask
	(*RPCSuccess)(nil),                             // 15: pb.RPCSuccess
	(*RPCCountResponse)(nil),                       // 16: pb.RPCCountResponse
}
var file_service_message_task_proto_depIdxs = []int32{
	14, // 0: pb.FindEnabledMessageTaskResponse.messageTask:type_name -> pb.MessageTask
	0,  // 1: pb.CountMessageTasksWithStatusRequest.status:type_name -> pb.CountMessageTasksWithStatusRequest.Status
	1,  // 2: pb.ListMessageTasksWithStatusRequest.status:type_name -> pb.ListMessageTasksWithStatusRequest.Status
	14, // 3: pb.ListMessageTasksWithStatusResponse.messageTasks:type_name -> pb.MessageTask
	2,  // 4: pb.UpdateMessageTaskStatusRequest.status:type_name -> pb.UpdateMessageTaskStatusRequest.Status
	3,  // 5: pb.MessageTaskService.createMessageTask:input_type -> pb.CreateMessageTaskRequest
	5,  // 6: pb.MessageTaskService.deleteMessageTask:input_type -> pb.DeleteMessageTaskRequest
	6,  // 7: pb.MessageTaskService.findEnabledMessageTask:input_type -> pb.FindEnabledMessageTaskRequest
	8,  // 8: pb.MessageTaskService.countMessageTasksWithStatus:input_type -> pb.CountMessageTasksWithStatusRequest
	9,  // 9: pb.MessageTaskService.listMessageTasksWithStatus:input_type -> pb.ListMessageTasksWithStatusRequest
	11, // 10: pb.MessageTaskService.sendMessageTask:input_type -> pb.SendMessageTaskRequest
	13, // 11: pb.MessageTaskService.updateMessageTaskStatus:input_type -> pb.UpdateMessageTaskStatusRequest
	4,  // 12: pb.MessageTaskService.createMessageTask:output_type -> pb.CreateMessageTaskResponse
	15, // 13: pb.MessageTaskService.deleteMessageTask:output_type -> pb.RPCSuccess
	7,  // 14: pb.MessageTaskService.findEnabledMessageTask:output_type -> pb.FindEnabledMessageTaskResponse
	16, // 15: pb.MessageTaskService.countMessageTasksWithStatus:output_type -> pb.RPCCountResponse
	10, // 16: pb.MessageTaskService.listMessageTasksWithStatus:output_type -> pb.ListMessageTasksWithStatusResponse
	12, // 17: pb.MessageTaskService.sendMessageTask:output_type -> pb.SendMessageTaskResponse
	15, // 18: pb.MessageTaskService.updateMessageTaskStatus:output_type -> pb.RPCSuccess
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_service_message_task_proto_init() }
func file_service_message_task_proto_init() {
	if File_service_message_task_proto != nil {
		return
	}
	file_models_model_message_task_proto_init()
	file_models_rpc_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_message_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessageTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessageTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_task_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledMessageTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_task_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledMessageTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_task_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountMessageTasksWithStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_task_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMessageTasksWithStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_task_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMessageTasksWithStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_task_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_task_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_message_task_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMessageTaskStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_message_task_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_message_task_proto_goTypes,
		DependencyIndexes: file_service_message_task_proto_depIdxs,
		EnumInfos:         file_service_message_task_proto_enumTypes,
		MessageInfos:      file_service_message_task_proto_msgTypes,
	}.Build()
	File_service_message_task_proto = out.File
	file_service_message_task_proto_rawDesc = nil
	file_service_message_task_proto_goTypes = nil
	file_service_message_task_proto_depIdxs = nil
}
