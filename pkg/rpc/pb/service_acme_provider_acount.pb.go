// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: service_acme_provider_acount.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建服务商
type CreateACMEProviderAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProviderCode string `protobuf:"bytes,2,opt,name=providerCode,proto3" json:"providerCode,omitempty"`
	EabKid       string `protobuf:"bytes,3,opt,name=eabKid,proto3" json:"eabKid,omitempty"`
	EabKey       string `protobuf:"bytes,4,opt,name=eabKey,proto3" json:"eabKey,omitempty"`
}

func (x *CreateACMEProviderAccountRequest) Reset() {
	*x = CreateACMEProviderAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_provider_acount_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateACMEProviderAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateACMEProviderAccountRequest) ProtoMessage() {}

func (x *CreateACMEProviderAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_provider_acount_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateACMEProviderAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateACMEProviderAccountRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_provider_acount_proto_rawDescGZIP(), []int{0}
}

func (x *CreateACMEProviderAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateACMEProviderAccountRequest) GetProviderCode() string {
	if x != nil {
		return x.ProviderCode
	}
	return ""
}

func (x *CreateACMEProviderAccountRequest) GetEabKid() string {
	if x != nil {
		return x.EabKid
	}
	return ""
}

func (x *CreateACMEProviderAccountRequest) GetEabKey() string {
	if x != nil {
		return x.EabKey
	}
	return ""
}

type CreateACMEProviderAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeProviderAccountId int64 `protobuf:"varint,1,opt,name=acmeProviderAccountId,proto3" json:"acmeProviderAccountId,omitempty"`
}

func (x *CreateACMEProviderAccountResponse) Reset() {
	*x = CreateACMEProviderAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_provider_acount_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateACMEProviderAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateACMEProviderAccountResponse) ProtoMessage() {}

func (x *CreateACMEProviderAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_provider_acount_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateACMEProviderAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateACMEProviderAccountResponse) Descriptor() ([]byte, []int) {
	return file_service_acme_provider_acount_proto_rawDescGZIP(), []int{1}
}

func (x *CreateACMEProviderAccountResponse) GetAcmeProviderAccountId() int64 {
	if x != nil {
		return x.AcmeProviderAccountId
	}
	return 0
}

// 使用代号查找服务商账号
type FindAllACMEProviderAccountsWithProviderCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeProviderCode string `protobuf:"bytes,1,opt,name=acmeProviderCode,proto3" json:"acmeProviderCode,omitempty"`
}

func (x *FindAllACMEProviderAccountsWithProviderCodeRequest) Reset() {
	*x = FindAllACMEProviderAccountsWithProviderCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_provider_acount_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllACMEProviderAccountsWithProviderCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllACMEProviderAccountsWithProviderCodeRequest) ProtoMessage() {}

func (x *FindAllACMEProviderAccountsWithProviderCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_provider_acount_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllACMEProviderAccountsWithProviderCodeRequest.ProtoReflect.Descriptor instead.
func (*FindAllACMEProviderAccountsWithProviderCodeRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_provider_acount_proto_rawDescGZIP(), []int{2}
}

func (x *FindAllACMEProviderAccountsWithProviderCodeRequest) GetAcmeProviderCode() string {
	if x != nil {
		return x.AcmeProviderCode
	}
	return ""
}

type FindAllACMEProviderAccountsWithProviderCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeProviderAccounts []*ACMEProviderAccount `protobuf:"bytes,1,rep,name=acmeProviderAccounts,proto3" json:"acmeProviderAccounts,omitempty"`
}

func (x *FindAllACMEProviderAccountsWithProviderCodeResponse) Reset() {
	*x = FindAllACMEProviderAccountsWithProviderCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_provider_acount_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllACMEProviderAccountsWithProviderCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllACMEProviderAccountsWithProviderCodeResponse) ProtoMessage() {}

func (x *FindAllACMEProviderAccountsWithProviderCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_provider_acount_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllACMEProviderAccountsWithProviderCodeResponse.ProtoReflect.Descriptor instead.
func (*FindAllACMEProviderAccountsWithProviderCodeResponse) Descriptor() ([]byte, []int) {
	return file_service_acme_provider_acount_proto_rawDescGZIP(), []int{3}
}

func (x *FindAllACMEProviderAccountsWithProviderCodeResponse) GetAcmeProviderAccounts() []*ACMEProviderAccount {
	if x != nil {
		return x.AcmeProviderAccounts
	}
	return nil
}

// 修改服务商账号
type UpdateACMEProviderAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeProviderAccountId int64  `protobuf:"varint,1,opt,name=acmeProviderAccountId,proto3" json:"acmeProviderAccountId,omitempty"`
	Name                  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EabKid                string `protobuf:"bytes,3,opt,name=eabKid,proto3" json:"eabKid,omitempty"`
	EabKey                string `protobuf:"bytes,4,opt,name=eabKey,proto3" json:"eabKey,omitempty"`
}

func (x *UpdateACMEProviderAccountRequest) Reset() {
	*x = UpdateACMEProviderAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_provider_acount_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateACMEProviderAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateACMEProviderAccountRequest) ProtoMessage() {}

func (x *UpdateACMEProviderAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_provider_acount_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateACMEProviderAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateACMEProviderAccountRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_provider_acount_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateACMEProviderAccountRequest) GetAcmeProviderAccountId() int64 {
	if x != nil {
		return x.AcmeProviderAccountId
	}
	return 0
}

func (x *UpdateACMEProviderAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateACMEProviderAccountRequest) GetEabKid() string {
	if x != nil {
		return x.EabKid
	}
	return ""
}

func (x *UpdateACMEProviderAccountRequest) GetEabKey() string {
	if x != nil {
		return x.EabKey
	}
	return ""
}

// 删除服务商账号
type DeleteACMEProviderAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeProviderAccountId int64 `protobuf:"varint,1,opt,name=acmeProviderAccountId,proto3" json:"acmeProviderAccountId,omitempty"`
}

func (x *DeleteACMEProviderAccountRequest) Reset() {
	*x = DeleteACMEProviderAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_provider_acount_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteACMEProviderAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteACMEProviderAccountRequest) ProtoMessage() {}

func (x *DeleteACMEProviderAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_provider_acount_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteACMEProviderAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteACMEProviderAccountRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_provider_acount_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteACMEProviderAccountRequest) GetAcmeProviderAccountId() int64 {
	if x != nil {
		return x.AcmeProviderAccountId
	}
	return 0
}

// 查找单个服务商账号
type FindEnabledACMEProviderAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeProviderAccountId int64 `protobuf:"varint,1,opt,name=acmeProviderAccountId,proto3" json:"acmeProviderAccountId,omitempty"`
}

func (x *FindEnabledACMEProviderAccountRequest) Reset() {
	*x = FindEnabledACMEProviderAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_provider_acount_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledACMEProviderAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledACMEProviderAccountRequest) ProtoMessage() {}

func (x *FindEnabledACMEProviderAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_provider_acount_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledACMEProviderAccountRequest.ProtoReflect.Descriptor instead.
func (*FindEnabledACMEProviderAccountRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_provider_acount_proto_rawDescGZIP(), []int{6}
}

func (x *FindEnabledACMEProviderAccountRequest) GetAcmeProviderAccountId() int64 {
	if x != nil {
		return x.AcmeProviderAccountId
	}
	return 0
}

type FindEnabledACMEProviderAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeProviderAccount *ACMEProviderAccount `protobuf:"bytes,1,opt,name=acmeProviderAccount,proto3" json:"acmeProviderAccount,omitempty"`
}

func (x *FindEnabledACMEProviderAccountResponse) Reset() {
	*x = FindEnabledACMEProviderAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_provider_acount_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledACMEProviderAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledACMEProviderAccountResponse) ProtoMessage() {}

func (x *FindEnabledACMEProviderAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_provider_acount_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledACMEProviderAccountResponse.ProtoReflect.Descriptor instead.
func (*FindEnabledACMEProviderAccountResponse) Descriptor() ([]byte, []int) {
	return file_service_acme_provider_acount_proto_rawDescGZIP(), []int{7}
}

func (x *FindEnabledACMEProviderAccountResponse) GetAcmeProviderAccount() *ACMEProviderAccount {
	if x != nil {
		return x.AcmeProviderAccount
	}
	return nil
}

// 计算所有服务商账号数量
type CountAllEnabledACMEProviderAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CountAllEnabledACMEProviderAccountsRequest) Reset() {
	*x = CountAllEnabledACMEProviderAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_provider_acount_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAllEnabledACMEProviderAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAllEnabledACMEProviderAccountsRequest) ProtoMessage() {}

func (x *CountAllEnabledACMEProviderAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_provider_acount_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAllEnabledACMEProviderAccountsRequest.ProtoReflect.Descriptor instead.
func (*CountAllEnabledACMEProviderAccountsRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_provider_acount_proto_rawDescGZIP(), []int{8}
}

// 列出单页服务商账号
type ListEnabledACMEProviderAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListEnabledACMEProviderAccountsRequest) Reset() {
	*x = ListEnabledACMEProviderAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_provider_acount_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnabledACMEProviderAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnabledACMEProviderAccountsRequest) ProtoMessage() {}

func (x *ListEnabledACMEProviderAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_provider_acount_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnabledACMEProviderAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListEnabledACMEProviderAccountsRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_provider_acount_proto_rawDescGZIP(), []int{9}
}

func (x *ListEnabledACMEProviderAccountsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListEnabledACMEProviderAccountsRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListEnabledACMEProviderAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeProviderAccounts []*ACMEProviderAccount `protobuf:"bytes,1,rep,name=acmeProviderAccounts,proto3" json:"acmeProviderAccounts,omitempty"`
}

func (x *ListEnabledACMEProviderAccountsResponse) Reset() {
	*x = ListEnabledACMEProviderAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_provider_acount_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnabledACMEProviderAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnabledACMEProviderAccountsResponse) ProtoMessage() {}

func (x *ListEnabledACMEProviderAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_provider_acount_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnabledACMEProviderAccountsResponse.ProtoReflect.Descriptor instead.
func (*ListEnabledACMEProviderAccountsResponse) Descriptor() ([]byte, []int) {
	return file_service_acme_provider_acount_proto_rawDescGZIP(), []int{10}
}

func (x *ListEnabledACMEProviderAccountsResponse) GetAcmeProviderAccounts() []*ACMEProviderAccount {
	if x != nil {
		return x.AcmeProviderAccounts
	}
	return nil
}

var File_service_acme_provider_acount_proto protoreflect.FileDescriptor

var file_service_acme_provider_acount_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x6d, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x19, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x61, 0x63, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01,
	0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x61,
	0x62, 0x4b, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x61, 0x62, 0x4b,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x61, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x61, 0x62, 0x4b, 0x65, 0x79, 0x22, 0x59, 0x0a, 0x21, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x15, 0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15,
	0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x32, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c,
	0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x61,
	0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x33, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x6c, 0x6c, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x14, 0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x14, 0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x9c, 0x01, 0x0a,
	0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x15, 0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x61, 0x62, 0x4b, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x61, 0x62,
	0x4b, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x61, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x61, 0x62, 0x4b, 0x65, 0x79, 0x22, 0x58, 0x0a, 0x20, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x15, 0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15,
	0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x25, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x15, 0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x61,
	0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x26, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x13, 0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x13, 0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x2a, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x76, 0x0a,
	0x27, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x14, 0x61, 0x63, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x43, 0x4d, 0x45,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x14, 0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x32, 0xaf, 0x06, 0x0a, 0x1a, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x43,
	0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x43, 0x4d,
	0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9e,
	0x01, 0x0a, 0x2b, 0x66, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x57, 0x69,
	0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x36,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x41, 0x43, 0x4d, 0x45, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x57,
	0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x6c, 0x6c, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x51, 0x0a, 0x19, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x24, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x77, 0x0a, 0x1e, 0x66, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b,
	0x0a, 0x23, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x1f, 0x6c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2a,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41,
	0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_acme_provider_acount_proto_rawDescOnce sync.Once
	file_service_acme_provider_acount_proto_rawDescData = file_service_acme_provider_acount_proto_rawDesc
)

func file_service_acme_provider_acount_proto_rawDescGZIP() []byte {
	file_service_acme_provider_acount_proto_rawDescOnce.Do(func() {
		file_service_acme_provider_acount_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_acme_provider_acount_proto_rawDescData)
	})
	return file_service_acme_provider_acount_proto_rawDescData
}

var file_service_acme_provider_acount_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_service_acme_provider_acount_proto_goTypes = []interface{}{
	(*CreateACMEProviderAccountRequest)(nil),                    // 0: pb.CreateACMEProviderAccountRequest
	(*CreateACMEProviderAccountResponse)(nil),                   // 1: pb.CreateACMEProviderAccountResponse
	(*FindAllACMEProviderAccountsWithProviderCodeRequest)(nil),  // 2: pb.FindAllACMEProviderAccountsWithProviderCodeRequest
	(*FindAllACMEProviderAccountsWithProviderCodeResponse)(nil), // 3: pb.FindAllACMEProviderAccountsWithProviderCodeResponse
	(*UpdateACMEProviderAccountRequest)(nil),                    // 4: pb.UpdateACMEProviderAccountRequest
	(*DeleteACMEProviderAccountRequest)(nil),                    // 5: pb.DeleteACMEProviderAccountRequest
	(*FindEnabledACMEProviderAccountRequest)(nil),               // 6: pb.FindEnabledACMEProviderAccountRequest
	(*FindEnabledACMEProviderAccountResponse)(nil),              // 7: pb.FindEnabledACMEProviderAccountResponse
	(*CountAllEnabledACMEProviderAccountsRequest)(nil),          // 8: pb.CountAllEnabledACMEProviderAccountsRequest
	(*ListEnabledACMEProviderAccountsRequest)(nil),              // 9: pb.ListEnabledACMEProviderAccountsRequest
	(*ListEnabledACMEProviderAccountsResponse)(nil),             // 10: pb.ListEnabledACMEProviderAccountsResponse
	(*ACMEProviderAccount)(nil),                                 // 11: pb.ACMEProviderAccount
	(*RPCSuccess)(nil),                                          // 12: pb.RPCSuccess
	(*RPCCountResponse)(nil),                                    // 13: pb.RPCCountResponse
}
var file_service_acme_provider_acount_proto_depIdxs = []int32{
	11, // 0: pb.FindAllACMEProviderAccountsWithProviderCodeResponse.acmeProviderAccounts:type_name -> pb.ACMEProviderAccount
	11, // 1: pb.FindEnabledACMEProviderAccountResponse.acmeProviderAccount:type_name -> pb.ACMEProviderAccount
	11, // 2: pb.ListEnabledACMEProviderAccountsResponse.acmeProviderAccounts:type_name -> pb.ACMEProviderAccount
	0,  // 3: pb.ACMEProviderAccountService.createACMEProviderAccount:input_type -> pb.CreateACMEProviderAccountRequest
	2,  // 4: pb.ACMEProviderAccountService.findAllACMEProviderAccountsWithProviderCode:input_type -> pb.FindAllACMEProviderAccountsWithProviderCodeRequest
	4,  // 5: pb.ACMEProviderAccountService.updateACMEProviderAccount:input_type -> pb.UpdateACMEProviderAccountRequest
	5,  // 6: pb.ACMEProviderAccountService.deleteACMEProviderAccount:input_type -> pb.DeleteACMEProviderAccountRequest
	6,  // 7: pb.ACMEProviderAccountService.findEnabledACMEProviderAccount:input_type -> pb.FindEnabledACMEProviderAccountRequest
	8,  // 8: pb.ACMEProviderAccountService.countAllEnabledACMEProviderAccounts:input_type -> pb.CountAllEnabledACMEProviderAccountsRequest
	9,  // 9: pb.ACMEProviderAccountService.listEnabledACMEProviderAccounts:input_type -> pb.ListEnabledACMEProviderAccountsRequest
	1,  // 10: pb.ACMEProviderAccountService.createACMEProviderAccount:output_type -> pb.CreateACMEProviderAccountResponse
	3,  // 11: pb.ACMEProviderAccountService.findAllACMEProviderAccountsWithProviderCode:output_type -> pb.FindAllACMEProviderAccountsWithProviderCodeResponse
	12, // 12: pb.ACMEProviderAccountService.updateACMEProviderAccount:output_type -> pb.RPCSuccess
	12, // 13: pb.ACMEProviderAccountService.deleteACMEProviderAccount:output_type -> pb.RPCSuccess
	7,  // 14: pb.ACMEProviderAccountService.findEnabledACMEProviderAccount:output_type -> pb.FindEnabledACMEProviderAccountResponse
	13, // 15: pb.ACMEProviderAccountService.countAllEnabledACMEProviderAccounts:output_type -> pb.RPCCountResponse
	10, // 16: pb.ACMEProviderAccountService.listEnabledACMEProviderAccounts:output_type -> pb.ListEnabledACMEProviderAccountsResponse
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_service_acme_provider_acount_proto_init() }
func file_service_acme_provider_acount_proto_init() {
	if File_service_acme_provider_acount_proto != nil {
		return
	}
	file_models_rpc_messages_proto_init()
	file_models_model_acme_provider_account_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_acme_provider_acount_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateACMEProviderAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_provider_acount_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateACMEProviderAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_provider_acount_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllACMEProviderAccountsWithProviderCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_provider_acount_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllACMEProviderAccountsWithProviderCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_provider_acount_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateACMEProviderAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_provider_acount_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteACMEProviderAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_provider_acount_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledACMEProviderAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_provider_acount_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledACMEProviderAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_provider_acount_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAllEnabledACMEProviderAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_provider_acount_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnabledACMEProviderAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_provider_acount_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnabledACMEProviderAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_acme_provider_acount_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_acme_provider_acount_proto_goTypes,
		DependencyIndexes: file_service_acme_provider_acount_proto_depIdxs,
		MessageInfos:      file_service_acme_provider_acount_proto_msgTypes,
	}.Build()
	File_service_acme_provider_acount_proto = out.File
	file_service_acme_provider_acount_proto_rawDesc = nil
	file_service_acme_provider_acount_proto_goTypes = nil
	file_service_acme_provider_acount_proto_depIdxs = nil
}
