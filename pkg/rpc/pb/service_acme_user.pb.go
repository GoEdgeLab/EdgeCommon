// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: service_acme_user.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建用户
type CreateACMEUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                int64  `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`                               // 所属用户，只有管理员才有权限指定
	Email                 string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`                                  // 用户邮箱
	Description           string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`                      // 用户描述
	AcmeProviderCode      string `protobuf:"bytes,3,opt,name=acmeProviderCode,proto3" json:"acmeProviderCode,omitempty"`            // 服务商代号
	AcmeProviderAccountId int64  `protobuf:"varint,4,opt,name=acmeProviderAccountId,proto3" json:"acmeProviderAccountId,omitempty"` // 服务商帐号
}

func (x *CreateACMEUserRequest) Reset() {
	*x = CreateACMEUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateACMEUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateACMEUserRequest) ProtoMessage() {}

func (x *CreateACMEUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateACMEUserRequest.ProtoReflect.Descriptor instead.
func (*CreateACMEUserRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_user_proto_rawDescGZIP(), []int{0}
}

func (x *CreateACMEUserRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateACMEUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateACMEUserRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateACMEUserRequest) GetAcmeProviderCode() string {
	if x != nil {
		return x.AcmeProviderCode
	}
	return ""
}

func (x *CreateACMEUserRequest) GetAcmeProviderAccountId() int64 {
	if x != nil {
		return x.AcmeProviderAccountId
	}
	return 0
}

type CreateACMEUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeUserId int64 `protobuf:"varint,1,opt,name=acmeUserId,proto3" json:"acmeUserId,omitempty"`
}

func (x *CreateACMEUserResponse) Reset() {
	*x = CreateACMEUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateACMEUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateACMEUserResponse) ProtoMessage() {}

func (x *CreateACMEUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateACMEUserResponse.ProtoReflect.Descriptor instead.
func (*CreateACMEUserResponse) Descriptor() ([]byte, []int) {
	return file_service_acme_user_proto_rawDescGZIP(), []int{1}
}

func (x *CreateACMEUserResponse) GetAcmeUserId() int64 {
	if x != nil {
		return x.AcmeUserId
	}
	return 0
}

// 修改用户
type UpdateACMEUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeUserId  int64  `protobuf:"varint,1,opt,name=acmeUserId,proto3" json:"acmeUserId,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateACMEUserRequest) Reset() {
	*x = UpdateACMEUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateACMEUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateACMEUserRequest) ProtoMessage() {}

func (x *UpdateACMEUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateACMEUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateACMEUserRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_user_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateACMEUserRequest) GetAcmeUserId() int64 {
	if x != nil {
		return x.AcmeUserId
	}
	return 0
}

func (x *UpdateACMEUserRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// 删除用户
type DeleteACMEUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeUserId int64 `protobuf:"varint,1,opt,name=acmeUserId,proto3" json:"acmeUserId,omitempty"`
}

func (x *DeleteACMEUserRequest) Reset() {
	*x = DeleteACMEUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteACMEUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteACMEUserRequest) ProtoMessage() {}

func (x *DeleteACMEUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteACMEUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteACMEUserRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_user_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteACMEUserRequest) GetAcmeUserId() int64 {
	if x != nil {
		return x.AcmeUserId
	}
	return 0
}

// 计算用户数量
type CountAcmeUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId               int64 `protobuf:"varint,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
	UserId                int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	AcmeProviderAccountId int64 `protobuf:"varint,3,opt,name=acmeProviderAccountId,proto3" json:"acmeProviderAccountId,omitempty"`
}

func (x *CountAcmeUsersRequest) Reset() {
	*x = CountAcmeUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAcmeUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAcmeUsersRequest) ProtoMessage() {}

func (x *CountAcmeUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAcmeUsersRequest.ProtoReflect.Descriptor instead.
func (*CountAcmeUsersRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_user_proto_rawDescGZIP(), []int{4}
}

func (x *CountAcmeUsersRequest) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *CountAcmeUsersRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CountAcmeUsersRequest) GetAcmeProviderAccountId() int64 {
	if x != nil {
		return x.AcmeProviderAccountId
	}
	return 0
}

// 列出单页用户
type ListACMEUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId int64 `protobuf:"varint,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Offset  int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Size    int64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListACMEUsersRequest) Reset() {
	*x = ListACMEUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListACMEUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListACMEUsersRequest) ProtoMessage() {}

func (x *ListACMEUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListACMEUsersRequest.ProtoReflect.Descriptor instead.
func (*ListACMEUsersRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_user_proto_rawDescGZIP(), []int{5}
}

func (x *ListACMEUsersRequest) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *ListACMEUsersRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListACMEUsersRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListACMEUsersRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListACMEUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeUsers []*ACMEUser `protobuf:"bytes,1,rep,name=acmeUsers,proto3" json:"acmeUsers,omitempty"`
}

func (x *ListACMEUsersResponse) Reset() {
	*x = ListACMEUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListACMEUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListACMEUsersResponse) ProtoMessage() {}

func (x *ListACMEUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListACMEUsersResponse.ProtoReflect.Descriptor instead.
func (*ListACMEUsersResponse) Descriptor() ([]byte, []int) {
	return file_service_acme_user_proto_rawDescGZIP(), []int{6}
}

func (x *ListACMEUsersResponse) GetAcmeUsers() []*ACMEUser {
	if x != nil {
		return x.AcmeUsers
	}
	return nil
}

// 查找单个用户
type FindEnabledACMEUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeUserId int64 `protobuf:"varint,1,opt,name=acmeUserId,proto3" json:"acmeUserId,omitempty"`
}

func (x *FindEnabledACMEUserRequest) Reset() {
	*x = FindEnabledACMEUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledACMEUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledACMEUserRequest) ProtoMessage() {}

func (x *FindEnabledACMEUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledACMEUserRequest.ProtoReflect.Descriptor instead.
func (*FindEnabledACMEUserRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_user_proto_rawDescGZIP(), []int{7}
}

func (x *FindEnabledACMEUserRequest) GetAcmeUserId() int64 {
	if x != nil {
		return x.AcmeUserId
	}
	return 0
}

type FindEnabledACMEUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeUser *ACMEUser `protobuf:"bytes,1,opt,name=acmeUser,proto3" json:"acmeUser,omitempty"`
}

func (x *FindEnabledACMEUserResponse) Reset() {
	*x = FindEnabledACMEUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledACMEUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledACMEUserResponse) ProtoMessage() {}

func (x *FindEnabledACMEUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledACMEUserResponse.ProtoReflect.Descriptor instead.
func (*FindEnabledACMEUserResponse) Descriptor() ([]byte, []int) {
	return file_service_acme_user_proto_rawDescGZIP(), []int{8}
}

func (x *FindEnabledACMEUserResponse) GetAcmeUser() *ACMEUser {
	if x != nil {
		return x.AcmeUser
	}
	return nil
}

// 查找所有用户
type FindAllACMEUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId          int64  `protobuf:"varint,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
	UserId           int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	AcmeProviderCode string `protobuf:"bytes,3,opt,name=acmeProviderCode,proto3" json:"acmeProviderCode,omitempty"`
}

func (x *FindAllACMEUsersRequest) Reset() {
	*x = FindAllACMEUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllACMEUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllACMEUsersRequest) ProtoMessage() {}

func (x *FindAllACMEUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllACMEUsersRequest.ProtoReflect.Descriptor instead.
func (*FindAllACMEUsersRequest) Descriptor() ([]byte, []int) {
	return file_service_acme_user_proto_rawDescGZIP(), []int{9}
}

func (x *FindAllACMEUsersRequest) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *FindAllACMEUsersRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FindAllACMEUsersRequest) GetAcmeProviderCode() string {
	if x != nil {
		return x.AcmeProviderCode
	}
	return ""
}

type FindAllACMEUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcmeUsers []*ACMEUser `protobuf:"bytes,1,rep,name=acmeUsers,proto3" json:"acmeUsers,omitempty"`
}

func (x *FindAllACMEUsersResponse) Reset() {
	*x = FindAllACMEUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_acme_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllACMEUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllACMEUsersResponse) ProtoMessage() {}

func (x *FindAllACMEUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_acme_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllACMEUsersResponse.ProtoReflect.Descriptor instead.
func (*FindAllACMEUsersResponse) Descriptor() ([]byte, []int) {
	return file_service_acme_user_proto_rawDescGZIP(), []int{10}
}

func (x *FindAllACMEUsersResponse) GetAcmeUsers() []*ACMEUser {
	if x != nil {
		return x.AcmeUsers
	}
	return nil
}

var File_service_acme_user_proto protoreflect.FileDescriptor

var file_service_acme_user_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x6d, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x19, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x61, 0x63, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x63, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x15,
	0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x61, 0x63, 0x6d,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x38, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x61, 0x63, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x6d, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x6d, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x7f, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x61,
	0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x61, 0x63, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x74, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x43, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x09, 0x61, 0x63, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x09, 0x61, 0x63, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x3c, 0x0a, 0x1a,
	0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63,
	0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x61, 0x63, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x1b, 0x46, 0x69,
	0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x61, 0x63, 0x6d,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x61, 0x63, 0x6d, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x22, 0x77, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x41, 0x43,
	0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x63, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x46, 0x0a, 0x18,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x61, 0x63, 0x6d, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x61, 0x63, 0x6d, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x32, 0x84, 0x04, 0x0a, 0x0f, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3b,
	0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x19, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50,
	0x43, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x66, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x43, 0x4d, 0x45,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10,
	0x66, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x41, 0x43, 0x4d,
	0x45, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x41, 0x43, 0x4d, 0x45, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_acme_user_proto_rawDescOnce sync.Once
	file_service_acme_user_proto_rawDescData = file_service_acme_user_proto_rawDesc
)

func file_service_acme_user_proto_rawDescGZIP() []byte {
	file_service_acme_user_proto_rawDescOnce.Do(func() {
		file_service_acme_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_acme_user_proto_rawDescData)
	})
	return file_service_acme_user_proto_rawDescData
}

var file_service_acme_user_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_service_acme_user_proto_goTypes = []interface{}{
	(*CreateACMEUserRequest)(nil),       // 0: pb.CreateACMEUserRequest
	(*CreateACMEUserResponse)(nil),      // 1: pb.CreateACMEUserResponse
	(*UpdateACMEUserRequest)(nil),       // 2: pb.UpdateACMEUserRequest
	(*DeleteACMEUserRequest)(nil),       // 3: pb.DeleteACMEUserRequest
	(*CountAcmeUsersRequest)(nil),       // 4: pb.CountAcmeUsersRequest
	(*ListACMEUsersRequest)(nil),        // 5: pb.ListACMEUsersRequest
	(*ListACMEUsersResponse)(nil),       // 6: pb.ListACMEUsersResponse
	(*FindEnabledACMEUserRequest)(nil),  // 7: pb.FindEnabledACMEUserRequest
	(*FindEnabledACMEUserResponse)(nil), // 8: pb.FindEnabledACMEUserResponse
	(*FindAllACMEUsersRequest)(nil),     // 9: pb.FindAllACMEUsersRequest
	(*FindAllACMEUsersResponse)(nil),    // 10: pb.FindAllACMEUsersResponse
	(*ACMEUser)(nil),                    // 11: pb.ACMEUser
	(*RPCSuccess)(nil),                  // 12: pb.RPCSuccess
	(*RPCCountResponse)(nil),            // 13: pb.RPCCountResponse
}
var file_service_acme_user_proto_depIdxs = []int32{
	11, // 0: pb.ListACMEUsersResponse.acmeUsers:type_name -> pb.ACMEUser
	11, // 1: pb.FindEnabledACMEUserResponse.acmeUser:type_name -> pb.ACMEUser
	11, // 2: pb.FindAllACMEUsersResponse.acmeUsers:type_name -> pb.ACMEUser
	0,  // 3: pb.ACMEUserService.createACMEUser:input_type -> pb.CreateACMEUserRequest
	2,  // 4: pb.ACMEUserService.updateACMEUser:input_type -> pb.UpdateACMEUserRequest
	3,  // 5: pb.ACMEUserService.deleteACMEUser:input_type -> pb.DeleteACMEUserRequest
	4,  // 6: pb.ACMEUserService.countACMEUsers:input_type -> pb.CountAcmeUsersRequest
	5,  // 7: pb.ACMEUserService.listACMEUsers:input_type -> pb.ListACMEUsersRequest
	7,  // 8: pb.ACMEUserService.findEnabledACMEUser:input_type -> pb.FindEnabledACMEUserRequest
	9,  // 9: pb.ACMEUserService.findAllACMEUsers:input_type -> pb.FindAllACMEUsersRequest
	1,  // 10: pb.ACMEUserService.createACMEUser:output_type -> pb.CreateACMEUserResponse
	12, // 11: pb.ACMEUserService.updateACMEUser:output_type -> pb.RPCSuccess
	12, // 12: pb.ACMEUserService.deleteACMEUser:output_type -> pb.RPCSuccess
	13, // 13: pb.ACMEUserService.countACMEUsers:output_type -> pb.RPCCountResponse
	6,  // 14: pb.ACMEUserService.listACMEUsers:output_type -> pb.ListACMEUsersResponse
	8,  // 15: pb.ACMEUserService.findEnabledACMEUser:output_type -> pb.FindEnabledACMEUserResponse
	10, // 16: pb.ACMEUserService.findAllACMEUsers:output_type -> pb.FindAllACMEUsersResponse
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_service_acme_user_proto_init() }
func file_service_acme_user_proto_init() {
	if File_service_acme_user_proto != nil {
		return
	}
	file_models_rpc_messages_proto_init()
	file_models_model_acme_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_acme_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateACMEUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateACMEUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateACMEUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteACMEUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAcmeUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListACMEUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListACMEUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledACMEUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledACMEUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllACMEUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_acme_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllACMEUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_acme_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_acme_user_proto_goTypes,
		DependencyIndexes: file_service_acme_user_proto_depIdxs,
		MessageInfos:      file_service_acme_user_proto_msgTypes,
	}.Build()
	File_service_acme_user_proto = out.File
	file_service_acme_user_proto_rawDesc = nil
	file_service_acme_user_proto_goTypes = nil
	file_service_acme_user_proto_depIdxs = nil
}
