// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: service_http_location.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建路径规则
type CreateHTTPLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId    int64    `protobuf:"varint,1,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Pattern     string   `protobuf:"bytes,4,opt,name=pattern,proto3" json:"pattern,omitempty"`
	IsBreak     bool     `protobuf:"varint,5,opt,name=isBreak,proto3" json:"isBreak,omitempty"`
	CondsJSON   []byte   `protobuf:"bytes,6,opt,name=condsJSON,proto3" json:"condsJSON,omitempty"`
	Domains     []string `protobuf:"bytes,7,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *CreateHTTPLocationRequest) Reset() {
	*x = CreateHTTPLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_http_location_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHTTPLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHTTPLocationRequest) ProtoMessage() {}

func (x *CreateHTTPLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_http_location_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHTTPLocationRequest.ProtoReflect.Descriptor instead.
func (*CreateHTTPLocationRequest) Descriptor() ([]byte, []int) {
	return file_service_http_location_proto_rawDescGZIP(), []int{0}
}

func (x *CreateHTTPLocationRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CreateHTTPLocationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateHTTPLocationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateHTTPLocationRequest) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *CreateHTTPLocationRequest) GetIsBreak() bool {
	if x != nil {
		return x.IsBreak
	}
	return false
}

func (x *CreateHTTPLocationRequest) GetCondsJSON() []byte {
	if x != nil {
		return x.CondsJSON
	}
	return nil
}

func (x *CreateHTTPLocationRequest) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

type CreateHTTPLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId int64 `protobuf:"varint,1,opt,name=locationId,proto3" json:"locationId,omitempty"`
}

func (x *CreateHTTPLocationResponse) Reset() {
	*x = CreateHTTPLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_http_location_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHTTPLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHTTPLocationResponse) ProtoMessage() {}

func (x *CreateHTTPLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_http_location_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHTTPLocationResponse.ProtoReflect.Descriptor instead.
func (*CreateHTTPLocationResponse) Descriptor() ([]byte, []int) {
	return file_service_http_location_proto_rawDescGZIP(), []int{1}
}

func (x *CreateHTTPLocationResponse) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

// 修改路径规则
type UpdateHTTPLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId  int64    `protobuf:"varint,1,opt,name=locationId,proto3" json:"locationId,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Pattern     string   `protobuf:"bytes,4,opt,name=pattern,proto3" json:"pattern,omitempty"`
	IsOn        bool     `protobuf:"varint,5,opt,name=isOn,proto3" json:"isOn,omitempty"`
	IsBreak     bool     `protobuf:"varint,6,opt,name=isBreak,proto3" json:"isBreak,omitempty"`
	CondsJSON   []byte   `protobuf:"bytes,7,opt,name=condsJSON,proto3" json:"condsJSON,omitempty"`
	Domains     []string `protobuf:"bytes,8,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *UpdateHTTPLocationRequest) Reset() {
	*x = UpdateHTTPLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_http_location_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHTTPLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHTTPLocationRequest) ProtoMessage() {}

func (x *UpdateHTTPLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_http_location_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHTTPLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateHTTPLocationRequest) Descriptor() ([]byte, []int) {
	return file_service_http_location_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateHTTPLocationRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *UpdateHTTPLocationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateHTTPLocationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateHTTPLocationRequest) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *UpdateHTTPLocationRequest) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *UpdateHTTPLocationRequest) GetIsBreak() bool {
	if x != nil {
		return x.IsBreak
	}
	return false
}

func (x *UpdateHTTPLocationRequest) GetCondsJSON() []byte {
	if x != nil {
		return x.CondsJSON
	}
	return nil
}

func (x *UpdateHTTPLocationRequest) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

// 查找路径规则配置
type FindEnabledHTTPLocationConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId int64 `protobuf:"varint,1,opt,name=locationId,proto3" json:"locationId,omitempty"`
}

func (x *FindEnabledHTTPLocationConfigRequest) Reset() {
	*x = FindEnabledHTTPLocationConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_http_location_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledHTTPLocationConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledHTTPLocationConfigRequest) ProtoMessage() {}

func (x *FindEnabledHTTPLocationConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_http_location_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledHTTPLocationConfigRequest.ProtoReflect.Descriptor instead.
func (*FindEnabledHTTPLocationConfigRequest) Descriptor() ([]byte, []int) {
	return file_service_http_location_proto_rawDescGZIP(), []int{3}
}

func (x *FindEnabledHTTPLocationConfigRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

type FindEnabledHTTPLocationConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationJSON []byte `protobuf:"bytes,1,opt,name=locationJSON,proto3" json:"locationJSON,omitempty"`
}

func (x *FindEnabledHTTPLocationConfigResponse) Reset() {
	*x = FindEnabledHTTPLocationConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_http_location_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledHTTPLocationConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledHTTPLocationConfigResponse) ProtoMessage() {}

func (x *FindEnabledHTTPLocationConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_http_location_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledHTTPLocationConfigResponse.ProtoReflect.Descriptor instead.
func (*FindEnabledHTTPLocationConfigResponse) Descriptor() ([]byte, []int) {
	return file_service_http_location_proto_rawDescGZIP(), []int{4}
}

func (x *FindEnabledHTTPLocationConfigResponse) GetLocationJSON() []byte {
	if x != nil {
		return x.LocationJSON
	}
	return nil
}

// 删除路径规则
type DeleteHTTPLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId int64 `protobuf:"varint,1,opt,name=locationId,proto3" json:"locationId,omitempty"`
}

func (x *DeleteHTTPLocationRequest) Reset() {
	*x = DeleteHTTPLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_http_location_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHTTPLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHTTPLocationRequest) ProtoMessage() {}

func (x *DeleteHTTPLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_http_location_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHTTPLocationRequest.ProtoReflect.Descriptor instead.
func (*DeleteHTTPLocationRequest) Descriptor() ([]byte, []int) {
	return file_service_http_location_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteHTTPLocationRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

// 查找反向代理设置
type FindAndInitHTTPLocationReverseProxyConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId int64 `protobuf:"varint,1,opt,name=locationId,proto3" json:"locationId,omitempty"`
}

func (x *FindAndInitHTTPLocationReverseProxyConfigRequest) Reset() {
	*x = FindAndInitHTTPLocationReverseProxyConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_http_location_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAndInitHTTPLocationReverseProxyConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAndInitHTTPLocationReverseProxyConfigRequest) ProtoMessage() {}

func (x *FindAndInitHTTPLocationReverseProxyConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_http_location_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAndInitHTTPLocationReverseProxyConfigRequest.ProtoReflect.Descriptor instead.
func (*FindAndInitHTTPLocationReverseProxyConfigRequest) Descriptor() ([]byte, []int) {
	return file_service_http_location_proto_rawDescGZIP(), []int{6}
}

func (x *FindAndInitHTTPLocationReverseProxyConfigRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

type FindAndInitHTTPLocationReverseProxyConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReverseProxyJSON    []byte `protobuf:"bytes,1,opt,name=reverseProxyJSON,proto3" json:"reverseProxyJSON,omitempty"`
	ReverseProxyRefJSON []byte `protobuf:"bytes,2,opt,name=reverseProxyRefJSON,proto3" json:"reverseProxyRefJSON,omitempty"`
}

func (x *FindAndInitHTTPLocationReverseProxyConfigResponse) Reset() {
	*x = FindAndInitHTTPLocationReverseProxyConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_http_location_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAndInitHTTPLocationReverseProxyConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAndInitHTTPLocationReverseProxyConfigResponse) ProtoMessage() {}

func (x *FindAndInitHTTPLocationReverseProxyConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_http_location_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAndInitHTTPLocationReverseProxyConfigResponse.ProtoReflect.Descriptor instead.
func (*FindAndInitHTTPLocationReverseProxyConfigResponse) Descriptor() ([]byte, []int) {
	return file_service_http_location_proto_rawDescGZIP(), []int{7}
}

func (x *FindAndInitHTTPLocationReverseProxyConfigResponse) GetReverseProxyJSON() []byte {
	if x != nil {
		return x.ReverseProxyJSON
	}
	return nil
}

func (x *FindAndInitHTTPLocationReverseProxyConfigResponse) GetReverseProxyRefJSON() []byte {
	if x != nil {
		return x.ReverseProxyRefJSON
	}
	return nil
}

// 初始化Web设置
type FindAndInitHTTPLocationWebConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId int64 `protobuf:"varint,1,opt,name=locationId,proto3" json:"locationId,omitempty"`
}

func (x *FindAndInitHTTPLocationWebConfigRequest) Reset() {
	*x = FindAndInitHTTPLocationWebConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_http_location_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAndInitHTTPLocationWebConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAndInitHTTPLocationWebConfigRequest) ProtoMessage() {}

func (x *FindAndInitHTTPLocationWebConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_http_location_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAndInitHTTPLocationWebConfigRequest.ProtoReflect.Descriptor instead.
func (*FindAndInitHTTPLocationWebConfigRequest) Descriptor() ([]byte, []int) {
	return file_service_http_location_proto_rawDescGZIP(), []int{8}
}

func (x *FindAndInitHTTPLocationWebConfigRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

type FindAndInitHTTPLocationWebConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebJSON []byte `protobuf:"bytes,1,opt,name=webJSON,proto3" json:"webJSON,omitempty"`
}

func (x *FindAndInitHTTPLocationWebConfigResponse) Reset() {
	*x = FindAndInitHTTPLocationWebConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_http_location_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAndInitHTTPLocationWebConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAndInitHTTPLocationWebConfigResponse) ProtoMessage() {}

func (x *FindAndInitHTTPLocationWebConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_http_location_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAndInitHTTPLocationWebConfigResponse.ProtoReflect.Descriptor instead.
func (*FindAndInitHTTPLocationWebConfigResponse) Descriptor() ([]byte, []int) {
	return file_service_http_location_proto_rawDescGZIP(), []int{9}
}

func (x *FindAndInitHTTPLocationWebConfigResponse) GetWebJSON() []byte {
	if x != nil {
		return x.WebJSON
	}
	return nil
}

// 修改反向代理设置
type UpdateHTTPLocationReverseProxyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId       int64  `protobuf:"varint,1,opt,name=locationId,proto3" json:"locationId,omitempty"`
	ReverseProxyJSON []byte `protobuf:"bytes,2,opt,name=reverseProxyJSON,proto3" json:"reverseProxyJSON,omitempty"`
}

func (x *UpdateHTTPLocationReverseProxyRequest) Reset() {
	*x = UpdateHTTPLocationReverseProxyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_http_location_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHTTPLocationReverseProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHTTPLocationReverseProxyRequest) ProtoMessage() {}

func (x *UpdateHTTPLocationReverseProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_http_location_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHTTPLocationReverseProxyRequest.ProtoReflect.Descriptor instead.
func (*UpdateHTTPLocationReverseProxyRequest) Descriptor() ([]byte, []int) {
	return file_service_http_location_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateHTTPLocationReverseProxyRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *UpdateHTTPLocationReverseProxyRequest) GetReverseProxyJSON() []byte {
	if x != nil {
		return x.ReverseProxyJSON
	}
	return nil
}

var File_service_http_location_proto protoreflect.FileDescriptor

var file_service_http_location_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x1a, 0x19, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x01, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x42, 0x72, 0x65, 0x61,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x42, 0x72, 0x65, 0x61, 0x6b,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x3c, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf1, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x4f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x42, 0x72,
	0x65, 0x61, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x42, 0x72, 0x65,
	0x61, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x4a, 0x53, 0x4f, 0x4e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x4a, 0x53, 0x4f, 0x4e,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x46, 0x0a, 0x24, 0x46, 0x69,
	0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x4b, 0x0a, 0x25, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x53, 0x4f, 0x4e, 0x22,
	0x3b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x30,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x54, 0x54, 0x50, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x91, 0x01, 0x0a, 0x31, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x69, 0x74,
	0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x10, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4a, 0x53,
	0x4f, 0x4e, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x52, 0x65, 0x66, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x13, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x66,
	0x4a, 0x53, 0x4f, 0x4e, 0x22, 0x49, 0x0a, 0x27, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x49,
	0x6e, 0x69, 0x74, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x65, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x44, 0x0a, 0x28, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x54,
	0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77,
	0x65, 0x62, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x77, 0x65,
	0x62, 0x4a, 0x53, 0x4f, 0x4e, 0x22, 0x73, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4a, 0x53,
	0x4f, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4a, 0x53, 0x4f, 0x4e, 0x32, 0xe1, 0x05, 0x0a, 0x13, 0x48,
	0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x54, 0x54, 0x50,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x74, 0x0a, 0x1d,
	0x66, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x48, 0x54, 0x54, 0x50, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x48, 0x54,
	0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x54, 0x54, 0x50,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x98, 0x01, 0x0a, 0x29, 0x66, 0x69, 0x6e, 0x64,
	0x41, 0x6e, 0x64, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x6e, 0x64, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x54, 0x54, 0x50,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7d, 0x0a, 0x20, 0x66, 0x69, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x69,
	0x74, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x6e, 0x64, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6e, 0x64,
	0x49, 0x6e, 0x69, 0x74, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x65, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5b, 0x0a, 0x1e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x54, 0x54, 0x50, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x12, 0x29, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x54, 0x54, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_http_location_proto_rawDescOnce sync.Once
	file_service_http_location_proto_rawDescData = file_service_http_location_proto_rawDesc
)

func file_service_http_location_proto_rawDescGZIP() []byte {
	file_service_http_location_proto_rawDescOnce.Do(func() {
		file_service_http_location_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_http_location_proto_rawDescData)
	})
	return file_service_http_location_proto_rawDescData
}

var file_service_http_location_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_service_http_location_proto_goTypes = []interface{}{
	(*CreateHTTPLocationRequest)(nil),                         // 0: pb.CreateHTTPLocationRequest
	(*CreateHTTPLocationResponse)(nil),                        // 1: pb.CreateHTTPLocationResponse
	(*UpdateHTTPLocationRequest)(nil),                         // 2: pb.UpdateHTTPLocationRequest
	(*FindEnabledHTTPLocationConfigRequest)(nil),              // 3: pb.FindEnabledHTTPLocationConfigRequest
	(*FindEnabledHTTPLocationConfigResponse)(nil),             // 4: pb.FindEnabledHTTPLocationConfigResponse
	(*DeleteHTTPLocationRequest)(nil),                         // 5: pb.DeleteHTTPLocationRequest
	(*FindAndInitHTTPLocationReverseProxyConfigRequest)(nil),  // 6: pb.FindAndInitHTTPLocationReverseProxyConfigRequest
	(*FindAndInitHTTPLocationReverseProxyConfigResponse)(nil), // 7: pb.FindAndInitHTTPLocationReverseProxyConfigResponse
	(*FindAndInitHTTPLocationWebConfigRequest)(nil),           // 8: pb.FindAndInitHTTPLocationWebConfigRequest
	(*FindAndInitHTTPLocationWebConfigResponse)(nil),          // 9: pb.FindAndInitHTTPLocationWebConfigResponse
	(*UpdateHTTPLocationReverseProxyRequest)(nil),             // 10: pb.UpdateHTTPLocationReverseProxyRequest
	(*RPCSuccess)(nil),                                        // 11: pb.RPCSuccess
}
var file_service_http_location_proto_depIdxs = []int32{
	0,  // 0: pb.HTTPLocationService.createHTTPLocation:input_type -> pb.CreateHTTPLocationRequest
	2,  // 1: pb.HTTPLocationService.updateHTTPLocation:input_type -> pb.UpdateHTTPLocationRequest
	3,  // 2: pb.HTTPLocationService.findEnabledHTTPLocationConfig:input_type -> pb.FindEnabledHTTPLocationConfigRequest
	5,  // 3: pb.HTTPLocationService.deleteHTTPLocation:input_type -> pb.DeleteHTTPLocationRequest
	6,  // 4: pb.HTTPLocationService.findAndInitHTTPLocationReverseProxyConfig:input_type -> pb.FindAndInitHTTPLocationReverseProxyConfigRequest
	8,  // 5: pb.HTTPLocationService.findAndInitHTTPLocationWebConfig:input_type -> pb.FindAndInitHTTPLocationWebConfigRequest
	10, // 6: pb.HTTPLocationService.updateHTTPLocationReverseProxy:input_type -> pb.UpdateHTTPLocationReverseProxyRequest
	1,  // 7: pb.HTTPLocationService.createHTTPLocation:output_type -> pb.CreateHTTPLocationResponse
	11, // 8: pb.HTTPLocationService.updateHTTPLocation:output_type -> pb.RPCSuccess
	4,  // 9: pb.HTTPLocationService.findEnabledHTTPLocationConfig:output_type -> pb.FindEnabledHTTPLocationConfigResponse
	11, // 10: pb.HTTPLocationService.deleteHTTPLocation:output_type -> pb.RPCSuccess
	7,  // 11: pb.HTTPLocationService.findAndInitHTTPLocationReverseProxyConfig:output_type -> pb.FindAndInitHTTPLocationReverseProxyConfigResponse
	9,  // 12: pb.HTTPLocationService.findAndInitHTTPLocationWebConfig:output_type -> pb.FindAndInitHTTPLocationWebConfigResponse
	11, // 13: pb.HTTPLocationService.updateHTTPLocationReverseProxy:output_type -> pb.RPCSuccess
	7,  // [7:14] is the sub-list for method output_type
	0,  // [0:7] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_service_http_location_proto_init() }
func file_service_http_location_proto_init() {
	if File_service_http_location_proto != nil {
		return
	}
	file_models_rpc_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_http_location_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHTTPLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_http_location_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHTTPLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_http_location_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHTTPLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_http_location_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledHTTPLocationConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_http_location_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledHTTPLocationConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_http_location_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHTTPLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_http_location_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAndInitHTTPLocationReverseProxyConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_http_location_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAndInitHTTPLocationReverseProxyConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_http_location_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAndInitHTTPLocationWebConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_http_location_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAndInitHTTPLocationWebConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_http_location_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHTTPLocationReverseProxyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_http_location_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_http_location_proto_goTypes,
		DependencyIndexes: file_service_http_location_proto_depIdxs,
		MessageInfos:      file_service_http_location_proto_msgTypes,
	}.Build()
	File_service_http_location_proto = out.File
	file_service_http_location_proto_rawDesc = nil
	file_service_http_location_proto_goTypes = nil
	file_service_http_location_proto_depIdxs = nil
}
