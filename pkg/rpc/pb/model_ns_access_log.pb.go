// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: models/model_ns_access_log.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 域名服务访问记录
type NSAccessLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NsNodeId   int64 `protobuf:"varint,1,opt,name=nsNodeId,proto3" json:"nsNodeId,omitempty"`
	NsDomainId int64 `protobuf:"varint,2,opt,name=nsDomainId,proto3" json:"nsDomainId,omitempty"`
	NsRecordId int64 `protobuf:"varint,3,opt,name=nsRecordId,proto3" json:"nsRecordId,omitempty"`
	// Deprecated: Marked as deprecated in models/model_ns_access_log.proto.
	NsRouteIds   []int64    `protobuf:"varint,4,rep,packed,name=nsRouteIds,proto3" json:"nsRouteIds,omitempty"`
	NsRouteCodes []string   `protobuf:"bytes,17,rep,name=nsRouteCodes,proto3" json:"nsRouteCodes,omitempty"`
	NsRoutes     []*NSRoute `protobuf:"bytes,18,rep,name=nsRoutes,proto3" json:"nsRoutes,omitempty"` // 仅供查看访问日志时使用
	RemoteAddr   string     `protobuf:"bytes,5,opt,name=remoteAddr,proto3" json:"remoteAddr,omitempty"`
	QuestionName string     `protobuf:"bytes,6,opt,name=questionName,proto3" json:"questionName,omitempty"`
	QuestionType string     `protobuf:"bytes,7,opt,name=questionType,proto3" json:"questionType,omitempty"`
	RecordName   string     `protobuf:"bytes,8,opt,name=recordName,proto3" json:"recordName,omitempty"`
	RecordType   string     `protobuf:"bytes,9,opt,name=recordType,proto3" json:"recordType,omitempty"`
	RecordValue  string     `protobuf:"bytes,10,opt,name=recordValue,proto3" json:"recordValue,omitempty"`
	Networking   string     `protobuf:"bytes,11,opt,name=networking,proto3" json:"networking,omitempty"`
	ServerAddr   string     `protobuf:"bytes,12,opt,name=serverAddr,proto3" json:"serverAddr,omitempty"`
	Timestamp    int64      `protobuf:"varint,13,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RequestId    string     `protobuf:"bytes,14,opt,name=requestId,proto3" json:"requestId,omitempty"`
	TimeLocal    string     `protobuf:"bytes,15,opt,name=timeLocal,proto3" json:"timeLocal,omitempty"`
	Error        string     `protobuf:"bytes,16,opt,name=error,proto3" json:"error,omitempty"`
	IsRecursive  bool       `protobuf:"varint,19,opt,name=isRecursive,proto3" json:"isRecursive,omitempty"`
}

func (x *NSAccessLog) Reset() {
	*x = NSAccessLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_model_ns_access_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NSAccessLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NSAccessLog) ProtoMessage() {}

func (x *NSAccessLog) ProtoReflect() protoreflect.Message {
	mi := &file_models_model_ns_access_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NSAccessLog.ProtoReflect.Descriptor instead.
func (*NSAccessLog) Descriptor() ([]byte, []int) {
	return file_models_model_ns_access_log_proto_rawDescGZIP(), []int{0}
}

func (x *NSAccessLog) GetNsNodeId() int64 {
	if x != nil {
		return x.NsNodeId
	}
	return 0
}

func (x *NSAccessLog) GetNsDomainId() int64 {
	if x != nil {
		return x.NsDomainId
	}
	return 0
}

func (x *NSAccessLog) GetNsRecordId() int64 {
	if x != nil {
		return x.NsRecordId
	}
	return 0
}

// Deprecated: Marked as deprecated in models/model_ns_access_log.proto.
func (x *NSAccessLog) GetNsRouteIds() []int64 {
	if x != nil {
		return x.NsRouteIds
	}
	return nil
}

func (x *NSAccessLog) GetNsRouteCodes() []string {
	if x != nil {
		return x.NsRouteCodes
	}
	return nil
}

func (x *NSAccessLog) GetNsRoutes() []*NSRoute {
	if x != nil {
		return x.NsRoutes
	}
	return nil
}

func (x *NSAccessLog) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

func (x *NSAccessLog) GetQuestionName() string {
	if x != nil {
		return x.QuestionName
	}
	return ""
}

func (x *NSAccessLog) GetQuestionType() string {
	if x != nil {
		return x.QuestionType
	}
	return ""
}

func (x *NSAccessLog) GetRecordName() string {
	if x != nil {
		return x.RecordName
	}
	return ""
}

func (x *NSAccessLog) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *NSAccessLog) GetRecordValue() string {
	if x != nil {
		return x.RecordValue
	}
	return ""
}

func (x *NSAccessLog) GetNetworking() string {
	if x != nil {
		return x.Networking
	}
	return ""
}

func (x *NSAccessLog) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *NSAccessLog) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NSAccessLog) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *NSAccessLog) GetTimeLocal() string {
	if x != nil {
		return x.TimeLocal
	}
	return ""
}

func (x *NSAccessLog) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *NSAccessLog) GetIsRecursive() bool {
	if x != nil {
		return x.IsRecursive
	}
	return false
}

var File_models_model_ns_access_log_proto protoreflect.FileDescriptor

var file_models_model_ns_access_log_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e,
	0x73, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x73, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x04, 0x0a, 0x0b, 0x4e, 0x53, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x6e, 0x73, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x73, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0a, 0x6e, 0x73, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x03, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0a, 0x6e, 0x73, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x73, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x73, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x08, 0x6e, 0x73, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4e,
	0x53, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x08, 0x6e, 0x73, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73,
	0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_models_model_ns_access_log_proto_rawDescOnce sync.Once
	file_models_model_ns_access_log_proto_rawDescData = file_models_model_ns_access_log_proto_rawDesc
)

func file_models_model_ns_access_log_proto_rawDescGZIP() []byte {
	file_models_model_ns_access_log_proto_rawDescOnce.Do(func() {
		file_models_model_ns_access_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_model_ns_access_log_proto_rawDescData)
	})
	return file_models_model_ns_access_log_proto_rawDescData
}

var file_models_model_ns_access_log_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_models_model_ns_access_log_proto_goTypes = []interface{}{
	(*NSAccessLog)(nil), // 0: pb.NSAccessLog
	(*NSRoute)(nil),     // 1: pb.NSRoute
}
var file_models_model_ns_access_log_proto_depIdxs = []int32{
	1, // 0: pb.NSAccessLog.nsRoutes:type_name -> pb.NSRoute
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_models_model_ns_access_log_proto_init() }
func file_models_model_ns_access_log_proto_init() {
	if File_models_model_ns_access_log_proto != nil {
		return
	}
	file_models_model_ns_route_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_models_model_ns_access_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NSAccessLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_model_ns_access_log_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_model_ns_access_log_proto_goTypes,
		DependencyIndexes: file_models_model_ns_access_log_proto_depIdxs,
		MessageInfos:      file_models_model_ns_access_log_proto_msgTypes,
	}.Build()
	File_models_model_ns_access_log_proto = out.File
	file_models_model_ns_access_log_proto_rawDesc = nil
	file_models_model_ns_access_log_proto_goTypes = nil
	file_models_model_ns_access_log_proto_depIdxs = nil
}
