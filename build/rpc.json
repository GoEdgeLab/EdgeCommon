{
  "services": [
    {
      "name": "APIMethodStatService",
      "methods": [
        {
          "name": "findAPIMethodStatsWithDay",
          "requestMessageName": "FindAPIMethodStatsWithDayRequest",
          "responseMessageName": "FindAPIMethodStatsWithDayResponse",
          "code": "rpc findAPIMethodStatsWithDay(FindAPIMethodStatsWithDayRequest) returns (FindAPIMethodStatsWithDayResponse);",
          "doc": "查找某天的统计"
        },
        {
          "name": "countAPIMethodStatsWithDay",
          "requestMessageName": "CountAPIMethodStatsWithDayRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAPIMethodStatsWithDay(CountAPIMethodStatsWithDayRequest) returns (RPCCountResponse);",
          "doc": "检查是否有统计数据"
        }
      ],
      "filename": "api_method_stat_service.proto",
      "doc": "API方法统计服务"
    },
    {
      "name": "ACMEAuthenticationService",
      "methods": [
        {
          "name": "findACMEAuthenticationKeyWithToken",
          "requestMessageName": "FindACMEAuthenticationKeyWithTokenRequest",
          "responseMessageName": "FindACMEAuthenticationKeyWithTokenResponse",
          "code": "rpc findACMEAuthenticationKeyWithToken (FindACMEAuthenticationKeyWithTokenRequest) returns (FindACMEAuthenticationKeyWithTokenResponse);",
          "doc": "获取Key"
        }
      ],
      "filename": "service_acme_authentication.proto",
      "doc": "ACME认证相关信息"
    },
    {
      "name": "ACMEProviderService",
      "methods": [
        {
          "name": "findAllACMEProviders",
          "requestMessageName": "FindAllACMEProvidersRequest",
          "responseMessageName": "FindAllACMEProvidersResponse",
          "code": "rpc findAllACMEProviders(FindAllACMEProvidersRequest) returns (FindAllACMEProvidersResponse);",
          "doc": "查找所有的服务商"
        },
        {
          "name": "findACMEProviderWithCode",
          "requestMessageName": "FindACMEProviderWithCodeRequest",
          "responseMessageName": "FindACMEProviderWithCodeResponse",
          "code": "rpc findACMEProviderWithCode(FindACMEProviderWithCodeRequest) returns (FindACMEProviderWithCodeResponse);",
          "doc": "根据代号查找服务商"
        }
      ],
      "filename": "service_acme_provider.proto",
      "doc": "ACME服务商"
    },
    {
      "name": "ACMEProviderAccountService",
      "methods": [
        {
          "name": "createACMEProviderAccount",
          "requestMessageName": "CreateACMEProviderAccountRequest",
          "responseMessageName": "CreateACMEProviderAccountResponse",
          "code": "rpc createACMEProviderAccount(CreateACMEProviderAccountRequest) returns (CreateACMEProviderAccountResponse);",
          "doc": "创建服务商账号"
        },
        {
          "name": "findAllACMEProviderAccountsWithProviderCode",
          "requestMessageName": "FindAllACMEProviderAccountsWithProviderCodeRequest",
          "responseMessageName": "FindAllACMEProviderAccountsWithProviderCodeResponse",
          "code": "rpc findAllACMEProviderAccountsWithProviderCode(FindAllACMEProviderAccountsWithProviderCodeRequest) returns (FindAllACMEProviderAccountsWithProviderCodeResponse);",
          "doc": "使用代号查找服务商账号"
        },
        {
          "name": "updateACMEProviderAccount",
          "requestMessageName": "UpdateACMEProviderAccountRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateACMEProviderAccount(UpdateACMEProviderAccountRequest) returns (RPCSuccess);",
          "doc": "修改服务商账号"
        },
        {
          "name": "deleteACMEProviderAccount",
          "requestMessageName": "DeleteACMEProviderAccountRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteACMEProviderAccount(DeleteACMEProviderAccountRequest) returns (RPCSuccess);",
          "doc": "删除服务商账号"
        },
        {
          "name": "findEnabledACMEProviderAccount",
          "requestMessageName": "FindEnabledACMEProviderAccountRequest",
          "responseMessageName": "FindEnabledACMEProviderAccountResponse",
          "code": "rpc findEnabledACMEProviderAccount(FindEnabledACMEProviderAccountRequest) returns (FindEnabledACMEProviderAccountResponse);",
          "doc": "查找单个服务商账号"
        },
        {
          "name": "countAllEnabledACMEProviderAccounts",
          "requestMessageName": "CountAllEnabledACMEProviderAccountsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledACMEProviderAccounts(CountAllEnabledACMEProviderAccountsRequest) returns (RPCCountResponse);",
          "doc": "计算所有服务商账号数量"
        },
        {
          "name": "listEnabledACMEProviderAccounts",
          "requestMessageName": "ListEnabledACMEProviderAccountsRequest",
          "responseMessageName": "ListEnabledACMEProviderAccountsResponse",
          "code": "rpc listEnabledACMEProviderAccounts(ListEnabledACMEProviderAccountsRequest) returns (ListEnabledACMEProviderAccountsResponse);",
          "doc": "列出单页服务商账号"
        }
      ],
      "filename": "service_acme_provider_acount.proto",
      "doc": "ACME服务商账号"
    },
    {
      "name": "ACMETaskService",
      "methods": [
        {
          "name": "countAllEnabledACMETasksWithACMEUserId",
          "requestMessageName": "CountAllEnabledACMETasksWithACMEUserIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledACMETasksWithACMEUserId (CountAllEnabledACMETasksWithACMEUserIdRequest) returns (RPCCountResponse);",
          "doc": "计算某个ACME用户相关的任务数量"
        },
        {
          "name": "countEnabledACMETasksWithDNSProviderId",
          "requestMessageName": "CountEnabledACMETasksWithDNSProviderIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countEnabledACMETasksWithDNSProviderId (CountEnabledACMETasksWithDNSProviderIdRequest) returns (RPCCountResponse);",
          "doc": "计算跟某个DNS服务商相关的任务数量"
        },
        {
          "name": "countAllEnabledACMETasks",
          "requestMessageName": "CountAllEnabledACMETasksRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledACMETasks (CountAllEnabledACMETasksRequest) returns (RPCCountResponse);",
          "doc": "计算所有任务数量"
        },
        {
          "name": "listEnabledACMETasks",
          "requestMessageName": "ListEnabledACMETasksRequest",
          "responseMessageName": "ListEnabledACMETasksResponse",
          "code": "rpc listEnabledACMETasks (ListEnabledACMETasksRequest) returns (ListEnabledACMETasksResponse);",
          "doc": "列出单页任务"
        },
        {
          "name": "createACMETask",
          "requestMessageName": "CreateACMETaskRequest",
          "responseMessageName": "CreateACMETaskResponse",
          "code": "rpc createACMETask (CreateACMETaskRequest) returns (CreateACMETaskResponse);",
          "doc": "创建任务"
        },
        {
          "name": "updateACMETask",
          "requestMessageName": "UpdateACMETaskRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateACMETask (UpdateACMETaskRequest) returns (RPCSuccess);",
          "doc": "修改任务"
        },
        {
          "name": "deleteACMETask",
          "requestMessageName": "DeleteACMETaskRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteACMETask (DeleteACMETaskRequest) returns (RPCSuccess);",
          "doc": "删除任务"
        },
        {
          "name": "runACMETask",
          "requestMessageName": "RunACMETaskRequest",
          "responseMessageName": "RunACMETaskResponse",
          "code": "rpc runACMETask (RunACMETaskRequest) returns (RunACMETaskResponse);",
          "doc": "运行某个任务"
        },
        {
          "name": "findEnabledACMETask",
          "requestMessageName": "FindEnabledACMETaskRequest",
          "responseMessageName": "FindEnabledACMETaskResponse",
          "code": "rpc findEnabledACMETask (FindEnabledACMETaskRequest) returns (FindEnabledACMETaskResponse);",
          "doc": "查找单个任务信息"
        }
      ],
      "filename": "service_acme_task.proto",
      "doc": "ACME任务相关服务"
    },
    {
      "name": "ACMEUserService",
      "methods": [
        {
          "name": "createACMEUser",
          "requestMessageName": "CreateACMEUserRequest",
          "responseMessageName": "CreateACMEUserResponse",
          "code": "rpc createACMEUser (CreateACMEUserRequest) returns (CreateACMEUserResponse);",
          "doc": "创建用户"
        },
        {
          "name": "updateACMEUser",
          "requestMessageName": "UpdateACMEUserRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateACMEUser (UpdateACMEUserRequest) returns (RPCSuccess);",
          "doc": "修改用户"
        },
        {
          "name": "deleteACMEUser",
          "requestMessageName": "DeleteACMEUserRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteACMEUser (DeleteACMEUserRequest) returns (RPCSuccess);",
          "doc": "删除用户"
        },
        {
          "name": "countACMEUsers",
          "requestMessageName": "CountAcmeUsersRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countACMEUsers (CountAcmeUsersRequest) returns (RPCCountResponse);",
          "doc": "计算用户数量"
        },
        {
          "name": "listACMEUsers",
          "requestMessageName": "ListACMEUsersRequest",
          "responseMessageName": "ListACMEUsersResponse",
          "code": "rpc listACMEUsers (ListACMEUsersRequest) returns (ListACMEUsersResponse);",
          "doc": "列出单页用户"
        },
        {
          "name": "findEnabledACMEUser",
          "requestMessageName": "FindEnabledACMEUserRequest",
          "responseMessageName": "FindEnabledACMEUserResponse",
          "code": "rpc findEnabledACMEUser (FindEnabledACMEUserRequest) returns (FindEnabledACMEUserResponse);",
          "doc": "查找单个用户"
        },
        {
          "name": "findAllACMEUsers",
          "requestMessageName": "FindAllACMEUsersRequest",
          "responseMessageName": "FindAllACMEUsersResponse",
          "code": "rpc findAllACMEUsers (FindAllACMEUsersRequest) returns (FindAllACMEUsersResponse);",
          "doc": "查找所有用户"
        }
      ],
      "filename": "service_acme_user.proto",
      "doc": "ACME用户相关服务"
    },
    {
      "name": "AdminService",
      "methods": [
        {
          "name": "loginAdmin",
          "requestMessageName": "LoginAdminRequest",
          "responseMessageName": "LoginAdminResponse",
          "code": "rpc loginAdmin (LoginAdminRequest) returns (LoginAdminResponse);",
          "doc": "登录"
        },
        {
          "name": "checkAdminExists",
          "requestMessageName": "CheckAdminExistsRequest",
          "responseMessageName": "CheckAdminExistsResponse",
          "code": "rpc checkAdminExists (CheckAdminExistsRequest) returns (CheckAdminExistsResponse);",
          "doc": "检查管理员是否存在"
        },
        {
          "name": "checkAdminUsername",
          "requestMessageName": "CheckAdminUsernameRequest",
          "responseMessageName": "CheckAdminUsernameResponse",
          "code": "rpc checkAdminUsername (CheckAdminUsernameRequest) returns (CheckAdminUsernameResponse);",
          "doc": "检查用户名是否存在"
        },
        {
          "name": "findAdminFullname",
          "requestMessageName": "FindAdminFullnameRequest",
          "responseMessageName": "FindAdminFullnameResponse",
          "code": "rpc findAdminFullname (FindAdminFullnameRequest) returns (FindAdminFullnameResponse);",
          "doc": "获取管理员名称"
        },
        {
          "name": "findEnabledAdmin",
          "requestMessageName": "FindEnabledAdminRequest",
          "responseMessageName": "FindEnabledAdminResponse",
          "code": "rpc findEnabledAdmin (FindEnabledAdminRequest) returns (FindEnabledAdminResponse);",
          "doc": "获取管理员信息"
        },
        {
          "name": "createOrUpdateAdmin",
          "requestMessageName": "CreateOrUpdateAdminRequest",
          "responseMessageName": "CreateOrUpdateAdminResponse",
          "code": "rpc createOrUpdateAdmin (CreateOrUpdateAdminRequest) returns (CreateOrUpdateAdminResponse);",
          "doc": "创建或修改管理员"
        },
        {
          "name": "updateAdminInfo",
          "requestMessageName": "UpdateAdminInfoRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateAdminInfo (UpdateAdminInfoRequest) returns (RPCSuccess);",
          "doc": "修改管理员信息"
        },
        {
          "name": "updateAdminLogin",
          "requestMessageName": "UpdateAdminLoginRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateAdminLogin (UpdateAdminLoginRequest) returns (RPCSuccess);",
          "doc": "修改管理员登录信息"
        },
        {
          "name": "findAllAdminModules",
          "requestMessageName": "FindAllAdminModulesRequest",
          "responseMessageName": "FindAllAdminModulesResponse",
          "code": "rpc findAllAdminModules (FindAllAdminModulesRequest) returns (FindAllAdminModulesResponse);",
          "doc": "获取所有管理员的权限列表"
        },
        {
          "name": "createAdmin",
          "requestMessageName": "CreateAdminRequest",
          "responseMessageName": "CreateAdminResponse",
          "code": "rpc createAdmin (CreateAdminRequest) returns (CreateAdminResponse);",
          "doc": "创建管理员"
        },
        {
          "name": "updateAdmin",
          "requestMessageName": "UpdateAdminRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateAdmin (UpdateAdminRequest) returns (RPCSuccess);",
          "doc": "修改管理员"
        },
        {
          "name": "countAllEnabledAdmins",
          "requestMessageName": "CountAllEnabledAdminsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledAdmins (CountAllEnabledAdminsRequest) returns (RPCCountResponse);",
          "doc": "计算管理员数量"
        },
        {
          "name": "listEnabledAdmins",
          "requestMessageName": "ListEnabledAdminsRequest",
          "responseMessageName": "ListEnabledAdminsResponse",
          "code": "rpc listEnabledAdmins (ListEnabledAdminsRequest) returns (ListEnabledAdminsResponse);",
          "doc": "列出单页的管理员"
        },
        {
          "name": "deleteAdmin",
          "requestMessageName": "DeleteAdminRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteAdmin (DeleteAdminRequest) returns (RPCSuccess);",
          "doc": "删除管理员"
        },
        {
          "name": "checkAdminOTPWithUsername",
          "requestMessageName": "CheckAdminOTPWithUsernameRequest",
          "responseMessageName": "CheckAdminOTPWithUsernameResponse",
          "code": "rpc checkAdminOTPWithUsername (CheckAdminOTPWithUsernameRequest) returns (CheckAdminOTPWithUsernameResponse);",
          "doc": "根据用户名检查是否需要输入OTP"
        },
        {
          "name": "composeAdminDashboard",
          "requestMessageName": "ComposeAdminDashboardRequest",
          "responseMessageName": "ComposeAdminDashboardResponse",
          "code": "rpc composeAdminDashboard (ComposeAdminDashboardRequest) returns (ComposeAdminDashboardResponse);",
          "doc": "取得管理员Dashboard数据"
        },
        {
          "name": "updateAdminTheme",
          "requestMessageName": "UpdateAdminThemeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateAdminTheme (UpdateAdminThemeRequest) returns (RPCSuccess);",
          "doc": "修改管理员使用的界面风格"
        }
      ],
      "filename": "service_admin.proto",
      "doc": ""
    },
    {
      "name": "APIAccessTokenService",
      "methods": [
        {
          "name": "GetAPIAccessToken",
          "requestMessageName": "GetAPIAccessTokenRequest",
          "responseMessageName": "GetAPIAccessTokenResponse",
          "code": "rpc GetAPIAccessToken (GetAPIAccessTokenRequest) returns (GetAPIAccessTokenResponse);",
          "doc": "获取AccessToken"
        }
      ],
      "filename": "service_api_access_token.proto",
      "doc": "AccessToken相关服务"
    },
    {
      "name": "APINodeService",
      "methods": [
        {
          "name": "createAPINode",
          "requestMessageName": "CreateAPINodeRequest",
          "responseMessageName": "CreateAPINodeResponse",
          "code": "rpc createAPINode (CreateAPINodeRequest) returns (CreateAPINodeResponse);",
          "doc": "创建API节点"
        },
        {
          "name": "updateAPINode",
          "requestMessageName": "UpdateAPINodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateAPINode (UpdateAPINodeRequest) returns (RPCSuccess);",
          "doc": "修改API节点"
        },
        {
          "name": "deleteAPINode",
          "requestMessageName": "DeleteAPINodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteAPINode (DeleteAPINodeRequest) returns (RPCSuccess);",
          "doc": "删除API节点"
        },
        {
          "name": "findAllEnabledAPINodes",
          "requestMessageName": "FindAllEnabledAPINodesRequest",
          "responseMessageName": "FindAllEnabledAPINodesResponse",
          "code": "rpc findAllEnabledAPINodes (FindAllEnabledAPINodesRequest) returns (FindAllEnabledAPINodesResponse);",
          "doc": "列出所有可用API节点"
        },
        {
          "name": "countAllEnabledAPINodes",
          "requestMessageName": "CountAllEnabledAPINodesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledAPINodes (CountAllEnabledAPINodesRequest) returns (RPCCountResponse);",
          "doc": "计算API节点数量"
        },
        {
          "name": "countAllEnabledAndOnAPINodes",
          "requestMessageName": "CountAllEnabledAndOnAPINodesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledAndOnAPINodes (CountAllEnabledAndOnAPINodesRequest) returns (RPCCountResponse);",
          "doc": "计算启用的API节点数量"
        },
        {
          "name": "listEnabledAPINodes",
          "requestMessageName": "ListEnabledAPINodesRequest",
          "responseMessageName": "ListEnabledAPINodesResponse",
          "code": "rpc listEnabledAPINodes (ListEnabledAPINodesRequest) returns (ListEnabledAPINodesResponse);",
          "doc": "列出单页的API节点"
        },
        {
          "name": "findEnabledAPINode",
          "requestMessageName": "FindEnabledAPINodeRequest",
          "responseMessageName": "FindEnabledAPINodeResponse",
          "code": "rpc findEnabledAPINode (FindEnabledAPINodeRequest) returns (FindEnabledAPINodeResponse);",
          "doc": "根据ID查找节点"
        },
        {
          "name": "findCurrentAPINodeVersion",
          "requestMessageName": "FindCurrentAPINodeVersionRequest",
          "responseMessageName": "FindCurrentAPINodeVersionResponse",
          "code": "rpc findCurrentAPINodeVersion (FindCurrentAPINodeVersionRequest) returns (FindCurrentAPINodeVersionResponse);",
          "doc": "获取当前API节点的版本"
        },
        {
          "name": "findCurrentAPINode",
          "requestMessageName": "FindCurrentAPINodeRequest",
          "responseMessageName": "FindCurrentAPINodeResponse",
          "code": "rpc findCurrentAPINode(FindCurrentAPINodeRequest) returns (FindCurrentAPINodeResponse);",
          "doc": "获取当前API节点的信息"
        },
        {
          "name": "countAllEnabledAPINodesWithSSLCertId",
          "requestMessageName": "CountAllEnabledAPINodesWithSSLCertIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledAPINodesWithSSLCertId (CountAllEnabledAPINodesWithSSLCertIdRequest) returns (RPCCountResponse);",
          "doc": "计算使用某个SSL证书的API节点数量"
        },
        {
          "name": "debugAPINode",
          "requestMessageName": "DebugAPINodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc debugAPINode(DebugAPINodeRequest) returns (RPCSuccess);",
          "doc": "修改调试模式状态"
        }
      ],
      "filename": "service_api_node.proto",
      "doc": ""
    },
    {
      "name": "APITokenService",
      "methods": [
        {
          "name": "findAllEnabledAPITokens",
          "requestMessageName": "FindAllEnabledAPITokensRequest",
          "responseMessageName": "FindAllEnabledAPITokensResponse",
          "code": "rpc findAllEnabledAPITokens (FindAllEnabledAPITokensRequest) returns (FindAllEnabledAPITokensResponse);",
          "doc": "获取API令牌"
        }
      ],
      "filename": "service_api_token.proto",
      "doc": "API令牌服务"
    },
    {
      "name": "AuthorityKeyService",
      "methods": [
        {
          "name": "updateAuthorityKey",
          "requestMessageName": "UpdateAuthorityKeyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateAuthorityKey (UpdateAuthorityKeyRequest) returns (RPCSuccess);",
          "doc": "设置Key"
        },
        {
          "name": "readAuthorityKey",
          "requestMessageName": "ReadAuthorityKeyRequest",
          "responseMessageName": "ReadAuthorityKeyResponse",
          "code": "rpc readAuthorityKey (ReadAuthorityKeyRequest) returns (ReadAuthorityKeyResponse);",
          "doc": "读取Key"
        },
        {
          "name": "resetAuthorityKey",
          "requestMessageName": "ResetAuthorityKeyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc resetAuthorityKey (ResetAuthorityKeyRequest) returns (RPCSuccess);",
          "doc": "重置Key"
        },
        {
          "name": "validateAuthorityKey",
          "requestMessageName": "ValidateAuthorityKeyRequest",
          "responseMessageName": "ValidateAuthorityKeyResponse",
          "code": "rpc validateAuthorityKey(ValidateAuthorityKeyRequest) returns (ValidateAuthorityKeyResponse);",
          "doc": "校验Key"
        }
      ],
      "filename": "service_authority_key.proto",
      "doc": "版本认证"
    },
    {
      "name": "AuthorityNodeService",
      "methods": [
        {
          "name": "createAuthorityNode",
          "requestMessageName": "CreateAuthorityNodeRequest",
          "responseMessageName": "CreateAuthorityNodeResponse",
          "code": "rpc createAuthorityNode (CreateAuthorityNodeRequest) returns (CreateAuthorityNodeResponse);",
          "doc": "创建认证节点"
        },
        {
          "name": "updateAuthorityNode",
          "requestMessageName": "UpdateAuthorityNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateAuthorityNode (UpdateAuthorityNodeRequest) returns (RPCSuccess);",
          "doc": "修改认证节点"
        },
        {
          "name": "deleteAuthorityNode",
          "requestMessageName": "DeleteAuthorityNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteAuthorityNode (DeleteAuthorityNodeRequest) returns (RPCSuccess);",
          "doc": "删除认证节点"
        },
        {
          "name": "findAllEnabledAuthorityNodes",
          "requestMessageName": "FindAllEnabledAuthorityNodesRequest",
          "responseMessageName": "FindAllEnabledAuthorityNodesResponse",
          "code": "rpc findAllEnabledAuthorityNodes (FindAllEnabledAuthorityNodesRequest) returns (FindAllEnabledAuthorityNodesResponse);",
          "doc": "列出所有可用认证节点"
        },
        {
          "name": "countAllEnabledAuthorityNodes",
          "requestMessageName": "CountAllEnabledAuthorityNodesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledAuthorityNodes (CountAllEnabledAuthorityNodesRequest) returns (RPCCountResponse);",
          "doc": "计算认证节点数量"
        },
        {
          "name": "listEnabledAuthorityNodes",
          "requestMessageName": "ListEnabledAuthorityNodesRequest",
          "responseMessageName": "ListEnabledAuthorityNodesResponse",
          "code": "rpc listEnabledAuthorityNodes (ListEnabledAuthorityNodesRequest) returns (ListEnabledAuthorityNodesResponse);",
          "doc": "列出单页的认证节点"
        },
        {
          "name": "findEnabledAuthorityNode",
          "requestMessageName": "FindEnabledAuthorityNodeRequest",
          "responseMessageName": "FindEnabledAuthorityNodeResponse",
          "code": "rpc findEnabledAuthorityNode (FindEnabledAuthorityNodeRequest) returns (FindEnabledAuthorityNodeResponse);",
          "doc": "根据ID查找节点"
        },
        {
          "name": "findCurrentAuthorityNode",
          "requestMessageName": "FindCurrentAuthorityNodeRequest",
          "responseMessageName": "FindCurrentAuthorityNodeResponse",
          "code": "rpc findCurrentAuthorityNode (FindCurrentAuthorityNodeRequest) returns (FindCurrentAuthorityNodeResponse);",
          "doc": "获取当前认证节点信息"
        },
        {
          "name": "updateAuthorityNodeStatus",
          "requestMessageName": "UpdateAuthorityNodeStatusRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateAuthorityNodeStatus (UpdateAuthorityNodeStatusRequest) returns (RPCSuccess);",
          "doc": "更新节点状态"
        }
      ],
      "filename": "service_authority_node.proto",
      "doc": "认证节点管理"
    },
    {
      "name": "DBService",
      "methods": [
        {
          "name": "findAllDBTables",
          "requestMessageName": "FindAllDBTablesRequest",
          "responseMessageName": "FindAllDBTablesResponse",
          "code": "rpc findAllDBTables (FindAllDBTablesRequest) returns (FindAllDBTablesResponse);",
          "doc": "获取所有表信息"
        },
        {
          "name": "deleteDBTable",
          "requestMessageName": "DeleteDBTableRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteDBTable (DeleteDBTableRequest) returns (RPCSuccess);",
          "doc": "删除表"
        },
        {
          "name": "truncateDBTable",
          "requestMessageName": "TruncateDBTableRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc truncateDBTable (TruncateDBTableRequest) returns (RPCSuccess);",
          "doc": "清空表"
        }
      ],
      "filename": "service_db.proto",
      "doc": "数据库相关服务"
    },
    {
      "name": "DBNodeService",
      "methods": [
        {
          "name": "createDBNode",
          "requestMessageName": "CreateDBNodeRequest",
          "responseMessageName": "CreateDBNodeResponse",
          "code": "rpc createDBNode (CreateDBNodeRequest) returns (CreateDBNodeResponse);",
          "doc": "创建数据库节点"
        },
        {
          "name": "updateDBNode",
          "requestMessageName": "UpdateDBNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateDBNode (UpdateDBNodeRequest) returns (RPCSuccess);",
          "doc": "修改数据库节点"
        },
        {
          "name": "deleteDBNode",
          "requestMessageName": "DeleteDBNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteDBNode (DeleteDBNodeRequest) returns (RPCSuccess);",
          "doc": "删除节点"
        },
        {
          "name": "countAllEnabledDBNodes",
          "requestMessageName": "CountAllEnabledDBNodesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledDBNodes (CountAllEnabledDBNodesRequest) returns (RPCCountResponse);",
          "doc": "计算可用的数据库节点数量"
        },
        {
          "name": "listEnabledDBNodes",
          "requestMessageName": "ListEnabledDBNodesRequest",
          "responseMessageName": "ListEnabledDBNodesResponse",
          "code": "rpc listEnabledDBNodes (ListEnabledDBNodesRequest) returns (ListEnabledDBNodesResponse);",
          "doc": "列出单页的数据库节点"
        },
        {
          "name": "findEnabledDBNode",
          "requestMessageName": "FindEnabledDBNodeRequest",
          "responseMessageName": "FindEnabledDBNodeResponse",
          "code": "rpc findEnabledDBNode (FindEnabledDBNodeRequest) returns (FindEnabledDBNodeResponse);",
          "doc": "根据ID查找可用的数据库节点"
        },
        {
          "name": "findAllDBNodeTables",
          "requestMessageName": "FindAllDBNodeTablesRequest",
          "responseMessageName": "FindAllDBNodeTablesResponse",
          "code": "rpc findAllDBNodeTables (FindAllDBNodeTablesRequest) returns (FindAllDBNodeTablesResponse);",
          "doc": "获取所有表信息"
        },
        {
          "name": "deleteDBNodeTable",
          "requestMessageName": "DeleteDBNodeTableRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteDBNodeTable (DeleteDBNodeTableRequest) returns (RPCSuccess);",
          "doc": "删除表"
        },
        {
          "name": "truncateDBNodeTable",
          "requestMessageName": "TruncateDBNodeTableRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc truncateDBNodeTable (TruncateDBNodeTableRequest) returns (RPCSuccess);",
          "doc": "清空表"
        },
        {
          "name": "checkDBNodeStatus",
          "requestMessageName": "CheckDBNodeStatusRequest",
          "responseMessageName": "CheckDBNodeStatusResponse",
          "code": "rpc checkDBNodeStatus(CheckDBNodeStatusRequest) returns (CheckDBNodeStatusResponse);",
          "doc": "检查数据库节点状态"
        }
      ],
      "filename": "service_db_node.proto",
      "doc": ""
    },
    {
      "name": "DNSService",
      "methods": [
        {
          "name": "findAllDNSIssues",
          "requestMessageName": "FindAllDNSIssuesRequest",
          "responseMessageName": "FindAllDNSIssuesResponse",
          "code": "rpc findAllDNSIssues (FindAllDNSIssuesRequest) returns (FindAllDNSIssuesResponse);",
          "doc": "查找问题"
        }
      ],
      "filename": "service_dns.proto",
      "doc": ""
    },
    {
      "name": "DNSDomainService",
      "methods": [
        {
          "name": "createDNSDomain",
          "requestMessageName": "CreateDNSDomainRequest",
          "responseMessageName": "CreateDNSDomainResponse",
          "code": "rpc createDNSDomain (CreateDNSDomainRequest) returns (CreateDNSDomainResponse);",
          "doc": "创建域名"
        },
        {
          "name": "updateDNSDomain",
          "requestMessageName": "UpdateDNSDomainRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateDNSDomain (UpdateDNSDomainRequest) returns (RPCSuccess);",
          "doc": "修改域名"
        },
        {
          "name": "deleteDNSDomain",
          "requestMessageName": "DeleteDNSDomainRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteDNSDomain (DeleteDNSDomainRequest) returns (RPCSuccess);",
          "doc": "删除域名"
        },
        {
          "name": "recoverDNSDomain",
          "requestMessageName": "RecoverDNSDomainRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc recoverDNSDomain (RecoverDNSDomainRequest) returns (RPCSuccess);",
          "doc": "恢复删除的域名"
        },
        {
          "name": "findEnabledDNSDomain",
          "requestMessageName": "FindEnabledDNSDomainRequest",
          "responseMessageName": "FindEnabledDNSDomainResponse",
          "code": "rpc findEnabledDNSDomain (FindEnabledDNSDomainRequest) returns (FindEnabledDNSDomainResponse);",
          "doc": "查询单个域名完整信息"
        },
        {
          "name": "findEnabledBasicDNSDomain",
          "requestMessageName": "FindEnabledBasicDNSDomainRequest",
          "responseMessageName": "FindEnabledBasicDNSDomainResponse",
          "code": "rpc findEnabledBasicDNSDomain (FindEnabledBasicDNSDomainRequest) returns (FindEnabledBasicDNSDomainResponse);",
          "doc": "查询单个域名基础信息"
        },
        {
          "name": "countAllEnabledDNSDomainsWithDNSProviderId",
          "requestMessageName": "CountAllEnabledDNSDomainsWithDNSProviderIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledDNSDomainsWithDNSProviderId (CountAllEnabledDNSDomainsWithDNSProviderIdRequest) returns (RPCCountResponse);",
          "doc": "计算服务商下的域名数量"
        },
        {
          "name": "findAllEnabledDNSDomainsWithDNSProviderId",
          "requestMessageName": "FindAllEnabledDNSDomainsWithDNSProviderIdRequest",
          "responseMessageName": "FindAllEnabledDNSDomainsWithDNSProviderIdResponse",
          "code": "rpc findAllEnabledDNSDomainsWithDNSProviderId (FindAllEnabledDNSDomainsWithDNSProviderIdRequest) returns (FindAllEnabledDNSDomainsWithDNSProviderIdResponse);",
          "doc": "列出服务商下的所有域名"
        },
        {
          "name": "findAllEnabledBasicDNSDomainsWithDNSProviderId",
          "requestMessageName": "FindAllEnabledBasicDNSDomainsWithDNSProviderIdRequest",
          "responseMessageName": "FindAllEnabledBasicDNSDomainsWithDNSProviderIdResponse",
          "code": "rpc findAllEnabledBasicDNSDomainsWithDNSProviderId (FindAllEnabledBasicDNSDomainsWithDNSProviderIdRequest) returns (FindAllEnabledBasicDNSDomainsWithDNSProviderIdResponse);",
          "doc": "列出服务商下的所有域名基本信息"
        },
        {
          "name": "syncDNSDomainData",
          "requestMessageName": "SyncDNSDomainDataRequest",
          "responseMessageName": "SyncDNSDomainDataResponse",
          "code": "rpc syncDNSDomainData (SyncDNSDomainDataRequest) returns (SyncDNSDomainDataResponse);",
          "doc": "同步域名解析"
        },
        {
          "name": "findAllDNSDomainRoutes",
          "requestMessageName": "FindAllDNSDomainRoutesRequest",
          "responseMessageName": "FindAllDNSDomainRoutesResponse",
          "code": "rpc findAllDNSDomainRoutes (FindAllDNSDomainRoutesRequest) returns (FindAllDNSDomainRoutesResponse);",
          "doc": "查看支持的线路"
        },
        {
          "name": "existAvailableDomains",
          "requestMessageName": "ExistAvailableDomainsRequest",
          "responseMessageName": "ExistAvailableDomainsResponse",
          "code": "rpc existAvailableDomains (ExistAvailableDomainsRequest) returns (ExistAvailableDomainsResponse);",
          "doc": "判断是否有域名可选"
        },
        {
          "name": "existDNSDomainRecord",
          "requestMessageName": "ExistDNSDomainRecordRequest",
          "responseMessageName": "ExistDNSDomainRecordResponse",
          "code": "rpc existDNSDomainRecord (ExistDNSDomainRecordRequest) returns (ExistDNSDomainRecordResponse);",
          "doc": "检查域名是否在记录中"
        },
        {
          "name": "syncDNSDomainsFromProvider",
          "requestMessageName": "SyncDNSDomainsFromProviderRequest",
          "responseMessageName": "SyncDNSDomainsFromProviderResponse",
          "code": "rpc syncDNSDomainsFromProvider(SyncDNSDomainsFromProviderRequest) returns (SyncDNSDomainsFromProviderResponse);",
          "doc": "从服务商同步域名"
        }
      ],
      "filename": "service_dns_domain.proto",
      "doc": "DNS域名相关"
    },
    {
      "name": "DNSProviderService",
      "methods": [
        {
          "name": "createDNSProvider",
          "requestMessageName": "CreateDNSProviderRequest",
          "responseMessageName": "CreateDNSProviderResponse",
          "code": "rpc createDNSProvider (CreateDNSProviderRequest) returns (CreateDNSProviderResponse);",
          "doc": "创建服务商"
        },
        {
          "name": "updateDNSProvider",
          "requestMessageName": "UpdateDNSProviderRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateDNSProvider (UpdateDNSProviderRequest) returns (RPCSuccess);",
          "doc": "修改服务商"
        },
        {
          "name": "countAllEnabledDNSProviders",
          "requestMessageName": "CountAllEnabledDNSProvidersRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledDNSProviders (CountAllEnabledDNSProvidersRequest) returns (RPCCountResponse);",
          "doc": "计算服务商数量"
        },
        {
          "name": "listEnabledDNSProviders",
          "requestMessageName": "ListEnabledDNSProvidersRequest",
          "responseMessageName": "ListEnabledDNSProvidersResponse",
          "code": "rpc listEnabledDNSProviders (ListEnabledDNSProvidersRequest) returns (ListEnabledDNSProvidersResponse);",
          "doc": "列出单页服务商信息"
        },
        {
          "name": "findAllEnabledDNSProviders",
          "requestMessageName": "FindAllEnabledDNSProvidersRequest",
          "responseMessageName": "FindAllEnabledDNSProvidersResponse",
          "code": "rpc findAllEnabledDNSProviders (FindAllEnabledDNSProvidersRequest) returns (FindAllEnabledDNSProvidersResponse);",
          "doc": "查找所有的DNS服务商"
        },
        {
          "name": "deleteDNSProvider",
          "requestMessageName": "DeleteDNSProviderRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteDNSProvider (DeleteDNSProviderRequest) returns (RPCSuccess);",
          "doc": "删除服务商"
        },
        {
          "name": "findEnabledDNSProvider",
          "requestMessageName": "FindEnabledDNSProviderRequest",
          "responseMessageName": "FindEnabledDNSProviderResponse",
          "code": "rpc findEnabledDNSProvider (FindEnabledDNSProviderRequest) returns (FindEnabledDNSProviderResponse);",
          "doc": "查找单个服务商"
        },
        {
          "name": "findAllDNSProviderTypes",
          "requestMessageName": "FindAllDNSProviderTypesRequest",
          "responseMessageName": "FindAllDNSProviderTypesResponse",
          "code": "rpc findAllDNSProviderTypes (FindAllDNSProviderTypesRequest) returns (FindAllDNSProviderTypesResponse);",
          "doc": "取得所有服务商类型"
        },
        {
          "name": "findAllEnabledDNSProvidersWithType",
          "requestMessageName": "FindAllEnabledDNSProvidersWithTypeRequest",
          "responseMessageName": "FindAllEnabledDNSProvidersWithTypeResponse",
          "code": "rpc findAllEnabledDNSProvidersWithType (FindAllEnabledDNSProvidersWithTypeRequest) returns (FindAllEnabledDNSProvidersWithTypeResponse);",
          "doc": "取得某个类型的所有服务商"
        }
      ],
      "filename": "service_dns_provider.proto",
      "doc": "DNS服务商相关服务"
    },
    {
      "name": "DNSTaskService",
      "methods": [
        {
          "name": "existsDNSTasks",
          "requestMessageName": "ExistsDNSTasksRequest",
          "responseMessageName": "ExistsDNSTasksResponse",
          "code": "rpc existsDNSTasks (ExistsDNSTasksRequest) returns (ExistsDNSTasksResponse);",
          "doc": "检查是否有正在执行的任务"
        },
        {
          "name": "findAllDoingDNSTasks",
          "requestMessageName": "FindAllDoingDNSTasksRequest",
          "responseMessageName": "FindAllDoingDNSTasksResponse",
          "code": "rpc findAllDoingDNSTasks (FindAllDoingDNSTasksRequest) returns (FindAllDoingDNSTasksResponse);",
          "doc": "查找正在执行的所有任务"
        },
        {
          "name": "deleteDNSTask",
          "requestMessageName": "DeleteDNSTaskRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteDNSTask (DeleteDNSTaskRequest) returns (RPCSuccess);",
          "doc": "删除任务"
        }
      ],
      "filename": "service_dns_task.proto",
      "doc": "DNS同步相关任务"
    },
    {
      "name": "FileService",
      "methods": [
        {
          "name": "findEnabledFile",
          "requestMessageName": "FindEnabledFileRequest",
          "responseMessageName": "FindEnabledFileResponse",
          "code": "rpc findEnabledFile (FindEnabledFileRequest) returns (FindEnabledFileResponse);",
          "doc": "查找文件"
        },
        {
          "name": "createFile",
          "requestMessageName": "CreateFileRequest",
          "responseMessageName": "CreateFileResponse",
          "code": "rpc createFile (CreateFileRequest) returns (CreateFileResponse);",
          "doc": "创建文件"
        },
        {
          "name": "updateFileFinished",
          "requestMessageName": "UpdateFileFinishedRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateFileFinished (UpdateFileFinishedRequest) returns (RPCSuccess);",
          "doc": "将文件置为已完成"
        }
      ],
      "filename": "service_file.proto",
      "doc": "文件相关服务"
    },
    {
      "name": "FileChunkService",
      "methods": [
        {
          "name": "createFileChunk",
          "requestMessageName": "CreateFileChunkRequest",
          "responseMessageName": "CreateFileChunkResponse",
          "code": "rpc createFileChunk (CreateFileChunkRequest) returns (CreateFileChunkResponse);",
          "doc": "创建文件片段"
        },
        {
          "name": "findAllFileChunkIds",
          "requestMessageName": "FindAllFileChunkIdsRequest",
          "responseMessageName": "FindAllFileChunkIdsResponse",
          "code": "rpc findAllFileChunkIds (FindAllFileChunkIdsRequest) returns (FindAllFileChunkIdsResponse);",
          "doc": "获取的一个文件的所有片段IDs"
        },
        {
          "name": "downloadFileChunk",
          "requestMessageName": "DownloadFileChunkRequest",
          "responseMessageName": "DownloadFileChunkResponse",
          "code": "rpc downloadFileChunk (DownloadFileChunkRequest) returns (DownloadFileChunkResponse);",
          "doc": "下载文件片段"
        }
      ],
      "filename": "service_file_chunk.proto",
      "doc": "文件片段相关服务"
    },
    {
      "name": "FirewallService",
      "methods": [
        {
          "name": "composeFirewallGlobalBoard",
          "requestMessageName": "ComposeFirewallGlobalBoardRequest",
          "responseMessageName": "ComposeFirewallGlobalBoardResponse",
          "code": "rpc composeFirewallGlobalBoard (ComposeFirewallGlobalBoardRequest) returns (ComposeFirewallGlobalBoardResponse);",
          "doc": "组合看板数据"
        },
        {
          "name": "notifyHTTPFirewallEvent",
          "requestMessageName": "NotifyHTTPFirewallEventRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc notifyHTTPFirewallEvent (NotifyHTTPFirewallEventRequest) returns (RPCSuccess);",
          "doc": "发送告警(notify)消息"
        },
        {
          "name": "countFirewallDailyBlocks",
          "requestMessageName": "CountFirewallDailyBlocksRequest",
          "responseMessageName": "CountFirewallDailyBlocksResponse",
          "code": "rpc countFirewallDailyBlocks(CountFirewallDailyBlocksRequest) returns (CountFirewallDailyBlocksResponse);",
          "doc": "读取当前Block动作次数"
        }
      ],
      "filename": "service_firewall.proto",
      "doc": "防火墙全局服务"
    },
    {
      "name": "HTTPAccessLogService",
      "methods": [
        {
          "name": "createHTTPAccessLogs",
          "requestMessageName": "CreateHTTPAccessLogsRequest",
          "responseMessageName": "CreateHTTPAccessLogsResponse",
          "code": "rpc createHTTPAccessLogs (CreateHTTPAccessLogsRequest) returns (CreateHTTPAccessLogsResponse);",
          "doc": "创建访问日志"
        },
        {
          "name": "listHTTPAccessLogs",
          "requestMessageName": "ListHTTPAccessLogsRequest",
          "responseMessageName": "ListHTTPAccessLogsResponse",
          "code": "rpc listHTTPAccessLogs (ListHTTPAccessLogsRequest) returns (ListHTTPAccessLogsResponse);",
          "doc": "列出单页访问日志"
        },
        {
          "name": "findHTTPAccessLog",
          "requestMessageName": "FindHTTPAccessLogRequest",
          "responseMessageName": "FindHTTPAccessLogResponse",
          "code": "rpc findHTTPAccessLog (FindHTTPAccessLogRequest) returns (FindHTTPAccessLogResponse);",
          "doc": "查找单个日志"
        },
        {
          "name": "findHTTPAccessLogPartitions",
          "requestMessageName": "FindHTTPAccessLogPartitionsRequest",
          "responseMessageName": "FindHTTPAccessLogPartitionsResponse",
          "code": "rpc findHTTPAccessLogPartitions(FindHTTPAccessLogPartitionsRequest) returns (FindHTTPAccessLogPartitionsResponse);",
          "doc": "查找日志分区"
        }
      ],
      "filename": "service_http_access_log.proto",
      "doc": "访问日志相关服务"
    },
    {
      "name": "HTTPAccessLogPolicyService",
      "methods": [
        {
          "name": "countAllEnabledHTTPAccessLogPolicies",
          "requestMessageName": "CountAllEnabledHTTPAccessLogPoliciesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledHTTPAccessLogPolicies (CountAllEnabledHTTPAccessLogPoliciesRequest) returns (RPCCountResponse);",
          "doc": "计算访问日志策略数量"
        },
        {
          "name": "listEnabledHTTPAccessLogPolicies",
          "requestMessageName": "ListEnabledHTTPAccessLogPoliciesRequest",
          "responseMessageName": "ListEnabledHTTPAccessLogPoliciesResponse",
          "code": "rpc listEnabledHTTPAccessLogPolicies (ListEnabledHTTPAccessLogPoliciesRequest) returns (ListEnabledHTTPAccessLogPoliciesResponse);",
          "doc": "列出单页访问日志策略"
        },
        {
          "name": "createHTTPAccessLogPolicy",
          "requestMessageName": "CreateHTTPAccessLogPolicyRequest",
          "responseMessageName": "CreateHTTPAccessLogPolicyResponse",
          "code": "rpc createHTTPAccessLogPolicy (CreateHTTPAccessLogPolicyRequest) returns (CreateHTTPAccessLogPolicyResponse);",
          "doc": "创建访问日志策略"
        },
        {
          "name": "updateHTTPAccessLogPolicy",
          "requestMessageName": "UpdateHTTPAccessLogPolicyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPAccessLogPolicy (UpdateHTTPAccessLogPolicyRequest) returns (RPCSuccess);",
          "doc": "修改访问日志策略"
        },
        {
          "name": "findEnabledHTTPAccessLogPolicy",
          "requestMessageName": "FindEnabledHTTPAccessLogPolicyRequest",
          "responseMessageName": "FindEnabledHTTPAccessLogPolicyResponse",
          "code": "rpc findEnabledHTTPAccessLogPolicy (FindEnabledHTTPAccessLogPolicyRequest) returns (FindEnabledHTTPAccessLogPolicyResponse);",
          "doc": "查找单个访问日志策略"
        },
        {
          "name": "deleteHTTPAccessLogPolicy",
          "requestMessageName": "DeleteHTTPAccessLogPolicyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteHTTPAccessLogPolicy (DeleteHTTPAccessLogPolicyRequest) returns (RPCSuccess);",
          "doc": "删除访问日志策略"
        },
        {
          "name": "writeHTTPAccessLogPolicy",
          "requestMessageName": "WriteHTTPAccessLogPolicyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc writeHTTPAccessLogPolicy (WriteHTTPAccessLogPolicyRequest) returns (RPCSuccess);",
          "doc": "测试写入某个访问日志策略"
        }
      ],
      "filename": "service_http_access_log_policy.proto",
      "doc": ""
    },
    {
      "name": "HTTPAuthPolicyService",
      "methods": [
        {
          "name": "createHTTPAuthPolicy",
          "requestMessageName": "CreateHTTPAuthPolicyRequest",
          "responseMessageName": "CreateHTTPAuthPolicyResponse",
          "code": "rpc createHTTPAuthPolicy (CreateHTTPAuthPolicyRequest) returns (CreateHTTPAuthPolicyResponse);",
          "doc": "创建策略"
        },
        {
          "name": "updateHTTPAuthPolicy",
          "requestMessageName": "UpdateHTTPAuthPolicyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPAuthPolicy (UpdateHTTPAuthPolicyRequest) returns (RPCSuccess);",
          "doc": "修改策略"
        },
        {
          "name": "findEnabledHTTPAuthPolicy",
          "requestMessageName": "FindEnabledHTTPAuthPolicyRequest",
          "responseMessageName": "FindEnabledHTTPAuthPolicyResponse",
          "code": "rpc findEnabledHTTPAuthPolicy (FindEnabledHTTPAuthPolicyRequest) returns (FindEnabledHTTPAuthPolicyResponse);",
          "doc": "查找策略信息"
        }
      ],
      "filename": "service_http_auth_policy.proto",
      "doc": "服务认证策略服务"
    },
    {
      "name": "HTTPCachePolicyService",
      "methods": [
        {
          "name": "findAllEnabledHTTPCachePolicies",
          "requestMessageName": "FindAllEnabledHTTPCachePoliciesRequest",
          "responseMessageName": "FindAllEnabledHTTPCachePoliciesResponse",
          "code": "rpc findAllEnabledHTTPCachePolicies (FindAllEnabledHTTPCachePoliciesRequest) returns (FindAllEnabledHTTPCachePoliciesResponse);",
          "doc": "获取所有可用策略"
        },
        {
          "name": "createHTTPCachePolicy",
          "requestMessageName": "CreateHTTPCachePolicyRequest",
          "responseMessageName": "CreateHTTPCachePolicyResponse",
          "code": "rpc createHTTPCachePolicy (CreateHTTPCachePolicyRequest) returns (CreateHTTPCachePolicyResponse);",
          "doc": "创建缓存策略"
        },
        {
          "name": "updateHTTPCachePolicy",
          "requestMessageName": "UpdateHTTPCachePolicyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPCachePolicy (UpdateHTTPCachePolicyRequest) returns (RPCSuccess);",
          "doc": "修改缓存策略"
        },
        {
          "name": "deleteHTTPCachePolicy",
          "requestMessageName": "DeleteHTTPCachePolicyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteHTTPCachePolicy (DeleteHTTPCachePolicyRequest) returns (RPCSuccess);",
          "doc": "删除缓存策略"
        },
        {
          "name": "countAllEnabledHTTPCachePolicies",
          "requestMessageName": "CountAllEnabledHTTPCachePoliciesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledHTTPCachePolicies (CountAllEnabledHTTPCachePoliciesRequest) returns (RPCCountResponse);",
          "doc": "计算缓存策略数量"
        },
        {
          "name": "listEnabledHTTPCachePolicies",
          "requestMessageName": "ListEnabledHTTPCachePoliciesRequest",
          "responseMessageName": "ListEnabledHTTPCachePoliciesResponse",
          "code": "rpc listEnabledHTTPCachePolicies (ListEnabledHTTPCachePoliciesRequest) returns (ListEnabledHTTPCachePoliciesResponse);",
          "doc": "列出单页的缓存策略"
        },
        {
          "name": "findEnabledHTTPCachePolicyConfig",
          "requestMessageName": "FindEnabledHTTPCachePolicyConfigRequest",
          "responseMessageName": "FindEnabledHTTPCachePolicyConfigResponse",
          "code": "rpc findEnabledHTTPCachePolicyConfig (FindEnabledHTTPCachePolicyConfigRequest) returns (FindEnabledHTTPCachePolicyConfigResponse);",
          "doc": "查找单个缓存策略配置"
        },
        {
          "name": "findEnabledHTTPCachePolicy",
          "requestMessageName": "FindEnabledHTTPCachePolicyRequest",
          "responseMessageName": "FindEnabledHTTPCachePolicyResponse",
          "code": "rpc findEnabledHTTPCachePolicy (FindEnabledHTTPCachePolicyRequest) returns (FindEnabledHTTPCachePolicyResponse);",
          "doc": "查找单个缓存策略信息"
        },
        {
          "name": "updateHTTPCachePolicyRefs",
          "requestMessageName": "UpdateHTTPCachePolicyRefsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPCachePolicyRefs (UpdateHTTPCachePolicyRefsRequest) returns (RPCSuccess);",
          "doc": "设置缓存策略的默认条件"
        }
      ],
      "filename": "service_http_cache_policy.proto",
      "doc": ""
    },
    {
      "name": "HTTPCacheTaskService",
      "methods": [
        {
          "name": "createHTTPCacheTask",
          "requestMessageName": "CreateHTTPCacheTaskRequest",
          "responseMessageName": "CreateHTTPCacheTaskResponse",
          "code": "rpc createHTTPCacheTask(CreateHTTPCacheTaskRequest) returns (CreateHTTPCacheTaskResponse);",
          "doc": "创建任务"
        },
        {
          "name": "countHTTPCacheTasks",
          "requestMessageName": "CountHTTPCacheTasksRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countHTTPCacheTasks(CountHTTPCacheTasksRequest) returns (RPCCountResponse);",
          "doc": "计算任务总数量"
        },
        {
          "name": "countDoingHTTPCacheTasks",
          "requestMessageName": "CountDoingHTTPCacheTasksRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countDoingHTTPCacheTasks(CountDoingHTTPCacheTasksRequest) returns (RPCCountResponse);",
          "doc": "计算正在执行的任务数量"
        },
        {
          "name": "listHTTPCacheTasks",
          "requestMessageName": "ListHTTPCacheTasksRequest",
          "responseMessageName": "ListHTTPCacheTasksResponse",
          "code": "rpc listHTTPCacheTasks(ListHTTPCacheTasksRequest) returns (ListHTTPCacheTasksResponse);",
          "doc": "列出单页任务"
        },
        {
          "name": "findEnabledHTTPCacheTask",
          "requestMessageName": "FindEnabledHTTPCacheTaskRequest",
          "responseMessageName": "FindEnabledHTTPCacheTaskResponse",
          "code": "rpc findEnabledHTTPCacheTask(FindEnabledHTTPCacheTaskRequest) returns (FindEnabledHTTPCacheTaskResponse);",
          "doc": "查找单个任务"
        },
        {
          "name": "deleteHTTPCacheTask",
          "requestMessageName": "DeleteHTTPCacheTaskRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteHTTPCacheTask(DeleteHTTPCacheTaskRequest) returns (RPCSuccess);",
          "doc": "删除任务"
        },
        {
          "name": "resetHTTPCacheTask",
          "requestMessageName": "ResetHTTPCacheTaskRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc resetHTTPCacheTask(ResetHTTPCacheTaskRequest) returns (RPCSuccess);",
          "doc": "重置任务状态"
        }
      ],
      "filename": "service_http_cache_task.proto",
      "doc": "缓存任务管理"
    },
    {
      "name": "HTTPCacheTaskKeyService",
      "methods": [
        {
          "name": "validateHTTPCacheTaskKeys",
          "requestMessageName": "ValidateHTTPCacheTaskKeysRequest",
          "responseMessageName": "ValidateHTTPCacheTaskKeysResponse",
          "code": "rpc validateHTTPCacheTaskKeys(ValidateHTTPCacheTaskKeysRequest) returns (ValidateHTTPCacheTaskKeysResponse);",
          "doc": "校验缓存Key"
        },
        {
          "name": "findDoingHTTPCacheTaskKeys",
          "requestMessageName": "FindDoingHTTPCacheTaskKeysRequest",
          "responseMessageName": "FindDoingHTTPCacheTaskKeysResponse",
          "code": "rpc findDoingHTTPCacheTaskKeys(FindDoingHTTPCacheTaskKeysRequest) returns (FindDoingHTTPCacheTaskKeysResponse);",
          "doc": "查找需要执行的Key"
        },
        {
          "name": "updateHTTPCacheTaskKeysStatus",
          "requestMessageName": "UpdateHTTPCacheTaskKeysStatusRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPCacheTaskKeysStatus(UpdateHTTPCacheTaskKeysStatusRequest) returns (RPCSuccess);",
          "doc": "更新一组Key状态"
        }
      ],
      "filename": "service_http_cache_task_key.proto",
      "doc": "缓存任务Key管理"
    },
    {
      "name": "HTTPFastcgiService",
      "methods": [
        {
          "name": "createHTTPFastcgi",
          "requestMessageName": "CreateHTTPFastcgiRequest",
          "responseMessageName": "CreateHTTPFastcgiResponse",
          "code": "rpc createHTTPFastcgi (CreateHTTPFastcgiRequest) returns (CreateHTTPFastcgiResponse);",
          "doc": "创建Fastcgi"
        },
        {
          "name": "updateHTTPFastcgi",
          "requestMessageName": "UpdateHTTPFastcgiRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPFastcgi (UpdateHTTPFastcgiRequest) returns (RPCSuccess);",
          "doc": "修改Fastcgi"
        },
        {
          "name": "findEnabledHTTPFastcgi",
          "requestMessageName": "FindEnabledHTTPFastcgiRequest",
          "responseMessageName": "FindEnabledHTTPFastcgiResponse",
          "code": "rpc findEnabledHTTPFastcgi (FindEnabledHTTPFastcgiRequest) returns (FindEnabledHTTPFastcgiResponse);",
          "doc": "获取Fastcgi详情"
        },
        {
          "name": "findEnabledHTTPFastcgiConfig",
          "requestMessageName": "FindEnabledHTTPFastcgiConfigRequest",
          "responseMessageName": "FindEnabledHTTPFastcgiConfigResponse",
          "code": "rpc findEnabledHTTPFastcgiConfig (FindEnabledHTTPFastcgiConfigRequest) returns (FindEnabledHTTPFastcgiConfigResponse);",
          "doc": "获取Fastcgi配置"
        }
      ],
      "filename": "service_http_fastcgi.proto",
      "doc": "Fastcgi服务"
    },
    {
      "name": "HTTPFirewallPolicyService",
      "methods": [
        {
          "name": "findAllEnabledHTTPFirewallPolicies",
          "requestMessageName": "FindAllEnabledHTTPFirewallPoliciesRequest",
          "responseMessageName": "FindAllEnabledHTTPFirewallPoliciesResponse",
          "code": "rpc findAllEnabledHTTPFirewallPolicies (FindAllEnabledHTTPFirewallPoliciesRequest) returns (FindAllEnabledHTTPFirewallPoliciesResponse);",
          "doc": "获取所有可用策略"
        },
        {
          "name": "createHTTPFirewallPolicy",
          "requestMessageName": "CreateHTTPFirewallPolicyRequest",
          "responseMessageName": "CreateHTTPFirewallPolicyResponse",
          "code": "rpc createHTTPFirewallPolicy (CreateHTTPFirewallPolicyRequest) returns (CreateHTTPFirewallPolicyResponse);",
          "doc": "创建防火墙策略"
        },
        {
          "name": "createEmptyHTTPFirewallPolicy",
          "requestMessageName": "CreateEmptyHTTPFirewallPolicyRequest",
          "responseMessageName": "CreateEmptyHTTPFirewallPolicyResponse",
          "code": "rpc createEmptyHTTPFirewallPolicy (CreateEmptyHTTPFirewallPolicyRequest) returns (CreateEmptyHTTPFirewallPolicyResponse);",
          "doc": "创建空防火墙策略"
        },
        {
          "name": "updateHTTPFirewallPolicy",
          "requestMessageName": "UpdateHTTPFirewallPolicyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPFirewallPolicy (UpdateHTTPFirewallPolicyRequest) returns (RPCSuccess);",
          "doc": "修改防火墙策略"
        },
        {
          "name": "updateHTTPFirewallPolicyGroups",
          "requestMessageName": "UpdateHTTPFirewallPolicyGroupsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPFirewallPolicyGroups (UpdateHTTPFirewallPolicyGroupsRequest) returns (RPCSuccess);",
          "doc": "修改分组信息"
        },
        {
          "name": "updateHTTPFirewallInboundConfig",
          "requestMessageName": "UpdateHTTPFirewallInboundConfigRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPFirewallInboundConfig (UpdateHTTPFirewallInboundConfigRequest) returns (RPCSuccess);",
          "doc": "修改inbound信息"
        },
        {
          "name": "countAllEnabledHTTPFirewallPolicies",
          "requestMessageName": "CountAllEnabledHTTPFirewallPoliciesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledHTTPFirewallPolicies (CountAllEnabledHTTPFirewallPoliciesRequest) returns (RPCCountResponse);",
          "doc": "计算可用的防火墙策略数量"
        },
        {
          "name": "listEnabledHTTPFirewallPolicies",
          "requestMessageName": "ListEnabledHTTPFirewallPoliciesRequest",
          "responseMessageName": "ListEnabledHTTPFirewallPoliciesResponse",
          "code": "rpc listEnabledHTTPFirewallPolicies (ListEnabledHTTPFirewallPoliciesRequest) returns (ListEnabledHTTPFirewallPoliciesResponse);",
          "doc": "列出单页的防火墙策略"
        },
        {
          "name": "deleteHTTPFirewallPolicy",
          "requestMessageName": "DeleteHTTPFirewallPolicyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteHTTPFirewallPolicy (DeleteHTTPFirewallPolicyRequest) returns (RPCSuccess);",
          "doc": "删除某个防火墙策略"
        },
        {
          "name": "findEnabledHTTPFirewallPolicyConfig",
          "requestMessageName": "FindEnabledHTTPFirewallPolicyConfigRequest",
          "responseMessageName": "FindEnabledHTTPFirewallPolicyConfigResponse",
          "code": "rpc findEnabledHTTPFirewallPolicyConfig (FindEnabledHTTPFirewallPolicyConfigRequest) returns (FindEnabledHTTPFirewallPolicyConfigResponse);",
          "doc": "查找单个防火墙配置"
        },
        {
          "name": "findEnabledHTTPFirewallPolicy",
          "requestMessageName": "FindEnabledHTTPFirewallPolicyRequest",
          "responseMessageName": "FindEnabledHTTPFirewallPolicyResponse",
          "code": "rpc findEnabledHTTPFirewallPolicy (FindEnabledHTTPFirewallPolicyRequest) returns (FindEnabledHTTPFirewallPolicyResponse);",
          "doc": "获取防火墙的基本信息"
        },
        {
          "name": "importHTTPFirewallPolicy",
          "requestMessageName": "ImportHTTPFirewallPolicyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc importHTTPFirewallPolicy (ImportHTTPFirewallPolicyRequest) returns (RPCSuccess);",
          "doc": "导入策略数据"
        },
        {
          "name": "checkHTTPFirewallPolicyIPStatus",
          "requestMessageName": "CheckHTTPFirewallPolicyIPStatusRequest",
          "responseMessageName": "CheckHTTPFirewallPolicyIPStatusResponse",
          "code": "rpc checkHTTPFirewallPolicyIPStatus (CheckHTTPFirewallPolicyIPStatusRequest) returns (CheckHTTPFirewallPolicyIPStatusResponse);",
          "doc": "检查IP状态"
        }
      ],
      "filename": "service_http_firewall_policy.proto",
      "doc": ""
    },
    {
      "name": "HTTPFirewallRuleGroupService",
      "methods": [
        {
          "name": "updateHTTPFirewallRuleGroupIsOn",
          "requestMessageName": "UpdateHTTPFirewallRuleGroupIsOnRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPFirewallRuleGroupIsOn (UpdateHTTPFirewallRuleGroupIsOnRequest) returns (RPCSuccess);",
          "doc": "设置是否启用分组"
        },
        {
          "name": "createHTTPFirewallRuleGroup",
          "requestMessageName": "CreateHTTPFirewallRuleGroupRequest",
          "responseMessageName": "CreateHTTPFirewallRuleGroupResponse",
          "code": "rpc createHTTPFirewallRuleGroup (CreateHTTPFirewallRuleGroupRequest) returns (CreateHTTPFirewallRuleGroupResponse);",
          "doc": "创建分组"
        },
        {
          "name": "updateHTTPFirewallRuleGroup",
          "requestMessageName": "UpdateHTTPFirewallRuleGroupRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPFirewallRuleGroup (UpdateHTTPFirewallRuleGroupRequest) returns (RPCSuccess);",
          "doc": "修改分组"
        },
        {
          "name": "findEnabledHTTPFirewallRuleGroupConfig",
          "requestMessageName": "FindEnabledHTTPFirewallRuleGroupConfigRequest",
          "responseMessageName": "FindEnabledHTTPFirewallRuleGroupConfigResponse",
          "code": "rpc findEnabledHTTPFirewallRuleGroupConfig (FindEnabledHTTPFirewallRuleGroupConfigRequest) returns (FindEnabledHTTPFirewallRuleGroupConfigResponse);",
          "doc": "获取分组配置"
        },
        {
          "name": "findEnabledHTTPFirewallRuleGroup",
          "requestMessageName": "FindEnabledHTTPFirewallRuleGroupRequest",
          "responseMessageName": "FindEnabledHTTPFirewallRuleGroupResponse",
          "code": "rpc findEnabledHTTPFirewallRuleGroup (FindEnabledHTTPFirewallRuleGroupRequest) returns (FindEnabledHTTPFirewallRuleGroupResponse);",
          "doc": "获取分组信息"
        },
        {
          "name": "updateHTTPFirewallRuleGroupSets",
          "requestMessageName": "UpdateHTTPFirewallRuleGroupSetsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPFirewallRuleGroupSets (UpdateHTTPFirewallRuleGroupSetsRequest) returns (RPCSuccess);",
          "doc": "修改分组的规则集"
        },
        {
          "name": "addHTTPFirewallRuleGroupSet",
          "requestMessageName": "AddHTTPFirewallRuleGroupSetRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc addHTTPFirewallRuleGroupSet(AddHTTPFirewallRuleGroupSetRequest) returns (RPCSuccess);",
          "doc": "添加规则集"
        }
      ],
      "filename": "service_http_firewall_rule_group.proto",
      "doc": ""
    },
    {
      "name": "HTTPFirewallRuleSetService",
      "methods": [
        {
          "name": "createOrUpdateHTTPFirewallRuleSetFromConfig",
          "requestMessageName": "CreateOrUpdateHTTPFirewallRuleSetFromConfigRequest",
          "responseMessageName": "CreateOrUpdateHTTPFirewallRuleSetFromConfigResponse",
          "code": "rpc createOrUpdateHTTPFirewallRuleSetFromConfig (CreateOrUpdateHTTPFirewallRuleSetFromConfigRequest) returns (CreateOrUpdateHTTPFirewallRuleSetFromConfigResponse);",
          "doc": "根据配置创建或修改规则集"
        },
        {
          "name": "updateHTTPFirewallRuleSetIsOn",
          "requestMessageName": "UpdateHTTPFirewallRuleSetIsOnRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPFirewallRuleSetIsOn (UpdateHTTPFirewallRuleSetIsOnRequest) returns (RPCSuccess);",
          "doc": "设置开启状态"
        },
        {
          "name": "findEnabledHTTPFirewallRuleSetConfig",
          "requestMessageName": "FindEnabledHTTPFirewallRuleSetConfigRequest",
          "responseMessageName": "FindEnabledHTTPFirewallRuleSetConfigResponse",
          "code": "rpc findEnabledHTTPFirewallRuleSetConfig (FindEnabledHTTPFirewallRuleSetConfigRequest) returns (FindEnabledHTTPFirewallRuleSetConfigResponse);",
          "doc": "查找规则集配置"
        },
        {
          "name": "findEnabledHTTPFirewallRuleSet",
          "requestMessageName": "FindEnabledHTTPFirewallRuleSetRequest",
          "responseMessageName": "FindEnabledHTTPFirewallRuleSetResponse",
          "code": "rpc findEnabledHTTPFirewallRuleSet (FindEnabledHTTPFirewallRuleSetRequest) returns (FindEnabledHTTPFirewallRuleSetResponse);",
          "doc": "查找规则集信息"
        }
      ],
      "filename": "service_http_firewall_rule_set.proto",
      "doc": ""
    },
    {
      "name": "HTTPGzipService",
      "methods": [
        {
          "name": "createHTTPGzip",
          "requestMessageName": "CreateHTTPGzipRequest",
          "responseMessageName": "CreateHTTPGzipResponse",
          "code": "rpc createHTTPGzip (CreateHTTPGzipRequest) returns (CreateHTTPGzipResponse);",
          "doc": "创建Gzip配置"
        },
        {
          "name": "findEnabledHTTPGzipConfig",
          "requestMessageName": "FindEnabledGzipConfigRequest",
          "responseMessageName": "FindEnabledGzipConfigResponse",
          "code": "rpc findEnabledHTTPGzipConfig (FindEnabledGzipConfigRequest) returns (FindEnabledGzipConfigResponse);",
          "doc": "查找Gzip配置"
        },
        {
          "name": "updateHTTPGzip",
          "requestMessageName": "UpdateHTTPGzipRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPGzip (UpdateHTTPGzipRequest) returns (RPCSuccess);",
          "doc": "修改Gzip配置"
        }
      ],
      "filename": "service_http_gzip.proto",
      "doc": ""
    },
    {
      "name": "HTTPHeaderService",
      "methods": [
        {
          "name": "createHTTPHeader",
          "requestMessageName": "CreateHTTPHeaderRequest",
          "responseMessageName": "CreateHTTPHeaderResponse",
          "code": "rpc createHTTPHeader (CreateHTTPHeaderRequest) returns (CreateHTTPHeaderResponse);",
          "doc": "创建Header"
        },
        {
          "name": "updateHTTPHeader",
          "requestMessageName": "UpdateHTTPHeaderRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPHeader (UpdateHTTPHeaderRequest) returns (RPCSuccess);",
          "doc": "修改Header"
        },
        {
          "name": "findEnabledHTTPHeaderConfig",
          "requestMessageName": "FindEnabledHTTPHeaderConfigRequest",
          "responseMessageName": "FindEnabledHTTPHeaderConfigResponse",
          "code": "rpc findEnabledHTTPHeaderConfig (FindEnabledHTTPHeaderConfigRequest) returns (FindEnabledHTTPHeaderConfigResponse);",
          "doc": "查找配置"
        }
      ],
      "filename": "service_http_header.proto",
      "doc": ""
    },
    {
      "name": "HTTPHeaderPolicyService",
      "methods": [
        {
          "name": "findEnabledHTTPHeaderPolicyConfig",
          "requestMessageName": "FindEnabledHTTPHeaderPolicyConfigRequest",
          "responseMessageName": "FindEnabledHTTPHeaderPolicyConfigResponse",
          "code": "rpc findEnabledHTTPHeaderPolicyConfig (FindEnabledHTTPHeaderPolicyConfigRequest) returns (FindEnabledHTTPHeaderPolicyConfigResponse);",
          "doc": "查找策略配置"
        },
        {
          "name": "createHTTPHeaderPolicy",
          "requestMessageName": "CreateHTTPHeaderPolicyRequest",
          "responseMessageName": "CreateHTTPHeaderPolicyResponse",
          "code": "rpc createHTTPHeaderPolicy (CreateHTTPHeaderPolicyRequest) returns (CreateHTTPHeaderPolicyResponse);",
          "doc": "创建策略"
        },
        {
          "name": "updateHTTPHeaderPolicyAddingHeaders",
          "requestMessageName": "UpdateHTTPHeaderPolicyAddingHeadersRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPHeaderPolicyAddingHeaders (UpdateHTTPHeaderPolicyAddingHeadersRequest) returns (RPCSuccess);",
          "doc": "修改AddHeaders"
        },
        {
          "name": "updateHTTPHeaderPolicySettingHeaders",
          "requestMessageName": "UpdateHTTPHeaderPolicySettingHeadersRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPHeaderPolicySettingHeaders (UpdateHTTPHeaderPolicySettingHeadersRequest) returns (RPCSuccess);",
          "doc": "修改SetHeaders"
        },
        {
          "name": "updateHTTPHeaderPolicyAddingTrailers",
          "requestMessageName": "UpdateHTTPHeaderPolicyAddingTrailersRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPHeaderPolicyAddingTrailers (UpdateHTTPHeaderPolicyAddingTrailersRequest) returns (RPCSuccess);",
          "doc": "修改AddTrailers"
        },
        {
          "name": "updateHTTPHeaderPolicyReplacingHeaders",
          "requestMessageName": "UpdateHTTPHeaderPolicyReplacingHeadersRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPHeaderPolicyReplacingHeaders (UpdateHTTPHeaderPolicyReplacingHeadersRequest) returns (RPCSuccess);",
          "doc": "修改ReplaceHeaders"
        },
        {
          "name": "updateHTTPHeaderPolicyDeletingHeaders",
          "requestMessageName": "UpdateHTTPHeaderPolicyDeletingHeadersRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPHeaderPolicyDeletingHeaders (UpdateHTTPHeaderPolicyDeletingHeadersRequest) returns (RPCSuccess);",
          "doc": "修改删除的Headers"
        }
      ],
      "filename": "service_http_header_policy.proto",
      "doc": ""
    },
    {
      "name": "HTTPLocationService",
      "methods": [
        {
          "name": "createHTTPLocation",
          "requestMessageName": "CreateHTTPLocationRequest",
          "responseMessageName": "CreateHTTPLocationResponse",
          "code": "rpc createHTTPLocation (CreateHTTPLocationRequest) returns (CreateHTTPLocationResponse);",
          "doc": "创建路径规则"
        },
        {
          "name": "updateHTTPLocation",
          "requestMessageName": "UpdateHTTPLocationRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPLocation (UpdateHTTPLocationRequest) returns (RPCSuccess);",
          "doc": "修改路径规则"
        },
        {
          "name": "findEnabledHTTPLocationConfig",
          "requestMessageName": "FindEnabledHTTPLocationConfigRequest",
          "responseMessageName": "FindEnabledHTTPLocationConfigResponse",
          "code": "rpc findEnabledHTTPLocationConfig (FindEnabledHTTPLocationConfigRequest) returns (FindEnabledHTTPLocationConfigResponse);",
          "doc": "查找路径规则配置"
        },
        {
          "name": "deleteHTTPLocation",
          "requestMessageName": "DeleteHTTPLocationRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteHTTPLocation (DeleteHTTPLocationRequest) returns (RPCSuccess);",
          "doc": "删除路径规则"
        },
        {
          "name": "findAndInitHTTPLocationReverseProxyConfig",
          "requestMessageName": "FindAndInitHTTPLocationReverseProxyConfigRequest",
          "responseMessageName": "FindAndInitHTTPLocationReverseProxyConfigResponse",
          "code": "rpc findAndInitHTTPLocationReverseProxyConfig (FindAndInitHTTPLocationReverseProxyConfigRequest) returns (FindAndInitHTTPLocationReverseProxyConfigResponse);",
          "doc": "查找反向代理设置"
        },
        {
          "name": "findAndInitHTTPLocationWebConfig",
          "requestMessageName": "FindAndInitHTTPLocationWebConfigRequest",
          "responseMessageName": "FindAndInitHTTPLocationWebConfigResponse",
          "code": "rpc findAndInitHTTPLocationWebConfig (FindAndInitHTTPLocationWebConfigRequest) returns (FindAndInitHTTPLocationWebConfigResponse);",
          "doc": "初始化Web设置"
        },
        {
          "name": "updateHTTPLocationReverseProxy",
          "requestMessageName": "UpdateHTTPLocationReverseProxyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPLocationReverseProxy (UpdateHTTPLocationReverseProxyRequest) returns (RPCSuccess);",
          "doc": "修改反向代理设置"
        }
      ],
      "filename": "service_http_location.proto",
      "doc": ""
    },
    {
      "name": "HTTPPageService",
      "methods": [
        {
          "name": "createHTTPPage",
          "requestMessageName": "CreateHTTPPageRequest",
          "responseMessageName": "CreateHTTPPageResponse",
          "code": "rpc createHTTPPage (CreateHTTPPageRequest) returns (CreateHTTPPageResponse);",
          "doc": "创建Page"
        },
        {
          "name": "updateHTTPPage",
          "requestMessageName": "UpdateHTTPPageRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPPage (UpdateHTTPPageRequest) returns (RPCSuccess);",
          "doc": "修改Page"
        },
        {
          "name": "findEnabledHTTPPageConfig",
          "requestMessageName": "FindEnabledHTTPPageConfigRequest",
          "responseMessageName": "FindEnabledHTTPPageConfigResponse",
          "code": "rpc findEnabledHTTPPageConfig (FindEnabledHTTPPageConfigRequest) returns (FindEnabledHTTPPageConfigResponse);",
          "doc": "查找单个Page配置"
        }
      ],
      "filename": "service_http_page.proto",
      "doc": ""
    },
    {
      "name": "HTTPRewriteRuleService",
      "methods": [
        {
          "name": "createHTTPRewriteRule",
          "requestMessageName": "CreateHTTPRewriteRuleRequest",
          "responseMessageName": "CreateHTTPRewriteRuleResponse",
          "code": "rpc createHTTPRewriteRule (CreateHTTPRewriteRuleRequest) returns (CreateHTTPRewriteRuleResponse);",
          "doc": "创建重写规则"
        },
        {
          "name": "updateHTTPRewriteRule",
          "requestMessageName": "UpdateHTTPRewriteRuleRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPRewriteRule (UpdateHTTPRewriteRuleRequest) returns (RPCSuccess);",
          "doc": "修改重写规则"
        }
      ],
      "filename": "service_http_rewrite_rule.proto",
      "doc": ""
    },
    {
      "name": "HTTPWebService",
      "methods": [
        {
          "name": "createHTTPWeb",
          "requestMessageName": "CreateHTTPWebRequest",
          "responseMessageName": "CreateHTTPWebResponse",
          "code": "rpc createHTTPWeb (CreateHTTPWebRequest) returns (CreateHTTPWebResponse);",
          "doc": "创建Web配置"
        },
        {
          "name": "findEnabledHTTPWeb",
          "requestMessageName": "FindEnabledHTTPWebRequest",
          "responseMessageName": "FindEnabledHTTPWebResponse",
          "code": "rpc findEnabledHTTPWeb (FindEnabledHTTPWebRequest) returns (FindEnabledHTTPWebResponse);",
          "doc": "查找Web信息"
        },
        {
          "name": "findEnabledHTTPWebConfig",
          "requestMessageName": "FindEnabledHTTPWebConfigRequest",
          "responseMessageName": "FindEnabledHTTPWebConfigResponse",
          "code": "rpc findEnabledHTTPWebConfig (FindEnabledHTTPWebConfigRequest) returns (FindEnabledHTTPWebConfigResponse);",
          "doc": "查找Web配置"
        },
        {
          "name": "updateHTTPWeb",
          "requestMessageName": "UpdateHTTPWebRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWeb (UpdateHTTPWebRequest) returns (RPCSuccess);",
          "doc": "更改Web配置"
        },
        {
          "name": "updateHTTPWebCompression",
          "requestMessageName": "UpdateHTTPWebCompressionRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebCompression (UpdateHTTPWebCompressionRequest) returns (RPCSuccess);",
          "doc": "更改压缩配置"
        },
        {
          "name": "updateHTTPWebWebP",
          "requestMessageName": "UpdateHTTPWebWebPRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebWebP (UpdateHTTPWebWebPRequest) returns (RPCSuccess);",
          "doc": "更改WebP配置"
        },
        {
          "name": "updateHTTPWebRemoteAddr",
          "requestMessageName": "UpdateHTTPWebRemoteAddrRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebRemoteAddr(UpdateHTTPWebRemoteAddrRequest) returns (RPCSuccess);",
          "doc": "更改RemoteAddr配置"
        },
        {
          "name": "updateHTTPWebCharset",
          "requestMessageName": "UpdateHTTPWebCharsetRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebCharset (UpdateHTTPWebCharsetRequest) returns (RPCSuccess);",
          "doc": "更改字符集配置"
        },
        {
          "name": "updateHTTPWebRequestHeader",
          "requestMessageName": "UpdateHTTPWebRequestHeaderRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebRequestHeader (UpdateHTTPWebRequestHeaderRequest) returns (RPCSuccess);",
          "doc": "更改请求Header策略"
        },
        {
          "name": "updateHTTPWebResponseHeader",
          "requestMessageName": "UpdateHTTPWebResponseHeaderRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebResponseHeader (UpdateHTTPWebResponseHeaderRequest) returns (RPCSuccess);",
          "doc": "更改响应Header策略"
        },
        {
          "name": "updateHTTPWebShutdown",
          "requestMessageName": "UpdateHTTPWebShutdownRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebShutdown (UpdateHTTPWebShutdownRequest) returns (RPCSuccess);",
          "doc": "更改Shutdown"
        },
        {
          "name": "updateHTTPWebPages",
          "requestMessageName": "UpdateHTTPWebPagesRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebPages (UpdateHTTPWebPagesRequest) returns (RPCSuccess);",
          "doc": "更改Pages"
        },
        {
          "name": "updateHTTPWebAccessLog",
          "requestMessageName": "UpdateHTTPWebAccessLogRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebAccessLog (UpdateHTTPWebAccessLogRequest) returns (RPCSuccess);",
          "doc": "更改访问日志配置"
        },
        {
          "name": "updateHTTPWebStat",
          "requestMessageName": "UpdateHTTPWebStatRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebStat (UpdateHTTPWebStatRequest) returns (RPCSuccess);",
          "doc": "更改统计配置"
        },
        {
          "name": "updateHTTPWebCache",
          "requestMessageName": "UpdateHTTPWebCacheRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebCache (UpdateHTTPWebCacheRequest) returns (RPCSuccess);",
          "doc": "更改缓存配置"
        },
        {
          "name": "updateHTTPWebFirewall",
          "requestMessageName": "UpdateHTTPWebFirewallRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebFirewall (UpdateHTTPWebFirewallRequest) returns (RPCSuccess);",
          "doc": "更改防火墙设置"
        },
        {
          "name": "updateHTTPWebLocations",
          "requestMessageName": "UpdateHTTPWebLocationsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebLocations (UpdateHTTPWebLocationsRequest) returns (RPCSuccess);",
          "doc": "更改路径规则配置"
        },
        {
          "name": "updateHTTPWebRedirectToHTTPS",
          "requestMessageName": "UpdateHTTPWebRedirectToHTTPSRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebRedirectToHTTPS (UpdateHTTPWebRedirectToHTTPSRequest) returns (RPCSuccess);",
          "doc": "更改跳转到HTTPS设置"
        },
        {
          "name": "updateHTTPWebWebsocket",
          "requestMessageName": "UpdateHTTPWebWebsocketRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebWebsocket (UpdateHTTPWebWebsocketRequest) returns (RPCSuccess);",
          "doc": "更改Websocket设置"
        },
        {
          "name": "updateHTTPWebFastcgi",
          "requestMessageName": "UpdateHTTPWebFastcgiRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebFastcgi (UpdateHTTPWebFastcgiRequest) returns (RPCSuccess);",
          "doc": "更改Fastcgi设置"
        },
        {
          "name": "updateHTTPWebRewriteRules",
          "requestMessageName": "UpdateHTTPWebRewriteRulesRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebRewriteRules (UpdateHTTPWebRewriteRulesRequest) returns (RPCSuccess);",
          "doc": "更改重写规则设置"
        },
        {
          "name": "updateHTTPWebHostRedirects",
          "requestMessageName": "UpdateHTTPWebHostRedirectsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebHostRedirects (UpdateHTTPWebHostRedirectsRequest) returns (RPCSuccess);",
          "doc": "更改主机跳转设置"
        },
        {
          "name": "findHTTPWebHostRedirects",
          "requestMessageName": "FindHTTPWebHostRedirectsRequest",
          "responseMessageName": "FindHTTPWebHostRedirectsResponse",
          "code": "rpc findHTTPWebHostRedirects (FindHTTPWebHostRedirectsRequest) returns (FindHTTPWebHostRedirectsResponse);",
          "doc": "查找主机跳转设置"
        },
        {
          "name": "updateHTTPWebAuth",
          "requestMessageName": "UpdateHTTPWebAuthRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebAuth (UpdateHTTPWebAuthRequest) returns (RPCSuccess);",
          "doc": "更改认证设置"
        },
        {
          "name": "updateHTTPWebCommon",
          "requestMessageName": "UpdateHTTPWebCommonRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebCommon(UpdateHTTPWebCommonRequest) returns (RPCSuccess);",
          "doc": "更改通用设置"
        },
        {
          "name": "updateHTTPWebRequestLimit",
          "requestMessageName": "UpdateHTTPWebRequestLimitRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebRequestLimit(UpdateHTTPWebRequestLimitRequest) returns (RPCSuccess);",
          "doc": "修改请求限制"
        },
        {
          "name": "findHTTPWebRequestLimit",
          "requestMessageName": "FindHTTPWebRequestLimitRequest",
          "responseMessageName": "FindHTTPWebRequestLimitResponse",
          "code": "rpc findHTTPWebRequestLimit(FindHTTPWebRequestLimitRequest) returns (FindHTTPWebRequestLimitResponse);",
          "doc": "查找请求限制"
        },
        {
          "name": "updateHTTPWebRequestScripts",
          "requestMessageName": "UpdateHTTPWebRequestScriptsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebRequestScripts(UpdateHTTPWebRequestScriptsRequest) returns (RPCSuccess);",
          "doc": "修改请求脚本"
        },
        {
          "name": "findHTTPWebRequestScripts",
          "requestMessageName": "FindHTTPWebRequestScriptsRequest",
          "responseMessageName": "FindHTTPWebRequestScriptsResponse",
          "code": "rpc findHTTPWebRequestScripts(FindHTTPWebRequestScriptsRequest) returns (FindHTTPWebRequestScriptsResponse);",
          "doc": "查找请求脚本"
        },
        {
          "name": "updateHTTPWebUAM",
          "requestMessageName": "UpdateHTTPWebUAMRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebUAM(UpdateHTTPWebUAMRequest) returns (RPCSuccess);",
          "doc": "修改UAM设置"
        },
        {
          "name": "findHTTPWebUAM",
          "requestMessageName": "FindHTTPWebUAMRequest",
          "responseMessageName": "FindHTTPWebUAMResponse",
          "code": "rpc findHTTPWebUAM(FindHTTPWebUAMRequest) returns (FindHTTPWebUAMResponse);",
          "doc": "查找UAM设置"
        }
      ],
      "filename": "service_http_web.proto",
      "doc": ""
    },
    {
      "name": "HTTPWebsocketService",
      "methods": [
        {
          "name": "createHTTPWebsocket",
          "requestMessageName": "CreateHTTPWebsocketRequest",
          "responseMessageName": "CreateHTTPWebsocketResponse",
          "code": "rpc createHTTPWebsocket (CreateHTTPWebsocketRequest) returns (CreateHTTPWebsocketResponse);",
          "doc": "创建Websocket配置"
        },
        {
          "name": "updateHTTPWebsocket",
          "requestMessageName": "UpdateHTTPWebsocketRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateHTTPWebsocket (UpdateHTTPWebsocketRequest) returns (RPCSuccess);",
          "doc": "修改Websocket配置"
        }
      ],
      "filename": "service_http_websocket.proto",
      "doc": ""
    },
    {
      "name": "IPItemService",
      "methods": [
        {
          "name": "createIPItem",
          "requestMessageName": "CreateIPItemRequest",
          "responseMessageName": "CreateIPItemResponse",
          "code": "rpc createIPItem (CreateIPItemRequest) returns (CreateIPItemResponse);",
          "doc": "创建IP"
        },
        {
          "name": "updateIPItem",
          "requestMessageName": "UpdateIPItemRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateIPItem (UpdateIPItemRequest) returns (RPCSuccess);",
          "doc": "修改IP"
        },
        {
          "name": "deleteIPItem",
          "requestMessageName": "DeleteIPItemRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteIPItem (DeleteIPItemRequest) returns (RPCSuccess);",
          "doc": "删除IP"
        },
        {
          "name": "deleteIPItems",
          "requestMessageName": "DeleteIPItemsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteIPItems(DeleteIPItemsRequest) returns (RPCSuccess);",
          "doc": "批量删除IP"
        },
        {
          "name": "countIPItemsWithListId",
          "requestMessageName": "CountIPItemsWithListIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countIPItemsWithListId (CountIPItemsWithListIdRequest) returns (RPCCountResponse);",
          "doc": "计算IP数量"
        },
        {
          "name": "listIPItemsWithListId",
          "requestMessageName": "ListIPItemsWithListIdRequest",
          "responseMessageName": "ListIPItemsWithListIdResponse",
          "code": "rpc listIPItemsWithListId (ListIPItemsWithListIdRequest) returns (ListIPItemsWithListIdResponse);",
          "doc": "列出单页的IP"
        },
        {
          "name": "findEnabledIPItem",
          "requestMessageName": "FindEnabledIPItemRequest",
          "responseMessageName": "FindEnabledIPItemResponse",
          "code": "rpc findEnabledIPItem (FindEnabledIPItemRequest) returns (FindEnabledIPItemResponse);",
          "doc": "查找单个IP"
        },
        {
          "name": "listIPItemsAfterVersion",
          "requestMessageName": "ListIPItemsAfterVersionRequest",
          "responseMessageName": "ListIPItemsAfterVersionResponse",
          "code": "rpc listIPItemsAfterVersion (ListIPItemsAfterVersionRequest) returns (ListIPItemsAfterVersionResponse);",
          "doc": "根据版本列出一组IP"
        },
        {
          "name": "checkIPItemStatus",
          "requestMessageName": "CheckIPItemStatusRequest",
          "responseMessageName": "CheckIPItemStatusResponse",
          "code": "rpc checkIPItemStatus (CheckIPItemStatusRequest) returns (CheckIPItemStatusResponse);",
          "doc": "检查IP状态"
        },
        {
          "name": "existsEnabledIPItem",
          "requestMessageName": "ExistsEnabledIPItemRequest",
          "responseMessageName": "ExistsEnabledIPItemResponse",
          "code": "rpc existsEnabledIPItem (ExistsEnabledIPItemRequest) returns (ExistsEnabledIPItemResponse);",
          "doc": "检查IP是否存在"
        },
        {
          "name": "countAllEnabledIPItems",
          "requestMessageName": "CountAllEnabledIPItemsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledIPItems(CountAllEnabledIPItemsRequest) returns (RPCCountResponse);",
          "doc": "计算所有IP数量"
        },
        {
          "name": "listAllEnabledIPItems",
          "requestMessageName": "ListAllEnabledIPItemsRequest",
          "responseMessageName": "ListAllEnabledIPItemsResponse",
          "code": "rpc listAllEnabledIPItems(ListAllEnabledIPItemsRequest) returns (ListAllEnabledIPItemsResponse);",
          "doc": "列出所有名单中的IP"
        },
        {
          "name": "updateIPItemsRead",
          "requestMessageName": "UpdateIPItemsReadRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateIPItemsRead(UpdateIPItemsReadRequest) returns (RPCSuccess);",
          "doc": "设置所有为已读"
        }
      ],
      "filename": "service_ip_item.proto",
      "doc": "IP条目管理"
    },
    {
      "name": "IPLibraryService",
      "methods": [
        {
          "name": "createIPLibrary",
          "requestMessageName": "CreateIPLibraryRequest",
          "responseMessageName": "CreateIPLibraryResponse",
          "code": "rpc createIPLibrary (CreateIPLibraryRequest) returns (CreateIPLibraryResponse);",
          "doc": "创建IP库"
        },
        {
          "name": "findLatestIPLibraryWithType",
          "requestMessageName": "FindLatestIPLibraryWithTypeRequest",
          "responseMessageName": "FindLatestIPLibraryWithTypeResponse",
          "code": "rpc findLatestIPLibraryWithType (FindLatestIPLibraryWithTypeRequest) returns (FindLatestIPLibraryWithTypeResponse);",
          "doc": "查找最新的IP库"
        },
        {
          "name": "findEnabledIPLibrary",
          "requestMessageName": "FindEnabledIPLibraryRequest",
          "responseMessageName": "FindEnabledIPLibraryResponse",
          "code": "rpc findEnabledIPLibrary (FindEnabledIPLibraryRequest) returns (FindEnabledIPLibraryResponse);",
          "doc": "查找单个IP库"
        },
        {
          "name": "findAllEnabledIPLibrariesWithType",
          "requestMessageName": "FindAllEnabledIPLibrariesWithTypeRequest",
          "responseMessageName": "FindAllEnabledIPLibrariesWithTypeResponse",
          "code": "rpc findAllEnabledIPLibrariesWithType (FindAllEnabledIPLibrariesWithTypeRequest) returns (FindAllEnabledIPLibrariesWithTypeResponse);",
          "doc": "列出某个类型的所有IP库"
        },
        {
          "name": "deleteIPLibrary",
          "requestMessageName": "DeleteIPLibraryRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteIPLibrary (DeleteIPLibraryRequest) returns (RPCSuccess);",
          "doc": "删除IP库"
        },
        {
          "name": "lookupIPRegion",
          "requestMessageName": "LookupIPRegionRequest",
          "responseMessageName": "LookupIPRegionResponse",
          "code": "rpc lookupIPRegion (LookupIPRegionRequest) returns (LookupIPRegionResponse);",
          "doc": "查询某个IP信息"
        },
        {
          "name": "lookupIPRegions",
          "requestMessageName": "LookupIPRegionsRequest",
          "responseMessageName": "LookupIPRegionsResponse",
          "code": "rpc lookupIPRegions (LookupIPRegionsRequest) returns (LookupIPRegionsResponse);",
          "doc": "查询一组IP信息"
        }
      ],
      "filename": "service_ip_library.proto",
      "doc": "IP库"
    },
    {
      "name": "IPListService",
      "methods": [
        {
          "name": "createIPList",
          "requestMessageName": "CreateIPListRequest",
          "responseMessageName": "CreateIPListResponse",
          "code": "rpc createIPList (CreateIPListRequest) returns (CreateIPListResponse);",
          "doc": "创建IP列表"
        },
        {
          "name": "updateIPList",
          "requestMessageName": "UpdateIPListRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateIPList (UpdateIPListRequest) returns (RPCSuccess);",
          "doc": "修改IP列表"
        },
        {
          "name": "findEnabledIPList",
          "requestMessageName": "FindEnabledIPListRequest",
          "responseMessageName": "FindEnabledIPListResponse",
          "code": "rpc findEnabledIPList (FindEnabledIPListRequest) returns (FindEnabledIPListResponse);",
          "doc": "查找IP列表信息"
        },
        {
          "name": "countAllEnabledIPLists",
          "requestMessageName": "CountAllEnabledIPListsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledIPLists (CountAllEnabledIPListsRequest) returns (RPCCountResponse);",
          "doc": "计算名单数量"
        },
        {
          "name": "listEnabledIPLists",
          "requestMessageName": "ListEnabledIPListsRequest",
          "responseMessageName": "ListEnabledIPListsResponse",
          "code": "rpc listEnabledIPLists (ListEnabledIPListsRequest) returns (ListEnabledIPListsResponse);",
          "doc": "列出单页名单"
        },
        {
          "name": "deleteIPList",
          "requestMessageName": "DeleteIPListRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteIPList (DeleteIPListRequest) returns (RPCSuccess);",
          "doc": "删除IP名单"
        },
        {
          "name": "existsEnabledIPList",
          "requestMessageName": "ExistsEnabledIPListRequest",
          "responseMessageName": "ExistsEnabledIPListResponse",
          "code": "rpc existsEnabledIPList (ExistsEnabledIPListRequest) returns (ExistsEnabledIPListResponse);",
          "doc": "检查IPList是否存在"
        },
        {
          "name": "findEnabledIPListContainsIP",
          "requestMessageName": "FindEnabledIPListContainsIPRequest",
          "responseMessageName": "FindEnabledIPListContainsIPResponse",
          "code": "rpc findEnabledIPListContainsIP(FindEnabledIPListContainsIPRequest) returns (FindEnabledIPListContainsIPResponse);",
          "doc": "根据IP来搜索IP名单"
        }
      ],
      "filename": "service_ip_list.proto",
      "doc": "IP列表"
    },
    {
      "name": "LatestItemService",
      "methods": [
        {
          "name": "increaseLatestItem",
          "requestMessageName": "IncreaseLatestItemRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc increaseLatestItem (IncreaseLatestItemRequest) returns (RPCSuccess);",
          "doc": "记录最近使用的条目"
        }
      ],
      "filename": "service_latest_item.proto",
      "doc": "最近使用的条目服务"
    },
    {
      "name": "LogService",
      "methods": [
        {
          "name": "createLog",
          "requestMessageName": "CreateLogRequest",
          "responseMessageName": "CreateLogResponse",
          "code": "rpc createLog (CreateLogRequest) returns (CreateLogResponse);",
          "doc": "创建日志"
        },
        {
          "name": "countLogs",
          "requestMessageName": "CountLogRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countLogs (CountLogRequest) returns (RPCCountResponse);",
          "doc": "计算日志数量"
        },
        {
          "name": "listLogs",
          "requestMessageName": "ListLogsRequest",
          "responseMessageName": "ListLogsResponse",
          "code": "rpc listLogs (ListLogsRequest) returns (ListLogsResponse);",
          "doc": "列出单页日志"
        },
        {
          "name": "deleteLogPermanently",
          "requestMessageName": "DeleteLogPermanentlyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteLogPermanently (DeleteLogPermanentlyRequest) returns (RPCSuccess);",
          "doc": "删除单条"
        },
        {
          "name": "deleteLogsPermanently",
          "requestMessageName": "DeleteLogsPermanentlyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteLogsPermanently (DeleteLogsPermanentlyRequest) returns (RPCSuccess);",
          "doc": "批量删除"
        },
        {
          "name": "cleanLogsPermanently",
          "requestMessageName": "CleanLogsPermanentlyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc cleanLogsPermanently (CleanLogsPermanentlyRequest) returns (RPCSuccess);",
          "doc": "清理"
        },
        {
          "name": "sumLogsSize",
          "requestMessageName": "SumLogsSizeRequest",
          "responseMessageName": "SumLogsResponse",
          "code": "rpc sumLogsSize (SumLogsSizeRequest) returns (SumLogsResponse);",
          "doc": "计算日志容量大小"
        }
      ],
      "filename": "service_log.proto",
      "doc": ""
    },
    {
      "name": "LoginService",
      "methods": [
        {
          "name": "findEnabledLogin",
          "requestMessageName": "FindEnabledLoginRequest",
          "responseMessageName": "FindEnabledLoginResponse",
          "code": "rpc findEnabledLogin (FindEnabledLoginRequest) returns (FindEnabledLoginResponse);",
          "doc": "查找认证"
        },
        {
          "name": "updateLogin",
          "requestMessageName": "UpdateLoginRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateLogin (UpdateLoginRequest) returns (RPCSuccess);",
          "doc": "修改认证"
        }
      ],
      "filename": "service_login.proto",
      "doc": "认证相关服务"
    },
    {
      "name": "MessageService",
      "methods": [
        {
          "name": "countUnreadMessages",
          "requestMessageName": "CountUnreadMessagesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countUnreadMessages (CountUnreadMessagesRequest) returns (RPCCountResponse);",
          "doc": "计算未读消息数"
        },
        {
          "name": "listUnreadMessages",
          "requestMessageName": "ListUnreadMessagesRequest",
          "responseMessageName": "ListUnreadMessagesResponse",
          "code": "rpc listUnreadMessages (ListUnreadMessagesRequest) returns (ListUnreadMessagesResponse);",
          "doc": "列出单页未读消息"
        },
        {
          "name": "updateMessageRead",
          "requestMessageName": "UpdateMessageReadRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateMessageRead (UpdateMessageReadRequest) returns (RPCSuccess);",
          "doc": "设置消息已读状态"
        },
        {
          "name": "updateMessagesRead",
          "requestMessageName": "UpdateMessagesReadRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateMessagesRead (UpdateMessagesReadRequest) returns (RPCSuccess);",
          "doc": "设置一组消息已读状态"
        },
        {
          "name": "updateAllMessagesRead",
          "requestMessageName": "UpdateAllMessagesReadRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateAllMessagesRead (UpdateAllMessagesReadRequest) returns (RPCSuccess);",
          "doc": "设置所有消息为已读"
        }
      ],
      "filename": "service_message.proto",
      "doc": "消息相关服务"
    },
    {
      "name": "MessageMediaService",
      "methods": [
        {
          "name": "findAllMessageMedias",
          "requestMessageName": "FindAllMessageMediasRequest",
          "responseMessageName": "FindAllMessageMediasResponse",
          "code": "rpc findAllMessageMedias (FindAllMessageMediasRequest) returns (FindAllMessageMediasResponse);",
          "doc": "获取所有支持的媒介"
        },
        {
          "name": "updateMessageMedias",
          "requestMessageName": "UpdateMessageMediasRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateMessageMedias (UpdateMessageMediasRequest) returns (RPCSuccess);",
          "doc": "设置所有支持的媒介"
        }
      ],
      "filename": "service_message_media.proto",
      "doc": "消息媒介管理"
    },
    {
      "name": "MessageMediaInstanceService",
      "methods": [
        {
          "name": "createMessageMediaInstance",
          "requestMessageName": "CreateMessageMediaInstanceRequest",
          "responseMessageName": "CreateMessageMediaInstanceResponse",
          "code": "rpc createMessageMediaInstance (CreateMessageMediaInstanceRequest) returns (CreateMessageMediaInstanceResponse);",
          "doc": "创建消息媒介实例"
        },
        {
          "name": "updateMessageMediaInstance",
          "requestMessageName": "UpdateMessageMediaInstanceRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateMessageMediaInstance (UpdateMessageMediaInstanceRequest) returns (RPCSuccess);",
          "doc": "修改消息媒介实例"
        },
        {
          "name": "deleteMessageMediaInstance",
          "requestMessageName": "DeleteMessageMediaInstanceRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteMessageMediaInstance (DeleteMessageMediaInstanceRequest) returns (RPCSuccess);",
          "doc": "删除消息媒介实例"
        },
        {
          "name": "countAllEnabledMessageMediaInstances",
          "requestMessageName": "CountAllEnabledMessageMediaInstancesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledMessageMediaInstances (CountAllEnabledMessageMediaInstancesRequest) returns (RPCCountResponse);",
          "doc": "计算消息媒介实例数量"
        },
        {
          "name": "listEnabledMessageMediaInstances",
          "requestMessageName": "ListEnabledMessageMediaInstancesRequest",
          "responseMessageName": "ListEnabledMessageMediaInstancesResponse",
          "code": "rpc listEnabledMessageMediaInstances (ListEnabledMessageMediaInstancesRequest) returns (ListEnabledMessageMediaInstancesResponse);",
          "doc": "列出单页消息媒介实例"
        },
        {
          "name": "findEnabledMessageMediaInstance",
          "requestMessageName": "FindEnabledMessageMediaInstanceRequest",
          "responseMessageName": "FindEnabledMessageMediaInstanceResponse",
          "code": "rpc findEnabledMessageMediaInstance (FindEnabledMessageMediaInstanceRequest) returns (FindEnabledMessageMediaInstanceResponse);",
          "doc": "查找单个消息媒介实例信息"
        }
      ],
      "filename": "service_message_media_instance.proto",
      "doc": "消息媒介实例"
    },
    {
      "name": "MessageReceiverService",
      "methods": [
        {
          "name": "updateMessageReceivers",
          "requestMessageName": "UpdateMessageReceiversRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateMessageReceivers (UpdateMessageReceiversRequest) returns (RPCSuccess);",
          "doc": "修改接收者"
        },
        {
          "name": "findAllEnabledMessageReceivers",
          "requestMessageName": "FindAllEnabledMessageReceiversRequest",
          "responseMessageName": "FindAllEnabledMessageReceiversResponse",
          "code": "rpc findAllEnabledMessageReceivers (FindAllEnabledMessageReceiversRequest) returns (FindAllEnabledMessageReceiversResponse);",
          "doc": "查找接收者"
        },
        {
          "name": "deleteMessageReceiver",
          "requestMessageName": "DeleteMessageReceiverRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteMessageReceiver (DeleteMessageReceiverRequest) returns (RPCSuccess);",
          "doc": "删除接收者"
        },
        {
          "name": "countAllEnabledMessageReceivers",
          "requestMessageName": "CountAllEnabledMessageReceiversRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledMessageReceivers (CountAllEnabledMessageReceiversRequest) returns (RPCCountResponse);",
          "doc": "计算接收者数量"
        }
      ],
      "filename": "service_message_receiver.proto",
      "doc": "消息对象接收者设置"
    },
    {
      "name": "MessageRecipientService",
      "methods": [
        {
          "name": "createMessageRecipient",
          "requestMessageName": "CreateMessageRecipientRequest",
          "responseMessageName": "CreateMessageRecipientResponse",
          "code": "rpc createMessageRecipient (CreateMessageRecipientRequest) returns (CreateMessageRecipientResponse);",
          "doc": "创建接收人"
        },
        {
          "name": "updateMessageRecipient",
          "requestMessageName": "UpdateMessageRecipientRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateMessageRecipient (UpdateMessageRecipientRequest) returns (RPCSuccess);",
          "doc": "修改接收人"
        },
        {
          "name": "deleteMessageRecipient",
          "requestMessageName": "DeleteMessageRecipientRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteMessageRecipient (DeleteMessageRecipientRequest) returns (RPCSuccess);",
          "doc": "删除接收人"
        },
        {
          "name": "countAllEnabledMessageRecipients",
          "requestMessageName": "CountAllEnabledMessageRecipientsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledMessageRecipients (CountAllEnabledMessageRecipientsRequest) returns (RPCCountResponse);",
          "doc": "计算接收人数量"
        },
        {
          "name": "listEnabledMessageRecipients",
          "requestMessageName": "ListEnabledMessageRecipientsRequest",
          "responseMessageName": "ListEnabledMessageRecipientsResponse",
          "code": "rpc listEnabledMessageRecipients (ListEnabledMessageRecipientsRequest) returns (ListEnabledMessageRecipientsResponse);",
          "doc": "列出单页接收人"
        },
        {
          "name": "findEnabledMessageRecipient",
          "requestMessageName": "FindEnabledMessageRecipientRequest",
          "responseMessageName": "FindEnabledMessageRecipientResponse",
          "code": "rpc findEnabledMessageRecipient (FindEnabledMessageRecipientRequest) returns (FindEnabledMessageRecipientResponse);",
          "doc": "查找单个接收人信息"
        }
      ],
      "filename": "service_message_recipient.proto",
      "doc": "消息接收人"
    },
    {
      "name": "MessageRecipientGroupService",
      "methods": [
        {
          "name": "createMessageRecipientGroup",
          "requestMessageName": "CreateMessageRecipientGroupRequest",
          "responseMessageName": "CreateMessageRecipientGroupResponse",
          "code": "rpc createMessageRecipientGroup (CreateMessageRecipientGroupRequest) returns (CreateMessageRecipientGroupResponse);",
          "doc": "创建分组"
        },
        {
          "name": "updateMessageRecipientGroup",
          "requestMessageName": "UpdateMessageRecipientGroupRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateMessageRecipientGroup (UpdateMessageRecipientGroupRequest) returns (RPCSuccess);",
          "doc": "修改分组"
        },
        {
          "name": "findAllEnabledMessageRecipientGroups",
          "requestMessageName": "FindAllEnabledMessageRecipientGroupsRequest",
          "responseMessageName": "FindAllEnabledMessageRecipientGroupsResponse",
          "code": "rpc findAllEnabledMessageRecipientGroups (FindAllEnabledMessageRecipientGroupsRequest) returns (FindAllEnabledMessageRecipientGroupsResponse);",
          "doc": "查找所有可用的分组"
        },
        {
          "name": "deleteMessageRecipientGroup",
          "requestMessageName": "DeleteMessageRecipientGroupRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteMessageRecipientGroup (DeleteMessageRecipientGroupRequest) returns (RPCSuccess);",
          "doc": "删除分组"
        },
        {
          "name": "findEnabledMessageRecipientGroup",
          "requestMessageName": "FindEnabledMessageRecipientGroupRequest",
          "responseMessageName": "FindEnabledMessageRecipientGroupResponse",
          "code": "rpc findEnabledMessageRecipientGroup (FindEnabledMessageRecipientGroupRequest) returns (FindEnabledMessageRecipientGroupResponse);",
          "doc": "查找单个分组信息"
        }
      ],
      "filename": "service_message_recipient_group.proto",
      "doc": "消息接收人分组"
    },
    {
      "name": "MessageTaskService",
      "methods": [
        {
          "name": "createMessageTask",
          "requestMessageName": "CreateMessageTaskRequest",
          "responseMessageName": "CreateMessageTaskResponse",
          "code": "rpc createMessageTask (CreateMessageTaskRequest) returns (CreateMessageTaskResponse);",
          "doc": "创建消息任务"
        },
        {
          "name": "findSendingMessageTasks",
          "requestMessageName": "FindSendingMessageTasksRequest",
          "responseMessageName": "FindSendingMessageTasksResponse",
          "code": "rpc findSendingMessageTasks (FindSendingMessageTasksRequest) returns (FindSendingMessageTasksResponse);",
          "doc": "查找要发送的消息任务"
        },
        {
          "name": "updateMessageTaskStatus",
          "requestMessageName": "UpdateMessageTaskStatusRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateMessageTaskStatus (UpdateMessageTaskStatusRequest) returns (RPCSuccess);",
          "doc": "修改消息任务状态"
        },
        {
          "name": "deleteMessageTask",
          "requestMessageName": "DeleteMessageTaskRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteMessageTask (DeleteMessageTaskRequest) returns (RPCSuccess);",
          "doc": "删除消息任务"
        },
        {
          "name": "findEnabledMessageTask",
          "requestMessageName": "FindEnabledMessageTaskRequest",
          "responseMessageName": "FindEnabledMessageTaskResponse",
          "code": "rpc findEnabledMessageTask (FindEnabledMessageTaskRequest) returns (FindEnabledMessageTaskResponse);",
          "doc": "读取消息任务状态"
        },
        {
          "name": "countMessageTasksWithStatus",
          "requestMessageName": "CountMessageTasksWithStatusRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countMessageTasksWithStatus(CountMessageTasksWithStatusRequest) returns (RPCCountResponse);",
          "doc": "计算某个状态的消息任务数量"
        },
        {
          "name": "listMessageTasksWithStatus",
          "requestMessageName": "ListMessageTasksWithStatusRequest",
          "responseMessageName": "ListMessageTasksWithStatusResponse",
          "code": "rpc listMessageTasksWithStatus(ListMessageTasksWithStatusRequest) returns (ListMessageTasksWithStatusResponse);",
          "doc": "根据状态列出某页任务"
        }
      ],
      "filename": "service_message_task.proto",
      "doc": "消息发送任务服务"
    },
    {
      "name": "MessageTaskLogService",
      "methods": [
        {
          "name": "countMessageTaskLogs",
          "requestMessageName": "CountMessageTaskLogsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countMessageTaskLogs (CountMessageTaskLogsRequest) returns (RPCCountResponse);",
          "doc": "计算日志数量"
        },
        {
          "name": "listMessageTaskLogs",
          "requestMessageName": "ListMessageTaskLogsRequest",
          "responseMessageName": "ListMessageTaskLogsResponse",
          "code": "rpc listMessageTaskLogs (ListMessageTaskLogsRequest) returns (ListMessageTaskLogsResponse);",
          "doc": "列出当页日志"
        }
      ],
      "filename": "service_message_task_log.proto",
      "doc": "消息发送任务日志"
    },
    {
      "name": "MetricChartService",
      "methods": [
        {
          "name": "createMetricChart",
          "requestMessageName": "CreateMetricChartRequest",
          "responseMessageName": "CreateMetricChartResponse",
          "code": "rpc createMetricChart (CreateMetricChartRequest) returns (CreateMetricChartResponse);",
          "doc": "创建图表"
        },
        {
          "name": "updateMetricChart",
          "requestMessageName": "UpdateMetricChartRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateMetricChart (UpdateMetricChartRequest) returns (RPCSuccess);",
          "doc": "修改图表"
        },
        {
          "name": "findEnabledMetricChart",
          "requestMessageName": "FindEnabledMetricChartRequest",
          "responseMessageName": "FindEnabledMetricChartResponse",
          "code": "rpc findEnabledMetricChart (FindEnabledMetricChartRequest) returns (FindEnabledMetricChartResponse);",
          "doc": "查找单个图表"
        },
        {
          "name": "countEnabledMetricCharts",
          "requestMessageName": "CountEnabledMetricChartsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countEnabledMetricCharts (CountEnabledMetricChartsRequest) returns (RPCCountResponse);",
          "doc": "计算图表数量"
        },
        {
          "name": "listEnabledMetricCharts",
          "requestMessageName": "ListEnabledMetricChartsRequest",
          "responseMessageName": "ListEnabledMetricChartsResponse",
          "code": "rpc listEnabledMetricCharts (ListEnabledMetricChartsRequest) returns (ListEnabledMetricChartsResponse);",
          "doc": "列出单页图表"
        },
        {
          "name": "deleteMetricChart",
          "requestMessageName": "DeleteMetricChartRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteMetricChart (DeleteMetricChartRequest) returns (RPCSuccess);",
          "doc": "删除图表"
        }
      ],
      "filename": "service_metric_chart.proto",
      "doc": "指标图表相关服务"
    },
    {
      "name": "MetricItemService",
      "methods": [
        {
          "name": "createMetricItem",
          "requestMessageName": "CreateMetricItemRequest",
          "responseMessageName": "CreateMetricItemResponse",
          "code": "rpc createMetricItem (CreateMetricItemRequest) returns (CreateMetricItemResponse);",
          "doc": "创建指标"
        },
        {
          "name": "updateMetricItem",
          "requestMessageName": "UpdateMetricItemRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateMetricItem (UpdateMetricItemRequest) returns (RPCSuccess);",
          "doc": "修改指标"
        },
        {
          "name": "findEnabledMetricItem",
          "requestMessageName": "FindEnabledMetricItemRequest",
          "responseMessageName": "FindEnabledMetricItemResponse",
          "code": "rpc findEnabledMetricItem (FindEnabledMetricItemRequest) returns (FindEnabledMetricItemResponse);",
          "doc": "查找单个指标信息"
        },
        {
          "name": "countAllEnabledMetricItems",
          "requestMessageName": "CountAllEnabledMetricItemsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledMetricItems (CountAllEnabledMetricItemsRequest) returns (RPCCountResponse);",
          "doc": "计算指标数量"
        },
        {
          "name": "listEnabledMetricItems",
          "requestMessageName": "ListEnabledMetricItemsRequest",
          "responseMessageName": "ListEnabledMetricItemsResponse",
          "code": "rpc listEnabledMetricItems (ListEnabledMetricItemsRequest) returns (ListEnabledMetricItemsResponse);",
          "doc": "列出单页指标"
        },
        {
          "name": "deleteMetricItem",
          "requestMessageName": "DeleteMetricItemRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteMetricItem (DeleteMetricItemRequest) returns (RPCSuccess);",
          "doc": "删除指标"
        }
      ],
      "filename": "service_metric_item.proto",
      "doc": "指标相关服务"
    },
    {
      "name": "MetricStatService",
      "methods": [
        {
          "name": "uploadMetricStats",
          "requestMessageName": "UploadMetricStatsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc uploadMetricStats (UploadMetricStatsRequest) returns (RPCSuccess);",
          "doc": "上传统计数据"
        },
        {
          "name": "countMetricStats",
          "requestMessageName": "CountMetricStatsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countMetricStats (CountMetricStatsRequest) returns (RPCCountResponse);",
          "doc": "计算指标数据数量"
        },
        {
          "name": "listMetricStats",
          "requestMessageName": "ListMetricStatsRequest",
          "responseMessageName": "ListMetricStatsResponse",
          "code": "rpc listMetricStats (ListMetricStatsRequest) returns (ListMetricStatsResponse);",
          "doc": "读取单页指标数据"
        }
      ],
      "filename": "service_metric_stat.proto",
      "doc": "指标统计数据相关服务"
    },
    {
      "name": "MonitorNodeService",
      "methods": [
        {
          "name": "createMonitorNode",
          "requestMessageName": "CreateMonitorNodeRequest",
          "responseMessageName": "CreateMonitorNodeResponse",
          "code": "rpc createMonitorNode (CreateMonitorNodeRequest) returns (CreateMonitorNodeResponse);",
          "doc": "创建监控节点"
        },
        {
          "name": "updateMonitorNode",
          "requestMessageName": "UpdateMonitorNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateMonitorNode (UpdateMonitorNodeRequest) returns (RPCSuccess);",
          "doc": "修改监控节点"
        },
        {
          "name": "deleteMonitorNode",
          "requestMessageName": "DeleteMonitorNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteMonitorNode (DeleteMonitorNodeRequest) returns (RPCSuccess);",
          "doc": "删除监控节点"
        },
        {
          "name": "findAllEnabledMonitorNodes",
          "requestMessageName": "FindAllEnabledMonitorNodesRequest",
          "responseMessageName": "FindAllEnabledMonitorNodesResponse",
          "code": "rpc findAllEnabledMonitorNodes (FindAllEnabledMonitorNodesRequest) returns (FindAllEnabledMonitorNodesResponse);",
          "doc": "列出所有可用监控节点"
        },
        {
          "name": "countAllEnabledMonitorNodes",
          "requestMessageName": "CountAllEnabledMonitorNodesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledMonitorNodes (CountAllEnabledMonitorNodesRequest) returns (RPCCountResponse);",
          "doc": "计算监控节点数量"
        },
        {
          "name": "listEnabledMonitorNodes",
          "requestMessageName": "ListEnabledMonitorNodesRequest",
          "responseMessageName": "ListEnabledMonitorNodesResponse",
          "code": "rpc listEnabledMonitorNodes (ListEnabledMonitorNodesRequest) returns (ListEnabledMonitorNodesResponse);",
          "doc": "列出单页的监控节点"
        },
        {
          "name": "findEnabledMonitorNode",
          "requestMessageName": "FindEnabledMonitorNodeRequest",
          "responseMessageName": "FindEnabledMonitorNodeResponse",
          "code": "rpc findEnabledMonitorNode (FindEnabledMonitorNodeRequest) returns (FindEnabledMonitorNodeResponse);",
          "doc": "根据ID查找节点"
        },
        {
          "name": "findCurrentMonitorNode",
          "requestMessageName": "FindCurrentMonitorNodeRequest",
          "responseMessageName": "FindCurrentMonitorNodeResponse",
          "code": "rpc findCurrentMonitorNode (FindCurrentMonitorNodeRequest) returns (FindCurrentMonitorNodeResponse);",
          "doc": "获取当前监控节点信息"
        },
        {
          "name": "updateMonitorNodeStatus",
          "requestMessageName": "UpdateMonitorNodeStatusRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateMonitorNodeStatus (UpdateMonitorNodeStatusRequest) returns (RPCSuccess);",
          "doc": "更新节点状态"
        }
      ],
      "filename": "service_monitor_node.proto",
      "doc": ""
    },
    {
      "name": "NodeService",
      "methods": [
        {
          "name": "createNode",
          "requestMessageName": "CreateNodeRequest",
          "responseMessageName": "CreateNodeResponse",
          "code": "rpc createNode (CreateNodeRequest) returns (CreateNodeResponse);",
          "doc": "创建节点"
        },
        {
          "name": "registerClusterNode",
          "requestMessageName": "RegisterClusterNodeRequest",
          "responseMessageName": "RegisterClusterNodeResponse",
          "code": "rpc registerClusterNode (RegisterClusterNodeRequest) returns (RegisterClusterNodeResponse);",
          "doc": "注册集群节点"
        },
        {
          "name": "countAllEnabledNodes",
          "requestMessageName": "CountAllEnabledNodesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodes (CountAllEnabledNodesRequest) returns (RPCCountResponse);",
          "doc": "所有可用的节点数量"
        },
        {
          "name": "countAllEnabledNodesMatch",
          "requestMessageName": "CountAllEnabledNodesMatchRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodesMatch (CountAllEnabledNodesMatchRequest) returns (RPCCountResponse);",
          "doc": "计算匹配的节点数量"
        },
        {
          "name": "listEnabledNodesMatch",
          "requestMessageName": "ListEnabledNodesMatchRequest",
          "responseMessageName": "ListEnabledNodesMatchResponse",
          "code": "rpc listEnabledNodesMatch (ListEnabledNodesMatchRequest) returns (ListEnabledNodesMatchResponse);",
          "doc": "列出单页节点"
        },
        {
          "name": "findAllEnabledNodesWithNodeClusterId",
          "requestMessageName": "FindAllEnabledNodesWithNodeClusterIdRequest",
          "responseMessageName": "FindAllEnabledNodesWithNodeClusterIdResponse",
          "code": "rpc findAllEnabledNodesWithNodeClusterId (FindAllEnabledNodesWithNodeClusterIdRequest) returns (FindAllEnabledNodesWithNodeClusterIdResponse);",
          "doc": "根据集群查找所有节点"
        },
        {
          "name": "deleteNode",
          "requestMessageName": "DeleteNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNode (DeleteNodeRequest) returns (RPCSuccess);",
          "doc": "删除节点"
        },
        {
          "name": "deleteNodeFromNodeCluster",
          "requestMessageName": "DeleteNodeFromNodeClusterRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNodeFromNodeCluster (DeleteNodeFromNodeClusterRequest) returns (RPCSuccess);",
          "doc": "从集群中删除节点"
        },
        {
          "name": "updateNode",
          "requestMessageName": "UpdateNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNode (UpdateNodeRequest) returns (RPCSuccess);",
          "doc": "修改节点"
        },
        {
          "name": "findEnabledNode",
          "requestMessageName": "FindEnabledNodeRequest",
          "responseMessageName": "FindEnabledNodeResponse",
          "code": "rpc findEnabledNode (FindEnabledNodeRequest) returns (FindEnabledNodeResponse);",
          "doc": "获取单个节点信息"
        },
        {
          "name": "findEnabledBasicNode",
          "requestMessageName": "FindEnabledBasicNodeRequest",
          "responseMessageName": "FindEnabledBasicNodeResponse",
          "code": "rpc findEnabledBasicNode (FindEnabledBasicNodeRequest) returns (FindEnabledBasicNodeResponse);",
          "doc": "获取单个节点基本信息"
        },
        {
          "name": "findCurrentNodeConfig",
          "requestMessageName": "FindCurrentNodeConfigRequest",
          "responseMessageName": "FindCurrentNodeConfigResponse",
          "code": "rpc findCurrentNodeConfig (FindCurrentNodeConfigRequest) returns (FindCurrentNodeConfigResponse);",
          "doc": "获取当前节点配置"
        },
        {
          "name": "sendCommandToNode",
          "requestMessageName": "NodeStreamMessage",
          "responseMessageName": "NodeStreamMessage",
          "code": "rpc sendCommandToNode (NodeStreamMessage) returns (NodeStreamMessage);",
          "doc": "向节点发送命令"
        },
        {
          "name": "updateNodeStatus",
          "requestMessageName": "UpdateNodeStatusRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeStatus (UpdateNodeStatusRequest) returns (RPCSuccess);",
          "doc": "更新节点状态"
        },
        {
          "name": "updateNodeIsInstalled",
          "requestMessageName": "UpdateNodeIsInstalledRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeIsInstalled (UpdateNodeIsInstalledRequest) returns (RPCSuccess);",
          "doc": "修改节点安装状态"
        },
        {
          "name": "installNode",
          "requestMessageName": "InstallNodeRequest",
          "responseMessageName": "InstallNodeResponse",
          "code": "rpc installNode (InstallNodeRequest) returns (InstallNodeResponse);",
          "doc": "安装节点"
        },
        {
          "name": "upgradeNode",
          "requestMessageName": "UpgradeNodeRequest",
          "responseMessageName": "UpgradeNodeResponse",
          "code": "rpc upgradeNode (UpgradeNodeRequest) returns (UpgradeNodeResponse);",
          "doc": "升级节点"
        },
        {
          "name": "startNode",
          "requestMessageName": "StartNodeRequest",
          "responseMessageName": "StartNodeResponse",
          "code": "rpc startNode (StartNodeRequest) returns (StartNodeResponse);",
          "doc": "启动节点"
        },
        {
          "name": "stopNode",
          "requestMessageName": "StopNodeRequest",
          "responseMessageName": "StopNodeResponse",
          "code": "rpc stopNode (StopNodeRequest) returns (StopNodeResponse);",
          "doc": "停止节点"
        },
        {
          "name": "updateNodeConnectedAPINodes",
          "requestMessageName": "UpdateNodeConnectedAPINodesRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeConnectedAPINodes (UpdateNodeConnectedAPINodesRequest) returns (RPCSuccess);",
          "doc": "更改节点连接的API节点信息"
        },
        {
          "name": "countAllEnabledNodesWithNodeGrantId",
          "requestMessageName": "CountAllEnabledNodesWithNodeGrantIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodesWithNodeGrantId (CountAllEnabledNodesWithNodeGrantIdRequest) returns (RPCCountResponse);",
          "doc": "计算使用某个认证的节点数量"
        },
        {
          "name": "findAllEnabledNodesWithNodeGrantId",
          "requestMessageName": "FindAllEnabledNodesWithNodeGrantIdRequest",
          "responseMessageName": "FindAllEnabledNodesWithNodeGrantIdResponse",
          "code": "rpc findAllEnabledNodesWithNodeGrantId (FindAllEnabledNodesWithNodeGrantIdRequest) returns (FindAllEnabledNodesWithNodeGrantIdResponse);",
          "doc": "查找使用某个认证的所有节点"
        },
        {
          "name": "countAllNotInstalledNodesWithNodeClusterId",
          "requestMessageName": "CountAllNotInstalledNodesWithNodeClusterIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllNotInstalledNodesWithNodeClusterId (CountAllNotInstalledNodesWithNodeClusterIdRequest) returns (RPCCountResponse);",
          "doc": "计算没有安装的节点数量"
        },
        {
          "name": "findAllNotInstalledNodesWithNodeClusterId",
          "requestMessageName": "FindAllNotInstalledNodesWithNodeClusterIdRequest",
          "responseMessageName": "FindAllNotInstalledNodesWithNodeClusterIdResponse",
          "code": "rpc findAllNotInstalledNodesWithNodeClusterId (FindAllNotInstalledNodesWithNodeClusterIdRequest) returns (FindAllNotInstalledNodesWithNodeClusterIdResponse);",
          "doc": "列出所有未安装的节点"
        },
        {
          "name": "countAllUpgradeNodesWithNodeClusterId",
          "requestMessageName": "CountAllUpgradeNodesWithNodeClusterIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllUpgradeNodesWithNodeClusterId (CountAllUpgradeNodesWithNodeClusterIdRequest) returns (RPCCountResponse);",
          "doc": "计算需要升级的节点数量"
        },
        {
          "name": "findAllUpgradeNodesWithNodeClusterId",
          "requestMessageName": "FindAllUpgradeNodesWithNodeClusterIdRequest",
          "responseMessageName": "FindAllUpgradeNodesWithNodeClusterIdResponse",
          "code": "rpc findAllUpgradeNodesWithNodeClusterId (FindAllUpgradeNodesWithNodeClusterIdRequest) returns (FindAllUpgradeNodesWithNodeClusterIdResponse);",
          "doc": "列出所有需要升级的节点"
        },
        {
          "name": "findNodeInstallStatus",
          "requestMessageName": "FindNodeInstallStatusRequest",
          "responseMessageName": "FindNodeInstallStatusResponse",
          "code": "rpc findNodeInstallStatus (FindNodeInstallStatusRequest) returns (FindNodeInstallStatusResponse);",
          "doc": "读取节点安装状态"
        },
        {
          "name": "updateNodeLogin",
          "requestMessageName": "UpdateNodeLoginRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeLogin (UpdateNodeLoginRequest) returns (RPCSuccess);",
          "doc": "修改节点登录信息"
        },
        {
          "name": "countAllEnabledNodesWithNodeGroupId",
          "requestMessageName": "CountAllEnabledNodesWithNodeGroupIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodesWithNodeGroupId (CountAllEnabledNodesWithNodeGroupIdRequest) returns (RPCCountResponse);",
          "doc": "计算某个节点分组内的节点数量"
        },
        {
          "name": "findAllEnabledNodesDNSWithNodeClusterId",
          "requestMessageName": "FindAllEnabledNodesDNSWithNodeClusterIdRequest",
          "responseMessageName": "FindAllEnabledNodesDNSWithNodeClusterIdResponse",
          "code": "rpc findAllEnabledNodesDNSWithNodeClusterId (FindAllEnabledNodesDNSWithNodeClusterIdRequest) returns (FindAllEnabledNodesDNSWithNodeClusterIdResponse);",
          "doc": "取得某个集群下的所有节点DNS信息"
        },
        {
          "name": "findEnabledNodeDNS",
          "requestMessageName": "FindEnabledNodeDNSRequest",
          "responseMessageName": "FindEnabledNodeDNSResponse",
          "code": "rpc findEnabledNodeDNS (FindEnabledNodeDNSRequest) returns (FindEnabledNodeDNSResponse);",
          "doc": "查找单个节点的域名解析信息"
        },
        {
          "name": "updateNodeDNS",
          "requestMessageName": "UpdateNodeDNSRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeDNS (UpdateNodeDNSRequest) returns (RPCSuccess);",
          "doc": "修改节点的DNS解析信息"
        },
        {
          "name": "countAllEnabledNodesWithNodeRegionId",
          "requestMessageName": "CountAllEnabledNodesWithNodeRegionIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodesWithNodeRegionId (CountAllEnabledNodesWithNodeRegionIdRequest) returns (RPCCountResponse);",
          "doc": "计算某个区域下的节点数量"
        },
        {
          "name": "findEnabledNodesWithIds",
          "requestMessageName": "FindEnabledNodesWithIdsRequest",
          "responseMessageName": "FindEnabledNodesWithIdsResponse",
          "code": "rpc findEnabledNodesWithIds (FindEnabledNodesWithIdsRequest) returns (FindEnabledNodesWithIdsResponse);",
          "doc": "根据一组ID获取节点信息"
        },
        {
          "name": "checkNodeLatestVersion",
          "requestMessageName": "CheckNodeLatestVersionRequest",
          "responseMessageName": "CheckNodeLatestVersionResponse",
          "code": "rpc checkNodeLatestVersion (CheckNodeLatestVersionRequest) returns (CheckNodeLatestVersionResponse);",
          "doc": "检查新版本"
        },
        {
          "name": "updateNodeUp",
          "requestMessageName": "UpdateNodeUpRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeUp (UpdateNodeUpRequest) returns (RPCSuccess);",
          "doc": "设置节点上线状态"
        },
        {
          "name": "downloadNodeInstallationFile",
          "requestMessageName": "DownloadNodeInstallationFileRequest",
          "responseMessageName": "DownloadNodeInstallationFileResponse",
          "code": "rpc downloadNodeInstallationFile (DownloadNodeInstallationFileRequest) returns (DownloadNodeInstallationFileResponse);",
          "doc": "下载最新边缘节点安装文件"
        },
        {
          "name": "updateNodeSystem",
          "requestMessageName": "UpdateNodeSystemRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeSystem(UpdateNodeSystemRequest) returns (RPCSuccess);",
          "doc": "修改节点系统信息"
        },
        {
          "name": "updateNodeCache",
          "requestMessageName": "UpdateNodeCacheRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeCache(UpdateNodeCacheRequest) returns (RPCSuccess);",
          "doc": "修改节点缓存设置"
        },
        {
          "name": "findNodeLevelInfo",
          "requestMessageName": "FindNodeLevelInfoRequest",
          "responseMessageName": "FindNodeLevelInfoResponse",
          "code": "rpc findNodeLevelInfo(FindNodeLevelInfoRequest) returns (FindNodeLevelInfoResponse);",
          "doc": "读取节点级别信息"
        },
        {
          "name": "findNodeDNSResolver",
          "requestMessageName": "FindNodeDNSResolverRequest",
          "responseMessageName": "FindNodeDNSResolverResponse",
          "code": "rpc findNodeDNSResolver(FindNodeDNSResolverRequest) returns (FindNodeDNSResolverResponse);",
          "doc": "读取节点DNS Resolver"
        },
        {
          "name": "updateNodeDNSResolver",
          "requestMessageName": "UpdateNodeDNSResolverRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeDNSResolver(UpdateNodeDNSResolverRequest) returns (RPCSuccess);",
          "doc": "修改DNS Resolver"
        },
        {
          "name": "findNodeDDoSProtection",
          "requestMessageName": "FindNodeDDoSProtectionRequest",
          "responseMessageName": "FindNodeDDoSProtectionResponse",
          "code": "rpc findNodeDDoSProtection(FindNodeDDoSProtectionRequest) returns (FindNodeDDoSProtectionResponse);",
          "doc": "获取节点的DDoS设置"
        },
        {
          "name": "updateNodeDDoSProtection",
          "requestMessageName": "UpdateNodeDDoSProtectionRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeDDoSProtection(UpdateNodeDDoSProtectionRequest) returns (RPCSuccess);",
          "doc": "修改节点的DDoS设置"
        },
        {
          "name": "findEnabledNodeConfigInfo",
          "requestMessageName": "FindEnabledNodeConfigInfoRequest",
          "responseMessageName": "FindEnabledNodeConfigInfoResponse",
          "code": "rpc findEnabledNodeConfigInfo (FindEnabledNodeConfigInfoRequest) returns (FindEnabledNodeConfigInfoResponse);",
          "doc": "取得节点的配置概要信息"
        }
      ],
      "filename": "service_node.proto",
      "doc": ""
    },
    {
      "name": "NodeClusterService",
      "methods": [
        {
          "name": "createNodeCluster",
          "requestMessageName": "CreateNodeClusterRequest",
          "responseMessageName": "CreateNodeClusterResponse",
          "code": "rpc createNodeCluster (CreateNodeClusterRequest) returns (CreateNodeClusterResponse);",
          "doc": "创建集群"
        },
        {
          "name": "updateNodeCluster",
          "requestMessageName": "UpdateNodeClusterRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeCluster (UpdateNodeClusterRequest) returns (RPCSuccess);",
          "doc": "修改集群"
        },
        {
          "name": "deleteNodeCluster",
          "requestMessageName": "DeleteNodeClusterRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNodeCluster (DeleteNodeClusterRequest) returns (RPCSuccess);",
          "doc": "删除集群"
        },
        {
          "name": "findEnabledNodeCluster",
          "requestMessageName": "FindEnabledNodeClusterRequest",
          "responseMessageName": "FindEnabledNodeClusterResponse",
          "code": "rpc findEnabledNodeCluster (FindEnabledNodeClusterRequest) returns (FindEnabledNodeClusterResponse);",
          "doc": "查找单个集群信息"
        },
        {
          "name": "findAPINodesWithNodeCluster",
          "requestMessageName": "FindAPINodesWithNodeClusterRequest",
          "responseMessageName": "FindAPINodesWithNodeClusterResponse",
          "code": "rpc findAPINodesWithNodeCluster (FindAPINodesWithNodeClusterRequest) returns (FindAPINodesWithNodeClusterResponse);",
          "doc": "查找集群的API节点信息"
        },
        {
          "name": "findAllEnabledNodeClusters",
          "requestMessageName": "FindAllEnabledNodeClustersRequest",
          "responseMessageName": "FindAllEnabledNodeClustersResponse",
          "code": "rpc findAllEnabledNodeClusters (FindAllEnabledNodeClustersRequest) returns (FindAllEnabledNodeClustersResponse);",
          "doc": "获取所有可用集群"
        },
        {
          "name": "countAllEnabledNodeClusters",
          "requestMessageName": "CountAllEnabledNodeClustersRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodeClusters (CountAllEnabledNodeClustersRequest) returns (RPCCountResponse);",
          "doc": "计算所有集群数量"
        },
        {
          "name": "listEnabledNodeClusters",
          "requestMessageName": "ListEnabledNodeClustersRequest",
          "responseMessageName": "ListEnabledNodeClustersResponse",
          "code": "rpc listEnabledNodeClusters (ListEnabledNodeClustersRequest) returns (ListEnabledNodeClustersResponse);",
          "doc": "列出单页集群"
        },
        {
          "name": "findNodeClusterHealthCheckConfig",
          "requestMessageName": "FindNodeClusterHealthCheckConfigRequest",
          "responseMessageName": "FindNodeClusterHealthCheckConfigResponse",
          "code": "rpc findNodeClusterHealthCheckConfig (FindNodeClusterHealthCheckConfigRequest) returns (FindNodeClusterHealthCheckConfigResponse);",
          "doc": "查找集群的健康检查配置"
        },
        {
          "name": "updateNodeClusterHealthCheck",
          "requestMessageName": "UpdateNodeClusterHealthCheckRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeClusterHealthCheck (UpdateNodeClusterHealthCheckRequest) returns (RPCSuccess);",
          "doc": "修改集群健康检查设置"
        },
        {
          "name": "executeNodeClusterHealthCheck",
          "requestMessageName": "ExecuteNodeClusterHealthCheckRequest",
          "responseMessageName": "ExecuteNodeClusterHealthCheckResponse",
          "code": "rpc executeNodeClusterHealthCheck (ExecuteNodeClusterHealthCheckRequest) returns (ExecuteNodeClusterHealthCheckResponse);",
          "doc": "执行健康检查"
        },
        {
          "name": "countAllEnabledNodeClustersWithNodeGrantId",
          "requestMessageName": "CountAllEnabledNodeClustersWithNodeGrantIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodeClustersWithNodeGrantId (CountAllEnabledNodeClustersWithNodeGrantIdRequest) returns (RPCCountResponse);",
          "doc": "计算使用某个认证的集群数量"
        },
        {
          "name": "findAllEnabledNodeClustersWithNodeGrantId",
          "requestMessageName": "FindAllEnabledNodeClustersWithNodeGrantIdRequest",
          "responseMessageName": "FindAllEnabledNodeClustersWithNodeGrantIdResponse",
          "code": "rpc findAllEnabledNodeClustersWithNodeGrantId (FindAllEnabledNodeClustersWithNodeGrantIdRequest) returns (FindAllEnabledNodeClustersWithNodeGrantIdResponse);",
          "doc": "查找使用某个认证的所有集群"
        },
        {
          "name": "findEnabledNodeClusterDNS",
          "requestMessageName": "FindEnabledNodeClusterDNSRequest",
          "responseMessageName": "FindEnabledNodeClusterDNSResponse",
          "code": "rpc findEnabledNodeClusterDNS (FindEnabledNodeClusterDNSRequest) returns (FindEnabledNodeClusterDNSResponse);",
          "doc": "查找集群的DNS配置"
        },
        {
          "name": "countAllEnabledNodeClustersWithDNSProviderId",
          "requestMessageName": "CountAllEnabledNodeClustersWithDNSProviderIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodeClustersWithDNSProviderId (CountAllEnabledNodeClustersWithDNSProviderIdRequest) returns (RPCCountResponse);",
          "doc": "计算使用某个DNS服务商的集群数量"
        },
        {
          "name": "countAllEnabledNodeClustersWithDNSDomainId",
          "requestMessageName": "CountAllEnabledNodeClustersWithDNSDomainIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodeClustersWithDNSDomainId (CountAllEnabledNodeClustersWithDNSDomainIdRequest) returns (RPCCountResponse);",
          "doc": "计算使用某个DNS域名的集群数量"
        },
        {
          "name": "findAllEnabledNodeClustersWithDNSDomainId",
          "requestMessageName": "FindAllEnabledNodeClustersWithDNSDomainIdRequest",
          "responseMessageName": "FindAllEnabledNodeClustersWithDNSDomainIdResponse",
          "code": "rpc findAllEnabledNodeClustersWithDNSDomainId (FindAllEnabledNodeClustersWithDNSDomainIdRequest) returns (FindAllEnabledNodeClustersWithDNSDomainIdResponse);",
          "doc": "查找使用某个域名的所有集群"
        },
        {
          "name": "checkNodeClusterDNSName",
          "requestMessageName": "CheckNodeClusterDNSNameRequest",
          "responseMessageName": "CheckNodeClusterDNSNameResponse",
          "code": "rpc checkNodeClusterDNSName (CheckNodeClusterDNSNameRequest) returns (CheckNodeClusterDNSNameResponse);",
          "doc": "检查集群域名是否已经被使用"
        },
        {
          "name": "updateNodeClusterDNS",
          "requestMessageName": "UpdateNodeClusterDNSRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeClusterDNS (UpdateNodeClusterDNSRequest) returns (RPCSuccess);",
          "doc": "修改集群的域名设置"
        },
        {
          "name": "checkNodeClusterDNSChanges",
          "requestMessageName": "CheckNodeClusterDNSChangesRequest",
          "responseMessageName": "CheckNodeClusterDNSChangesResponse",
          "code": "rpc checkNodeClusterDNSChanges (CheckNodeClusterDNSChangesRequest) returns (CheckNodeClusterDNSChangesResponse);",
          "doc": "检查集群的DNS是否有变化"
        },
        {
          "name": "findEnabledNodeClusterTOA",
          "requestMessageName": "FindEnabledNodeClusterTOARequest",
          "responseMessageName": "FindEnabledNodeClusterTOAResponse",
          "code": "rpc findEnabledNodeClusterTOA (FindEnabledNodeClusterTOARequest) returns (FindEnabledNodeClusterTOAResponse);",
          "doc": "查找集群的TOA配置"
        },
        {
          "name": "updateNodeClusterTOA",
          "requestMessageName": "UpdateNodeClusterTOARequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeClusterTOA (UpdateNodeClusterTOARequest) returns (RPCSuccess);",
          "doc": "修改集群的TOA设置"
        },
        {
          "name": "countAllEnabledNodeClustersWithHTTPCachePolicyId",
          "requestMessageName": "CountAllEnabledNodeClustersWithHTTPCachePolicyIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodeClustersWithHTTPCachePolicyId (CountAllEnabledNodeClustersWithHTTPCachePolicyIdRequest) returns (RPCCountResponse);",
          "doc": "计算使用某个缓存策略的集群数量"
        },
        {
          "name": "findAllEnabledNodeClustersWithHTTPCachePolicyId",
          "requestMessageName": "FindAllEnabledNodeClustersWithHTTPCachePolicyIdRequest",
          "responseMessageName": "FindAllEnabledNodeClustersWithHTTPCachePolicyIdResponse",
          "code": "rpc findAllEnabledNodeClustersWithHTTPCachePolicyId (FindAllEnabledNodeClustersWithHTTPCachePolicyIdRequest) returns (FindAllEnabledNodeClustersWithHTTPCachePolicyIdResponse);",
          "doc": "查找使用缓存策略的所有集群"
        },
        {
          "name": "countAllEnabledNodeClustersWithHTTPFirewallPolicyId",
          "requestMessageName": "CountAllEnabledNodeClustersWithHTTPFirewallPolicyIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodeClustersWithHTTPFirewallPolicyId (CountAllEnabledNodeClustersWithHTTPFirewallPolicyIdRequest) returns (RPCCountResponse);",
          "doc": "计算使用某个WAF策略的集群数量"
        },
        {
          "name": "findAllEnabledNodeClustersWithHTTPFirewallPolicyId",
          "requestMessageName": "FindAllEnabledNodeClustersWithHTTPFirewallPolicyIdRequest",
          "responseMessageName": "FindAllEnabledNodeClustersWithHTTPFirewallPolicyIdResponse",
          "code": "rpc findAllEnabledNodeClustersWithHTTPFirewallPolicyId (FindAllEnabledNodeClustersWithHTTPFirewallPolicyIdRequest) returns (FindAllEnabledNodeClustersWithHTTPFirewallPolicyIdResponse);",
          "doc": "查找使用某个WAF策略的所有集群"
        },
        {
          "name": "updateNodeClusterHTTPCachePolicyId",
          "requestMessageName": "UpdateNodeClusterHTTPCachePolicyIdRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeClusterHTTPCachePolicyId (UpdateNodeClusterHTTPCachePolicyIdRequest) returns (RPCSuccess);",
          "doc": "修改集群的缓存策略"
        },
        {
          "name": "updateNodeClusterHTTPFirewallPolicyId",
          "requestMessageName": "UpdateNodeClusterHTTPFirewallPolicyIdRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeClusterHTTPFirewallPolicyId (UpdateNodeClusterHTTPFirewallPolicyIdRequest) returns (RPCSuccess);",
          "doc": "修改集群的WAF策略"
        },
        {
          "name": "updateNodeClusterSystemService",
          "requestMessageName": "UpdateNodeClusterSystemServiceRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeClusterSystemService (UpdateNodeClusterSystemServiceRequest) returns (RPCSuccess);",
          "doc": "修改集群的系统服务设置"
        },
        {
          "name": "findNodeClusterSystemService",
          "requestMessageName": "FindNodeClusterSystemServiceRequest",
          "responseMessageName": "FindNodeClusterSystemServiceResponse",
          "code": "rpc findNodeClusterSystemService (FindNodeClusterSystemServiceRequest) returns (FindNodeClusterSystemServiceResponse);",
          "doc": "查找集群的系统服务设置"
        },
        {
          "name": "findFreePortInNodeCluster",
          "requestMessageName": "FindFreePortInNodeClusterRequest",
          "responseMessageName": "FindFreePortInNodeClusterResponse",
          "code": "rpc findFreePortInNodeCluster (FindFreePortInNodeClusterRequest) returns (FindFreePortInNodeClusterResponse);",
          "doc": "获取集群中可以使用的端口"
        },
        {
          "name": "checkPortIsUsingInNodeCluster",
          "requestMessageName": "CheckPortIsUsingInNodeClusterRequest",
          "responseMessageName": "CheckPortIsUsingInNodeClusterResponse",
          "code": "rpc checkPortIsUsingInNodeCluster (CheckPortIsUsingInNodeClusterRequest) returns (CheckPortIsUsingInNodeClusterResponse);",
          "doc": "检查端口是否已经被使用"
        },
        {
          "name": "findLatestNodeClusters",
          "requestMessageName": "FindLatestNodeClustersRequest",
          "responseMessageName": "FindLatestNodeClustersResponse",
          "code": "rpc findLatestNodeClusters (FindLatestNodeClustersRequest) returns (FindLatestNodeClustersResponse);",
          "doc": "查找最近访问的集群"
        },
        {
          "name": "findEnabledNodeClusterConfigInfo",
          "requestMessageName": "FindEnabledNodeClusterConfigInfoRequest",
          "responseMessageName": "FindEnabledNodeClusterConfigInfoResponse",
          "code": "rpc findEnabledNodeClusterConfigInfo (FindEnabledNodeClusterConfigInfoRequest) returns (FindEnabledNodeClusterConfigInfoResponse);",
          "doc": "取得集群的配置概要信息"
        },
        {
          "name": "updateNodeClusterPinned",
          "requestMessageName": "UpdateNodeClusterPinnedRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeClusterPinned(UpdateNodeClusterPinnedRequest) returns (RPCSuccess);",
          "doc": "设置集群是否置顶"
        },
        {
          "name": "findEnabledNodeClusterWebPPolicy",
          "requestMessageName": "FindEnabledNodeClusterWebPPolicyRequest",
          "responseMessageName": "FindEnabledNodeClusterWebPPolicyResponse",
          "code": "rpc findEnabledNodeClusterWebPPolicy(FindEnabledNodeClusterWebPPolicyRequest) returns (FindEnabledNodeClusterWebPPolicyResponse);",
          "doc": "读取集群WebP策略"
        },
        {
          "name": "updateNodeClusterWebPPolicy",
          "requestMessageName": "UpdateNodeClusterWebPPolicyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeClusterWebPPolicy(UpdateNodeClusterWebPPolicyRequest) returns (RPCSuccess);",
          "doc": "设置集群WebP策略"
        },
        {
          "name": "findNodeClusterDDoSProtection",
          "requestMessageName": "FindNodeClusterDDoSProtectionRequest",
          "responseMessageName": "FindNodeClusterDDoSProtectionResponse",
          "code": "rpc findNodeClusterDDoSProtection(FindNodeClusterDDoSProtectionRequest) returns (FindNodeClusterDDoSProtectionResponse);",
          "doc": "获取集群的DDoS设置"
        },
        {
          "name": "updateNodeClusterDDoSProtection",
          "requestMessageName": "UpdateNodeClusterDDoSProtectionRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeClusterDDoSProtection(UpdateNodeClusterDDoSProtectionRequest) returns (RPCSuccess);",
          "doc": "修改集群的DDoS设置"
        }
      ],
      "filename": "service_node_cluster.proto",
      "doc": ""
    },
    {
      "name": "NodeClusterFirewallActionService",
      "methods": [
        {
          "name": "createNodeClusterFirewallAction",
          "requestMessageName": "CreateNodeClusterFirewallActionRequest",
          "responseMessageName": "NodeClusterFirewallActionResponse",
          "code": "rpc createNodeClusterFirewallAction (CreateNodeClusterFirewallActionRequest) returns (NodeClusterFirewallActionResponse);",
          "doc": "创建动作"
        },
        {
          "name": "updateNodeClusterFirewallAction",
          "requestMessageName": "UpdateNodeClusterFirewallActionRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeClusterFirewallAction (UpdateNodeClusterFirewallActionRequest) returns (RPCSuccess);",
          "doc": "修改动作"
        },
        {
          "name": "deleteNodeClusterFirewallAction",
          "requestMessageName": "DeleteNodeClusterFirewallActionRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNodeClusterFirewallAction (DeleteNodeClusterFirewallActionRequest) returns (RPCSuccess);",
          "doc": "删除动作"
        },
        {
          "name": "findAllEnabledNodeClusterFirewallActions",
          "requestMessageName": "FindAllEnabledNodeClusterFirewallActionsRequest",
          "responseMessageName": "FindAllEnabledNodeClusterFirewallActionsResponse",
          "code": "rpc findAllEnabledNodeClusterFirewallActions (FindAllEnabledNodeClusterFirewallActionsRequest) returns (FindAllEnabledNodeClusterFirewallActionsResponse);",
          "doc": "查询集群的所有动作"
        },
        {
          "name": "findEnabledNodeClusterFirewallAction",
          "requestMessageName": "FindEnabledNodeClusterFirewallActionRequest",
          "responseMessageName": "FindEnabledNodeClusterFirewallActionResponse",
          "code": "rpc findEnabledNodeClusterFirewallAction (FindEnabledNodeClusterFirewallActionRequest) returns (FindEnabledNodeClusterFirewallActionResponse);",
          "doc": "查询单个动作"
        },
        {
          "name": "countAllEnabledNodeClusterFirewallActions",
          "requestMessageName": "CountAllEnabledNodeClusterFirewallActionsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodeClusterFirewallActions (CountAllEnabledNodeClusterFirewallActionsRequest) returns (RPCCountResponse);",
          "doc": "计算动作数量"
        }
      ],
      "filename": "service_node_cluster_firewall_action.proto",
      "doc": "防火墙动作服务"
    },
    {
      "name": "NodeClusterMetricItemService",
      "methods": [
        {
          "name": "enableNodeClusterMetricItem",
          "requestMessageName": "EnableNodeClusterMetricItemRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc enableNodeClusterMetricItem (EnableNodeClusterMetricItemRequest) returns (RPCSuccess);",
          "doc": "启用某个指标"
        },
        {
          "name": "disableNodeClusterMetricItem",
          "requestMessageName": "DisableNodeClusterMetricItemRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc disableNodeClusterMetricItem (DisableNodeClusterMetricItemRequest) returns (RPCSuccess);",
          "doc": "禁用某个指标"
        },
        {
          "name": "findAllNodeClusterMetricItems",
          "requestMessageName": "FindAllNodeClusterMetricItemsRequest",
          "responseMessageName": "FindAllNodeClusterMetricItemsResponse",
          "code": "rpc findAllNodeClusterMetricItems (FindAllNodeClusterMetricItemsRequest) returns (FindAllNodeClusterMetricItemsResponse);",
          "doc": "查找集群中所有指标"
        },
        {
          "name": "existsNodeClusterMetricItem",
          "requestMessageName": "ExistsNodeClusterMetricItemRequest",
          "responseMessageName": "RPCExists",
          "code": "rpc existsNodeClusterMetricItem (ExistsNodeClusterMetricItemRequest) returns (RPCExists);",
          "doc": "检查是否已添加某个指标"
        },
        {
          "name": "findAllNodeClustersWithMetricItemId",
          "requestMessageName": "FindAllNodeClustersWithMetricItemIdRequest",
          "responseMessageName": "FindAllNodeClustersWithMetricItemIdResponse",
          "code": "rpc findAllNodeClustersWithMetricItemId (FindAllNodeClustersWithMetricItemIdRequest) returns (FindAllNodeClustersWithMetricItemIdResponse);",
          "doc": "查找使用指标的集群"
        }
      ],
      "filename": "service_node_cluster_metric_item.proto",
      "doc": "集群指标"
    },
    {
      "name": "NodeGrantService",
      "methods": [
        {
          "name": "createNodeGrant",
          "requestMessageName": "CreateNodeGrantRequest",
          "responseMessageName": "CreateNodeGrantResponse",
          "code": "rpc createNodeGrant (CreateNodeGrantRequest) returns (CreateNodeGrantResponse);",
          "doc": "创建认证"
        },
        {
          "name": "updateNodeGrant",
          "requestMessageName": "UpdateNodeGrantRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeGrant (UpdateNodeGrantRequest) returns (RPCSuccess);",
          "doc": "修改认证"
        },
        {
          "name": "disableNodeGrant",
          "requestMessageName": "DisableNodeGrantRequest",
          "responseMessageName": "DisableNodeGrantResponse",
          "code": "rpc disableNodeGrant (DisableNodeGrantRequest) returns (DisableNodeGrantResponse);",
          "doc": "禁用认证"
        },
        {
          "name": "countAllEnabledNodeGrants",
          "requestMessageName": "CountAllEnabledNodeGrantsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodeGrants (CountAllEnabledNodeGrantsRequest) returns (RPCCountResponse);",
          "doc": "计算认证的数量"
        },
        {
          "name": "listEnabledNodeGrants",
          "requestMessageName": "ListEnabledNodeGrantsRequest",
          "responseMessageName": "ListEnabledNodeGrantsResponse",
          "code": "rpc listEnabledNodeGrants (ListEnabledNodeGrantsRequest) returns (ListEnabledNodeGrantsResponse);",
          "doc": "列出单页认证"
        },
        {
          "name": "findAllEnabledNodeGrants",
          "requestMessageName": "FindAllEnabledNodeGrantsRequest",
          "responseMessageName": "FindAllEnabledNodeGrantsResponse",
          "code": "rpc findAllEnabledNodeGrants (FindAllEnabledNodeGrantsRequest) returns (FindAllEnabledNodeGrantsResponse);",
          "doc": "列出所有认证"
        },
        {
          "name": "findEnabledNodeGrant",
          "requestMessageName": "FindEnabledNodeGrantRequest",
          "responseMessageName": "FindEnabledNodeGrantResponse",
          "code": "rpc findEnabledNodeGrant (FindEnabledNodeGrantRequest) returns (FindEnabledNodeGrantResponse);",
          "doc": "获取单个认证信息"
        },
        {
          "name": "testNodeGrant",
          "requestMessageName": "TestNodeGrantRequest",
          "responseMessageName": "TestNodeGrantResponse",
          "code": "rpc testNodeGrant (TestNodeGrantRequest) returns (TestNodeGrantResponse);",
          "doc": "测试连接"
        },
        {
          "name": "findSuggestNodeGrants",
          "requestMessageName": "FindSuggestNodeGrantsRequest",
          "responseMessageName": "FindSuggestNodeGrantsResponse",
          "code": "rpc findSuggestNodeGrants(FindSuggestNodeGrantsRequest) returns (FindSuggestNodeGrantsResponse);",
          "doc": "查找集群推荐的认证"
        }
      ],
      "filename": "service_node_grant.proto",
      "doc": ""
    },
    {
      "name": "NodeGroupService",
      "methods": [
        {
          "name": "createNodeGroup",
          "requestMessageName": "CreateNodeGroupRequest",
          "responseMessageName": "CreateNodeGroupResponse",
          "code": "rpc createNodeGroup (CreateNodeGroupRequest) returns (CreateNodeGroupResponse);",
          "doc": "创建分组"
        },
        {
          "name": "updateNodeGroup",
          "requestMessageName": "UpdateNodeGroupRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeGroup (UpdateNodeGroupRequest) returns (RPCSuccess);",
          "doc": "修改分组"
        },
        {
          "name": "deleteNodeGroup",
          "requestMessageName": "DeleteNodeGroupRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNodeGroup (DeleteNodeGroupRequest) returns (RPCSuccess);",
          "doc": "删除分组"
        },
        {
          "name": "findAllEnabledNodeGroupsWithNodeClusterId",
          "requestMessageName": "FindAllEnabledNodeGroupsWithNodeClusterIdRequest",
          "responseMessageName": "FindAllEnabledNodeGroupsWithNodeClusterIdResponse",
          "code": "rpc findAllEnabledNodeGroupsWithNodeClusterId (FindAllEnabledNodeGroupsWithNodeClusterIdRequest) returns (FindAllEnabledNodeGroupsWithNodeClusterIdResponse);",
          "doc": "查询所有分组"
        },
        {
          "name": "updateNodeGroupOrders",
          "requestMessageName": "UpdateNodeGroupOrdersRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeGroupOrders (UpdateNodeGroupOrdersRequest) returns (RPCSuccess);",
          "doc": "修改分组排序"
        },
        {
          "name": "findEnabledNodeGroup",
          "requestMessageName": "FindEnabledNodeGroupRequest",
          "responseMessageName": "FindEnabledNodeGroupResponse",
          "code": "rpc findEnabledNodeGroup (FindEnabledNodeGroupRequest) returns (FindEnabledNodeGroupResponse);",
          "doc": "查找单个分组信息"
        }
      ],
      "filename": "service_node_group.proto",
      "doc": "节点分组服务"
    },
    {
      "name": "NodeIPAddressService",
      "methods": [
        {
          "name": "createNodeIPAddress",
          "requestMessageName": "CreateNodeIPAddressRequest",
          "responseMessageName": "CreateNodeIPAddressResponse",
          "code": "rpc createNodeIPAddress (CreateNodeIPAddressRequest) returns (CreateNodeIPAddressResponse);",
          "doc": "创建IP地址"
        },
        {
          "name": "createNodeIPAddresses",
          "requestMessageName": "CreateNodeIPAddressesRequest",
          "responseMessageName": "CreateNodeIPAddressesResponse",
          "code": "rpc createNodeIPAddresses (CreateNodeIPAddressesRequest) returns (CreateNodeIPAddressesResponse);",
          "doc": "批量创建IP地址"
        },
        {
          "name": "updateNodeIPAddress",
          "requestMessageName": "UpdateNodeIPAddressRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeIPAddress (UpdateNodeIPAddressRequest) returns (RPCSuccess);",
          "doc": "修改IP地址"
        },
        {
          "name": "updateNodeIPAddressNodeId",
          "requestMessageName": "UpdateNodeIPAddressNodeIdRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeIPAddressNodeId (UpdateNodeIPAddressNodeIdRequest) returns (RPCSuccess);",
          "doc": "修改IP地址所属节点"
        },
        {
          "name": "disableNodeIPAddress",
          "requestMessageName": "DisableNodeIPAddressRequest",
          "responseMessageName": "DisableNodeIPAddressResponse",
          "code": "rpc disableNodeIPAddress (DisableNodeIPAddressRequest) returns (DisableNodeIPAddressResponse);",
          "doc": "禁用单个IP地址"
        },
        {
          "name": "disableAllNodeIPAddressesWithNodeId",
          "requestMessageName": "DisableAllNodeIPAddressesWithNodeIdRequest",
          "responseMessageName": "DisableAllNodeIPAddressesWithNodeIdResponse",
          "code": "rpc disableAllNodeIPAddressesWithNodeId (DisableAllNodeIPAddressesWithNodeIdRequest) returns (DisableAllNodeIPAddressesWithNodeIdResponse);",
          "doc": "禁用节点的所有IP地址"
        },
        {
          "name": "findEnabledNodeIPAddress",
          "requestMessageName": "FindEnabledNodeIPAddressRequest",
          "responseMessageName": "FindEnabledNodeIPAddressResponse",
          "code": "rpc findEnabledNodeIPAddress (FindEnabledNodeIPAddressRequest) returns (FindEnabledNodeIPAddressResponse);",
          "doc": "查找单个IP地址"
        },
        {
          "name": "findAllEnabledNodeIPAddressesWithNodeId",
          "requestMessageName": "FindAllEnabledNodeIPAddressesWithNodeIdRequest",
          "responseMessageName": "FindAllEnabledNodeIPAddressesWithNodeIdResponse",
          "code": "rpc findAllEnabledNodeIPAddressesWithNodeId (FindAllEnabledNodeIPAddressesWithNodeIdRequest) returns (FindAllEnabledNodeIPAddressesWithNodeIdResponse);",
          "doc": "查找节点的所有地址"
        },
        {
          "name": "countAllEnabledNodeIPAddresses",
          "requestMessageName": "CountAllEnabledNodeIPAddressesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodeIPAddresses(CountAllEnabledNodeIPAddressesRequest) returns (RPCCountResponse);",
          "doc": "计算IP地址数量"
        },
        {
          "name": "listEnabledNodeIPAddresses",
          "requestMessageName": "ListEnabledNodeIPAddressesRequest",
          "responseMessageName": "ListEnabledNodeIPAddressesResponse",
          "code": "rpc listEnabledNodeIPAddresses(ListEnabledNodeIPAddressesRequest) returns (ListEnabledNodeIPAddressesResponse);",
          "doc": "列出单页IP地址"
        },
        {
          "name": "updateNodeIPAddressIsUp",
          "requestMessageName": "UpdateNodeIPAddressIsUpRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeIPAddressIsUp(UpdateNodeIPAddressIsUpRequest) returns (RPCSuccess);",
          "doc": "设置上下线状态"
        },
        {
          "name": "restoreNodeIPAddressBackupIP",
          "requestMessageName": "RestoreNodeIPAddressBackupIPRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc restoreNodeIPAddressBackupIP(RestoreNodeIPAddressBackupIPRequest) returns (RPCSuccess);",
          "doc": "还原备用IP状态"
        }
      ],
      "filename": "service_node_ip_address.proto",
      "doc": ""
    },
    {
      "name": "NodeIPAddressLogService",
      "methods": [
        {
          "name": "countAllNodeIPAddressLogs",
          "requestMessageName": "CountAllNodeIPAddressLogsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllNodeIPAddressLogs(CountAllNodeIPAddressLogsRequest) returns (RPCCountResponse);",
          "doc": "计算日志数量"
        },
        {
          "name": "listNodeIPAddressLogs",
          "requestMessageName": "ListNodeIPAddressLogsRequest",
          "responseMessageName": "ListNodeIPAddressLogsResponse",
          "code": "rpc listNodeIPAddressLogs(ListNodeIPAddressLogsRequest) returns (ListNodeIPAddressLogsResponse);",
          "doc": "列出单页日志"
        }
      ],
      "filename": "service_node_ip_address_log.proto",
      "doc": "IP地址相关日志"
    },
    {
      "name": "NodeIPAddressThresholdService",
      "methods": [
        {
          "name": "createNodeIPAddressThreshold",
          "requestMessageName": "CreateNodeIPAddressThresholdRequest",
          "responseMessageName": "CreateNodeIPAddressThresholdResponse",
          "code": "rpc createNodeIPAddressThreshold(CreateNodeIPAddressThresholdRequest) returns (CreateNodeIPAddressThresholdResponse);",
          "doc": "创建阈值"
        },
        {
          "name": "updateNodeIPAddressThreshold",
          "requestMessageName": "UpdateNodeIPAddressThresholdRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeIPAddressThreshold(UpdateNodeIPAddressThresholdRequest) returns (RPCSuccess);",
          "doc": "修改阈值"
        },
        {
          "name": "deleteNodeIPAddressThreshold",
          "requestMessageName": "DeleteNodeIPAddressThresholdRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNodeIPAddressThreshold(DeleteNodeIPAddressThresholdRequest) returns (RPCSuccess);",
          "doc": "删除阈值"
        },
        {
          "name": "findAllEnabledNodeIPAddressThresholds",
          "requestMessageName": "FindAllEnabledNodeIPAddressThresholdsRequest",
          "responseMessageName": "FindAllEnabledNodeIPAddressThresholdsResponse",
          "code": "rpc findAllEnabledNodeIPAddressThresholds(FindAllEnabledNodeIPAddressThresholdsRequest) returns (FindAllEnabledNodeIPAddressThresholdsResponse);",
          "doc": "查找IP的所有阈值"
        },
        {
          "name": "countAllEnabledNodeIPAddressThresholds",
          "requestMessageName": "CountAllEnabledNodeIPAddressThresholdsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodeIPAddressThresholds(CountAllEnabledNodeIPAddressThresholdsRequest) returns (RPCCountResponse);",
          "doc": "计算IP阈值的数量"
        },
        {
          "name": "updateAllNodeIPAddressThresholds",
          "requestMessageName": "UpdateAllNodeIPAddressThresholdsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateAllNodeIPAddressThresholds(UpdateAllNodeIPAddressThresholdsRequest) returns (RPCSuccess);",
          "doc": "批量更新阈值"
        }
      ],
      "filename": "service_node_ip_address_threshold.proto",
      "doc": "IP阈值相关服务"
    },
    {
      "name": "NodeLogService",
      "methods": [
        {
          "name": "createNodeLogs",
          "requestMessageName": "CreateNodeLogsRequest",
          "responseMessageName": "CreateNodeLogsResponse",
          "code": "rpc createNodeLogs (CreateNodeLogsRequest) returns (CreateNodeLogsResponse);",
          "doc": "创建日志"
        },
        {
          "name": "countNodeLogs",
          "requestMessageName": "CountNodeLogsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countNodeLogs (CountNodeLogsRequest) returns (RPCCountResponse);",
          "doc": "查询日志数量"
        },
        {
          "name": "listNodeLogs",
          "requestMessageName": "ListNodeLogsRequest",
          "responseMessageName": "ListNodeLogsResponse",
          "code": "rpc listNodeLogs (ListNodeLogsRequest) returns (ListNodeLogsResponse);",
          "doc": "列出单页日志"
        },
        {
          "name": "fixNodeLogs",
          "requestMessageName": "FixNodeLogsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc fixNodeLogs (FixNodeLogsRequest) returns (RPCSuccess);",
          "doc": "设置日志为已修复"
        },
        {
          "name": "fixAllNodeLogs",
          "requestMessageName": "FixAllNodeLogsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc fixAllNodeLogs (FixAllNodeLogsRequest) returns (RPCSuccess);",
          "doc": "设置所有日志为已修复"
        },
        {
          "name": "countAllUnreadNodeLogs",
          "requestMessageName": "CountAllUnreadNodeLogsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllUnreadNodeLogs(CountAllUnreadNodeLogsRequest) returns (RPCCountResponse);",
          "doc": "计算未读的日志数量"
        },
        {
          "name": "updateNodeLogsRead",
          "requestMessageName": "UpdateNodeLogsReadRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeLogsRead(UpdateNodeLogsReadRequest) returns (RPCSuccess);",
          "doc": "设置日志为已读"
        },
        {
          "name": "updateAllNodeLogsRead",
          "requestMessageName": "UpdateAllNodeLogsReadRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateAllNodeLogsRead(UpdateAllNodeLogsReadRequest) returns (RPCSuccess);",
          "doc": "设置所有日志未已读"
        }
      ],
      "filename": "service_node_log.proto",
      "doc": "节点日志相关服务"
    },
    {
      "name": "NodeLoginService",
      "methods": [
        {
          "name": "findNodeLoginSuggestPorts",
          "requestMessageName": "FindNodeLoginSuggestPortsRequest",
          "responseMessageName": "FindNodeLoginSuggestPortsResponse",
          "code": "rpc findNodeLoginSuggestPorts(FindNodeLoginSuggestPortsRequest) returns (FindNodeLoginSuggestPortsResponse);",
          "doc": "读取建议的端口"
        }
      ],
      "filename": "service_node_login.proto",
      "doc": "节点登录相关"
    },
    {
      "name": "NodePriceItemService",
      "methods": [
        {
          "name": "createNodePriceItem",
          "requestMessageName": "CreateNodePriceItemRequest",
          "responseMessageName": "CreateNodePriceItemResponse",
          "code": "rpc createNodePriceItem (CreateNodePriceItemRequest) returns (CreateNodePriceItemResponse);",
          "doc": "创建区域价格"
        },
        {
          "name": "updateNodePriceItem",
          "requestMessageName": "UpdateNodePriceItemRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodePriceItem (UpdateNodePriceItemRequest) returns (RPCSuccess);",
          "doc": "修改区域价格"
        },
        {
          "name": "deleteNodePriceItem",
          "requestMessageName": "DeleteNodePriceItemRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNodePriceItem (DeleteNodePriceItemRequest) returns (RPCSuccess);",
          "doc": "删除区域价格"
        },
        {
          "name": "findAllEnabledNodePriceItems",
          "requestMessageName": "FindAllEnabledNodePriceItemsRequest",
          "responseMessageName": "FindAllEnabledNodePriceItemsResponse",
          "code": "rpc findAllEnabledNodePriceItems (FindAllEnabledNodePriceItemsRequest) returns (FindAllEnabledNodePriceItemsResponse);",
          "doc": "查找所有区域价格"
        },
        {
          "name": "findAllEnabledAndOnNodePriceItems",
          "requestMessageName": "FindAllEnabledAndOnNodePriceItemsRequest",
          "responseMessageName": "FindAllEnabledAndOnNodePriceItemsResponse",
          "code": "rpc findAllEnabledAndOnNodePriceItems (FindAllEnabledAndOnNodePriceItemsRequest) returns (FindAllEnabledAndOnNodePriceItemsResponse);",
          "doc": "查找所有启用的区域价格"
        },
        {
          "name": "findEnabledNodePriceItem",
          "requestMessageName": "FindEnabledNodePriceItemRequest",
          "responseMessageName": "FindEnabledNodePriceItemResponse",
          "code": "rpc findEnabledNodePriceItem (FindEnabledNodePriceItemRequest) returns (FindEnabledNodePriceItemResponse);",
          "doc": "查找单个区域信息"
        }
      ],
      "filename": "service_node_price_item.proto",
      "doc": "节点区域定价相关服务"
    },
    {
      "name": "NodeRegionService",
      "methods": [
        {
          "name": "createNodeRegion",
          "requestMessageName": "CreateNodeRegionRequest",
          "responseMessageName": "CreateNodeRegionResponse",
          "code": "rpc createNodeRegion (CreateNodeRegionRequest) returns (CreateNodeRegionResponse);",
          "doc": "创建区域"
        },
        {
          "name": "updateNodeRegion",
          "requestMessageName": "UpdateNodeRegionRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeRegion (UpdateNodeRegionRequest) returns (RPCSuccess);",
          "doc": "修改区域"
        },
        {
          "name": "deleteNodeRegion",
          "requestMessageName": "DeleteNodeRegionRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNodeRegion (DeleteNodeRegionRequest) returns (RPCSuccess);",
          "doc": "删除区域"
        },
        {
          "name": "findAllEnabledNodeRegions",
          "requestMessageName": "FindAllEnabledNodeRegionsRequest",
          "responseMessageName": "FindAllEnabledNodeRegionsResponse",
          "code": "rpc findAllEnabledNodeRegions (FindAllEnabledNodeRegionsRequest) returns (FindAllEnabledNodeRegionsResponse);",
          "doc": "查找所有区域"
        },
        {
          "name": "findAllEnabledAndOnNodeRegions",
          "requestMessageName": "FindAllEnabledAndOnNodeRegionsRequest",
          "responseMessageName": "FindAllEnabledAndOnNodeRegionsResponse",
          "code": "rpc findAllEnabledAndOnNodeRegions (FindAllEnabledAndOnNodeRegionsRequest) returns (FindAllEnabledAndOnNodeRegionsResponse);",
          "doc": "查找所有启用的区域"
        },
        {
          "name": "updateNodeRegionOrders",
          "requestMessageName": "UpdateNodeRegionOrdersRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeRegionOrders (UpdateNodeRegionOrdersRequest) returns (RPCSuccess);",
          "doc": "排序"
        },
        {
          "name": "findEnabledNodeRegion",
          "requestMessageName": "FindEnabledNodeRegionRequest",
          "responseMessageName": "FindEnabledNodeRegionResponse",
          "code": "rpc findEnabledNodeRegion (FindEnabledNodeRegionRequest) returns (FindEnabledNodeRegionResponse);",
          "doc": "查找单个区域信息"
        },
        {
          "name": "updateNodeRegionPrice",
          "requestMessageName": "UpdateNodeRegionPriceRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeRegionPrice (UpdateNodeRegionPriceRequest) returns (RPCSuccess);",
          "doc": "修改价格项价格"
        }
      ],
      "filename": "service_node_region.proto",
      "doc": "节点区域相关服务"
    },
    {
      "name": "NodeTaskService",
      "methods": [
        {
          "name": "findNodeTasks",
          "requestMessageName": "FindNodeTasksRequest",
          "responseMessageName": "FindNodeTasksResponse",
          "code": "rpc findNodeTasks (FindNodeTasksRequest) returns (FindNodeTasksResponse);",
          "doc": "获取单节点同步任务"
        },
        {
          "name": "reportNodeTaskDone",
          "requestMessageName": "ReportNodeTaskDoneRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc reportNodeTaskDone (ReportNodeTaskDoneRequest) returns (RPCSuccess);",
          "doc": "报告同步任务结果"
        },
        {
          "name": "findNodeClusterTasks",
          "requestMessageName": "FindNodeClusterTasksRequest",
          "responseMessageName": "FindNodeClusterTasksResponse",
          "code": "rpc findNodeClusterTasks (FindNodeClusterTasksRequest) returns (FindNodeClusterTasksResponse);",
          "doc": "获取所有正在同步的集群信息"
        },
        {
          "name": "existsNodeTasks",
          "requestMessageName": "ExistsNodeTasksRequest",
          "responseMessageName": "ExistsNodeTasksResponse",
          "code": "rpc existsNodeTasks (ExistsNodeTasksRequest) returns (ExistsNodeTasksResponse);",
          "doc": "检查是否有正在执行的任务"
        },
        {
          "name": "deleteNodeTask",
          "requestMessageName": "DeleteNodeTaskRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNodeTask (DeleteNodeTaskRequest) returns (RPCSuccess);",
          "doc": "删除任务"
        },
        {
          "name": "deleteNodeTasks",
          "requestMessageName": "DeleteNodeTasksRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNodeTasks (DeleteNodeTasksRequest) returns (RPCSuccess);",
          "doc": "批量删除任务"
        },
        {
          "name": "countDoingNodeTasks",
          "requestMessageName": "CountDoingNodeTasksRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countDoingNodeTasks (CountDoingNodeTasksRequest) returns (RPCCountResponse);",
          "doc": "计算正在执行的任务数量"
        },
        {
          "name": "findNotifyingNodeTasks",
          "requestMessageName": "FindNotifyingNodeTasksRequest",
          "responseMessageName": "FindNotifyingNodeTasksResponse",
          "code": "rpc findNotifyingNodeTasks (FindNotifyingNodeTasksRequest) returns (FindNotifyingNodeTasksResponse);",
          "doc": "查找需要通知的任务"
        },
        {
          "name": "updateNodeTasksNotified",
          "requestMessageName": "UpdateNodeTasksNotifiedRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeTasksNotified (UpdateNodeTasksNotifiedRequest) returns (RPCSuccess);",
          "doc": "设置任务已通知"
        }
      ],
      "filename": "service_node_task.proto",
      "doc": "节点同步任务相关服务"
    },
    {
      "name": "NodeThresholdService",
      "methods": [
        {
          "name": "createNodeThreshold",
          "requestMessageName": "CreateNodeThresholdRequest",
          "responseMessageName": "CreateNodeThresholdResponse",
          "code": "rpc createNodeThreshold (CreateNodeThresholdRequest) returns (CreateNodeThresholdResponse);",
          "doc": "创建阈值"
        },
        {
          "name": "updateNodeThreshold",
          "requestMessageName": "UpdateNodeThresholdRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNodeThreshold (UpdateNodeThresholdRequest) returns (RPCSuccess);",
          "doc": "修改阈值"
        },
        {
          "name": "deleteNodeThreshold",
          "requestMessageName": "DeleteNodeThresholdRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNodeThreshold (DeleteNodeThresholdRequest) returns (RPCSuccess);",
          "doc": "删除阈值"
        },
        {
          "name": "findAllEnabledNodeThresholds",
          "requestMessageName": "FindAllEnabledNodeThresholdsRequest",
          "responseMessageName": "FindAllEnabledNodeThresholdsResponse",
          "code": "rpc findAllEnabledNodeThresholds (FindAllEnabledNodeThresholdsRequest) returns (FindAllEnabledNodeThresholdsResponse);",
          "doc": "查询阈值"
        },
        {
          "name": "countAllEnabledNodeThresholds",
          "requestMessageName": "CountAllEnabledNodeThresholdsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNodeThresholds (CountAllEnabledNodeThresholdsRequest) returns (RPCCountResponse);",
          "doc": "计算阈值数量"
        },
        {
          "name": "findEnabledNodeThreshold",
          "requestMessageName": "FindEnabledNodeThresholdRequest",
          "responseMessageName": "FindEnabledNodeThresholdResponse",
          "code": "rpc findEnabledNodeThreshold (FindEnabledNodeThresholdRequest) returns (FindEnabledNodeThresholdResponse);",
          "doc": "查询单个阈值详情"
        }
      ],
      "filename": "service_node_threshold.proto",
      "doc": "节点阈值服务"
    },
    {
      "name": "NodeValueService",
      "methods": [
        {
          "name": "createNodeValue",
          "requestMessageName": "CreateNodeValueRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc createNodeValue (CreateNodeValueRequest) returns (RPCSuccess);",
          "doc": "记录数据"
        },
        {
          "name": "listNodeValues",
          "requestMessageName": "ListNodeValuesRequest",
          "responseMessageName": "ListNodeValuesResponse",
          "code": "rpc listNodeValues (ListNodeValuesRequest) returns (ListNodeValuesResponse);",
          "doc": "读取数据"
        },
        {
          "name": "sumAllNodeValueStats",
          "requestMessageName": "SumAllNodeValueStatsRequest",
          "responseMessageName": "SumAllNodeValueStatsResponse",
          "code": "rpc sumAllNodeValueStats(SumAllNodeValueStatsRequest) returns (SumAllNodeValueStatsResponse);",
          "doc": "读取所有节点的最新数据"
        }
      ],
      "filename": "service_node_value.proto",
      "doc": "节点指标数据服务"
    },
    {
      "name": "NSService",
      "methods": [
        {
          "name": "composeNSBoard",
          "requestMessageName": "ComposeNSBoardRequest",
          "responseMessageName": "ComposeNSBoardResponse",
          "code": "rpc composeNSBoard (ComposeNSBoardRequest) returns (ComposeNSBoardResponse);",
          "doc": "组合看板数据"
        }
      ],
      "filename": "service_ns.proto",
      "doc": "域名服务"
    },
    {
      "name": "NSAccessLogService",
      "methods": [
        {
          "name": "createNSAccessLogs",
          "requestMessageName": "CreateNSAccessLogsRequest",
          "responseMessageName": "CreateNSAccessLogsResponse",
          "code": "rpc createNSAccessLogs (CreateNSAccessLogsRequest) returns (CreateNSAccessLogsResponse);",
          "doc": "创建访问日志"
        },
        {
          "name": "listNSAccessLogs",
          "requestMessageName": "ListNSAccessLogsRequest",
          "responseMessageName": "ListNSAccessLogsResponse",
          "code": "rpc listNSAccessLogs (ListNSAccessLogsRequest) returns (ListNSAccessLogsResponse);",
          "doc": "列出单页访问日志"
        },
        {
          "name": "findNSAccessLog",
          "requestMessageName": "FindNSAccessLogRequest",
          "responseMessageName": "FindNSAccessLogResponse",
          "code": "rpc findNSAccessLog (FindNSAccessLogRequest) returns (FindNSAccessLogResponse);",
          "doc": "查找单个日志"
        }
      ],
      "filename": "service_ns_access_log.proto",
      "doc": "访问日志相关服务"
    },
    {
      "name": "NSClusterService",
      "methods": [
        {
          "name": "createNSCluster",
          "requestMessageName": "CreateNSClusterRequest",
          "responseMessageName": "CreateNSClusterResponse",
          "code": "rpc createNSCluster (CreateNSClusterRequest) returns (CreateNSClusterResponse);",
          "doc": "创建集群"
        },
        {
          "name": "updateNSCluster",
          "requestMessageName": "UpdateNSClusterRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSCluster (UpdateNSClusterRequest) returns (RPCSuccess);",
          "doc": "修改集群"
        },
        {
          "name": "findNSClusterAccessLog",
          "requestMessageName": "FindNSClusterAccessLogRequest",
          "responseMessageName": "FindNSClusterAccessLogResponse",
          "code": "rpc findNSClusterAccessLog (FindNSClusterAccessLogRequest) returns (FindNSClusterAccessLogResponse);",
          "doc": "查找集群访问日志配置"
        },
        {
          "name": "updateNSClusterAccessLog",
          "requestMessageName": "UpdateNSClusterAccessLogRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSClusterAccessLog (UpdateNSClusterAccessLogRequest) returns (RPCSuccess);",
          "doc": "修改集群访问日志配置"
        },
        {
          "name": "deleteNSCluster",
          "requestMessageName": "DeleteNSCluster",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNSCluster (DeleteNSCluster) returns (RPCSuccess);",
          "doc": "删除集群"
        },
        {
          "name": "findEnabledNSCluster",
          "requestMessageName": "FindEnabledNSClusterRequest",
          "responseMessageName": "FindEnabledNSClusterResponse",
          "code": "rpc findEnabledNSCluster (FindEnabledNSClusterRequest) returns (FindEnabledNSClusterResponse);",
          "doc": "查找单个可用集群信息"
        },
        {
          "name": "countAllEnabledNSClusters",
          "requestMessageName": "CountAllEnabledNSClustersRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNSClusters (CountAllEnabledNSClustersRequest) returns (RPCCountResponse);",
          "doc": "计算所有可用集群的数量"
        },
        {
          "name": "listEnabledNSClusters",
          "requestMessageName": "ListEnabledNSClustersRequest",
          "responseMessageName": "ListEnabledNSClustersResponse",
          "code": "rpc listEnabledNSClusters (ListEnabledNSClustersRequest) returns (ListEnabledNSClustersResponse);",
          "doc": "列出单页可用集群"
        },
        {
          "name": "findAllEnabledNSClusters",
          "requestMessageName": "FindAllEnabledNSClustersRequest",
          "responseMessageName": "FindAllEnabledNSClustersResponse",
          "code": "rpc findAllEnabledNSClusters (FindAllEnabledNSClustersRequest) returns (FindAllEnabledNSClustersResponse);",
          "doc": "查找所有可用集群"
        },
        {
          "name": "updateNSClusterRecursionConfig",
          "requestMessageName": "UpdateNSClusterRecursionConfigRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSClusterRecursionConfig(UpdateNSClusterRecursionConfigRequest) returns (RPCSuccess);",
          "doc": "设置递归DNS配置"
        },
        {
          "name": "findNSClusterRecursionConfig",
          "requestMessageName": "FindNSClusterRecursionConfigRequest",
          "responseMessageName": "FindNSClusterRecursionConfigResponse",
          "code": "rpc findNSClusterRecursionConfig(FindNSClusterRecursionConfigRequest) returns (FindNSClusterRecursionConfigResponse);",
          "doc": "读取递归DNS配置"
        }
      ],
      "filename": "service_ns_cluster.proto",
      "doc": "域名服务集群相关服务"
    },
    {
      "name": "NSDomainService",
      "methods": [
        {
          "name": "createNSDomain",
          "requestMessageName": "CreateNSDomainRequest",
          "responseMessageName": "CreateNSDomainResponse",
          "code": "rpc createNSDomain (CreateNSDomainRequest) returns (CreateNSDomainResponse);",
          "doc": "创建域名"
        },
        {
          "name": "updateNSDomain",
          "requestMessageName": "UpdateNSDomainRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSDomain (UpdateNSDomainRequest) returns (RPCSuccess);",
          "doc": "修改域名"
        },
        {
          "name": "deleteNSDomain",
          "requestMessageName": "DeleteNSDomainRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNSDomain (DeleteNSDomainRequest) returns (RPCSuccess);",
          "doc": "删除域名"
        },
        {
          "name": "findEnabledNSDomain",
          "requestMessageName": "FindEnabledNSDomainRequest",
          "responseMessageName": "FindEnabledNSDomainResponse",
          "code": "rpc findEnabledNSDomain (FindEnabledNSDomainRequest) returns (FindEnabledNSDomainResponse);",
          "doc": "查找单个域名"
        },
        {
          "name": "countAllEnabledNSDomains",
          "requestMessageName": "CountAllEnabledNSDomainsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNSDomains (CountAllEnabledNSDomainsRequest) returns (RPCCountResponse);",
          "doc": "计算域名数量"
        },
        {
          "name": "listEnabledNSDomains",
          "requestMessageName": "ListEnabledNSDomainsRequest",
          "responseMessageName": "ListEnabledNSDomainsResponse",
          "code": "rpc listEnabledNSDomains (ListEnabledNSDomainsRequest) returns (ListEnabledNSDomainsResponse);",
          "doc": "列出单页域名"
        },
        {
          "name": "listNSDomainsAfterVersion",
          "requestMessageName": "ListNSDomainsAfterVersionRequest",
          "responseMessageName": "ListNSDomainsAfterVersionResponse",
          "code": "rpc listNSDomainsAfterVersion (ListNSDomainsAfterVersionRequest) returns (ListNSDomainsAfterVersionResponse);",
          "doc": "根据版本列出一组域名"
        },
        {
          "name": "findEnabledNSDomainTSIG",
          "requestMessageName": "FindEnabledNSDomainTSIGRequest",
          "responseMessageName": "FindEnabledNSDomainTSIGResponse",
          "code": "rpc findEnabledNSDomainTSIG (FindEnabledNSDomainTSIGRequest) returns (FindEnabledNSDomainTSIGResponse);",
          "doc": "查找TSIG配置"
        },
        {
          "name": "updateNSDomainTSIG",
          "requestMessageName": "UpdateNSDomainTSIGRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSDomainTSIG (UpdateNSDomainTSIGRequest) returns (RPCSuccess);",
          "doc": "修改TSIG配置"
        }
      ],
      "filename": "service_ns_domain.proto",
      "doc": "域名相关服务"
    },
    {
      "name": "NSKeyService",
      "methods": [
        {
          "name": "createNSKey",
          "requestMessageName": "CreateNSKeyRequest",
          "responseMessageName": "CreateNSKeyResponse",
          "code": "rpc createNSKey (CreateNSKeyRequest) returns (CreateNSKeyResponse);",
          "doc": "创建密钥"
        },
        {
          "name": "updateNSKey",
          "requestMessageName": "UpdateNSKeyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSKey (UpdateNSKeyRequest) returns (RPCSuccess);",
          "doc": "修改密钥"
        },
        {
          "name": "deleteNSKey",
          "requestMessageName": "DeleteNSKeyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNSKey (DeleteNSKeyRequest) returns (RPCSuccess);",
          "doc": "删除密钥"
        },
        {
          "name": "findEnabledNSKey",
          "requestMessageName": "FindEnabledNSKeyRequest",
          "responseMessageName": "FindEnabledNSKeyResponse",
          "code": "rpc findEnabledNSKey (FindEnabledNSKeyRequest) returns (FindEnabledNSKeyResponse);",
          "doc": "查找单个密钥"
        },
        {
          "name": "countAllEnabledNSKeys",
          "requestMessageName": "CountAllEnabledNSKeysRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNSKeys (CountAllEnabledNSKeysRequest) returns (RPCCountResponse);",
          "doc": "计算密钥数量"
        },
        {
          "name": "listEnabledNSKeys",
          "requestMessageName": "ListEnabledNSKeysRequest",
          "responseMessageName": "ListEnabledNSKeysResponse",
          "code": "rpc listEnabledNSKeys (ListEnabledNSKeysRequest) returns (ListEnabledNSKeysResponse);",
          "doc": "列出单页密钥"
        },
        {
          "name": "listNSKeysAfterVersion",
          "requestMessageName": "ListNSKeysAfterVersionRequest",
          "responseMessageName": "ListNSKeysAfterVersionResponse",
          "code": "rpc listNSKeysAfterVersion (ListNSKeysAfterVersionRequest) returns (ListNSKeysAfterVersionResponse);",
          "doc": "根据版本列出一组密钥"
        }
      ],
      "filename": "service_ns_key.proto",
      "doc": "NS密钥相关服务"
    },
    {
      "name": "NSNodeService",
      "methods": [
        {
          "name": "findAllEnabledNSNodesWithNSClusterId",
          "requestMessageName": "FindAllEnabledNSNodesWithNSClusterIdRequest",
          "responseMessageName": "FindAllEnabledNSNodesWithNSClusterIdResponse",
          "code": "rpc findAllEnabledNSNodesWithNSClusterId (FindAllEnabledNSNodesWithNSClusterIdRequest) returns (FindAllEnabledNSNodesWithNSClusterIdResponse);",
          "doc": "根据集群查找所有节点"
        },
        {
          "name": "countAllEnabledNSNodes",
          "requestMessageName": "CountAllEnabledNSNodesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNSNodes (CountAllEnabledNSNodesRequest) returns (RPCCountResponse);",
          "doc": "所有可用的节点数量"
        },
        {
          "name": "countAllEnabledNSNodesMatch",
          "requestMessageName": "CountAllEnabledNSNodesMatchRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNSNodesMatch (CountAllEnabledNSNodesMatchRequest) returns (RPCCountResponse);",
          "doc": "计算匹配的节点数量"
        },
        {
          "name": "listEnabledNSNodesMatch",
          "requestMessageName": "ListEnabledNSNodesMatchRequest",
          "responseMessageName": "ListEnabledNSNodesMatchResponse",
          "code": "rpc listEnabledNSNodesMatch (ListEnabledNSNodesMatchRequest) returns (ListEnabledNSNodesMatchResponse);",
          "doc": "列出单页节点"
        },
        {
          "name": "countAllUpgradeNSNodesWithNSClusterId",
          "requestMessageName": "CountAllUpgradeNSNodesWithNSClusterIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllUpgradeNSNodesWithNSClusterId (CountAllUpgradeNSNodesWithNSClusterIdRequest) returns (RPCCountResponse);",
          "doc": "计算需要升级的节点数量"
        },
        {
          "name": "createNSNode",
          "requestMessageName": "CreateNSNodeRequest",
          "responseMessageName": "CreateNSNodeResponse",
          "code": "rpc createNSNode (CreateNSNodeRequest) returns (CreateNSNodeResponse);",
          "doc": "创建节点"
        },
        {
          "name": "deleteNSNode",
          "requestMessageName": "DeleteNSNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNSNode (DeleteNSNodeRequest) returns (RPCSuccess);",
          "doc": "删除节点"
        },
        {
          "name": "findEnabledNSNode",
          "requestMessageName": "FindEnabledNSNodeRequest",
          "responseMessageName": "FindEnabledNSNodeResponse",
          "code": "rpc findEnabledNSNode (FindEnabledNSNodeRequest) returns (FindEnabledNSNodeResponse);",
          "doc": "获取单个节点信息"
        },
        {
          "name": "updateNSNode",
          "requestMessageName": "UpdateNSNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSNode (UpdateNSNodeRequest) returns (RPCSuccess);",
          "doc": "修改节点"
        },
        {
          "name": "installNSNode",
          "requestMessageName": "InstallNSNodeRequest",
          "responseMessageName": "InstallNSNodeResponse",
          "code": "rpc installNSNode (InstallNSNodeRequest) returns (InstallNSNodeResponse);",
          "doc": "安装节点"
        },
        {
          "name": "findNSNodeInstallStatus",
          "requestMessageName": "FindNSNodeInstallStatusRequest",
          "responseMessageName": "FindNSNodeInstallStatusResponse",
          "code": "rpc findNSNodeInstallStatus (FindNSNodeInstallStatusRequest) returns (FindNSNodeInstallStatusResponse);",
          "doc": "读取节点安装状态"
        },
        {
          "name": "updateNSNodeIsInstalled",
          "requestMessageName": "UpdateNSNodeIsInstalledRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSNodeIsInstalled (UpdateNSNodeIsInstalledRequest) returns (RPCSuccess);",
          "doc": "修改节点安装状态"
        },
        {
          "name": "updateNSNodeStatus",
          "requestMessageName": "UpdateNSNodeStatusRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSNodeStatus (UpdateNSNodeStatusRequest) returns (RPCSuccess);",
          "doc": "更新节点状态"
        },
        {
          "name": "findCurrentNSNodeConfig",
          "requestMessageName": "FindCurrentNSNodeConfigRequest",
          "responseMessageName": "FindCurrentNSNodeConfigResponse",
          "code": "rpc findCurrentNSNodeConfig (FindCurrentNSNodeConfigRequest) returns (FindCurrentNSNodeConfigResponse);",
          "doc": "获取当前节点信息"
        },
        {
          "name": "checkNSNodeLatestVersion",
          "requestMessageName": "CheckNSNodeLatestVersionRequest",
          "responseMessageName": "CheckNSNodeLatestVersionResponse",
          "code": "rpc checkNSNodeLatestVersion (CheckNSNodeLatestVersionRequest) returns (CheckNSNodeLatestVersionResponse);",
          "doc": "检查新版本"
        },
        {
          "name": "downloadNSNodeInstallationFile",
          "requestMessageName": "DownloadNSNodeInstallationFileRequest",
          "responseMessageName": "DownloadNSNodeInstallationFileResponse",
          "code": "rpc downloadNSNodeInstallationFile (DownloadNSNodeInstallationFileRequest) returns (DownloadNSNodeInstallationFileResponse);",
          "doc": "下载最新DNS节点安装文件"
        },
        {
          "name": "sendCommandToNSNode",
          "requestMessageName": "NSNodeStreamMessage",
          "responseMessageName": "NSNodeStreamMessage",
          "code": "rpc sendCommandToNSNode (NSNodeStreamMessage) returns (NSNodeStreamMessage);",
          "doc": "向节点发送命令"
        },
        {
          "name": "updateNSNodeConnectedAPINodes",
          "requestMessageName": "UpdateNSNodeConnectedAPINodesRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSNodeConnectedAPINodes (UpdateNSNodeConnectedAPINodesRequest) returns (RPCSuccess);",
          "doc": "更改节点连接的API节点信息"
        },
        {
          "name": "updateNSNodeLogin",
          "requestMessageName": "UpdateNSNodeLoginRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSNodeLogin (UpdateNSNodeLoginRequest) returns (RPCSuccess);",
          "doc": "修改节点登录信息"
        },
        {
          "name": "startNSNode",
          "requestMessageName": "StartNSNodeRequest",
          "responseMessageName": "StartNSNodeResponse",
          "code": "rpc startNSNode (StartNSNodeRequest) returns (StartNSNodeResponse);",
          "doc": "启动节点"
        },
        {
          "name": "stopNSNode",
          "requestMessageName": "StopNSNodeRequest",
          "responseMessageName": "StopNSNodeResponse",
          "code": "rpc stopNSNode (StopNSNodeRequest) returns (StopNSNodeResponse);",
          "doc": "停止节点"
        }
      ],
      "filename": "service_ns_node.proto",
      "doc": "域名服务器节点服务"
    },
    {
      "name": "NSQuestionOptionService",
      "methods": [
        {
          "name": "createNSQuestionOption",
          "requestMessageName": "CreateNSQuestionOptionRequest",
          "responseMessageName": "CreateNSQuestionOptionResponse",
          "code": "rpc createNSQuestionOption(CreateNSQuestionOptionRequest) returns (CreateNSQuestionOptionResponse);",
          "doc": "创建选项"
        },
        {
          "name": "findNSQuestionOption",
          "requestMessageName": "FindNSQuestionOptionRequest",
          "responseMessageName": "FindNSQuestionOptionResponse",
          "code": "rpc findNSQuestionOption(FindNSQuestionOptionRequest) returns (FindNSQuestionOptionResponse);",
          "doc": "读取选项"
        },
        {
          "name": "deleteNSQuestionOption",
          "requestMessageName": "DeleteNSQuestionOptionRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNSQuestionOption(DeleteNSQuestionOptionRequest) returns (RPCSuccess);",
          "doc": "删除选项"
        }
      ],
      "filename": "service_ns_question_option.proto",
      "doc": "DNS查询选项"
    },
    {
      "name": "NSRecordService",
      "methods": [
        {
          "name": "createNSRecord",
          "requestMessageName": "CreateNSRecordRequest",
          "responseMessageName": "CreateNSRecordResponse",
          "code": "rpc createNSRecord (CreateNSRecordRequest) returns (CreateNSRecordResponse);",
          "doc": "创建记录"
        },
        {
          "name": "updateNSRecord",
          "requestMessageName": "UpdateNSRecordRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSRecord (UpdateNSRecordRequest) returns (RPCSuccess);",
          "doc": "修改记录"
        },
        {
          "name": "deleteNSRecord",
          "requestMessageName": "DeleteNSRecordRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNSRecord (DeleteNSRecordRequest) returns (RPCSuccess);",
          "doc": "删除记录"
        },
        {
          "name": "countAllEnabledNSRecords",
          "requestMessageName": "CountAllEnabledNSRecordsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledNSRecords (CountAllEnabledNSRecordsRequest) returns (RPCCountResponse);",
          "doc": "计算记录数量"
        },
        {
          "name": "listEnabledNSRecords",
          "requestMessageName": "ListEnabledNSRecordsRequest",
          "responseMessageName": "ListEnabledNSRecordsResponse",
          "code": "rpc listEnabledNSRecords (ListEnabledNSRecordsRequest) returns (ListEnabledNSRecordsResponse);",
          "doc": "读取单页记录"
        },
        {
          "name": "findEnabledNSRecord",
          "requestMessageName": "FindEnabledNSRecordRequest",
          "responseMessageName": "FindEnabledNSRecordResponse",
          "code": "rpc findEnabledNSRecord (FindEnabledNSRecordRequest) returns (FindEnabledNSRecordResponse);",
          "doc": "查询单个记录信息"
        },
        {
          "name": "listNSRecordsAfterVersion",
          "requestMessageName": "ListNSRecordsAfterVersionRequest",
          "responseMessageName": "ListNSRecordsAfterVersionResponse",
          "code": "rpc listNSRecordsAfterVersion (ListNSRecordsAfterVersionRequest) returns (ListNSRecordsAfterVersionResponse);",
          "doc": "根据版本列出一组记录"
        }
      ],
      "filename": "service_ns_record.proto",
      "doc": "域名记录相关服务"
    },
    {
      "name": "NSRecordHourlyStatService",
      "methods": [
        {
          "name": "uploadNSRecordHourlyStats",
          "requestMessageName": "UploadNSRecordHourlyStatsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc uploadNSRecordHourlyStats (UploadNSRecordHourlyStatsRequest) returns (RPCSuccess);",
          "doc": "上传统计"
        }
      ],
      "filename": "service_ns_record_hourly_stat.proto",
      "doc": "NS记录小时统计"
    },
    {
      "name": "NSRouteService",
      "methods": [
        {
          "name": "createNSRoute",
          "requestMessageName": "CreateNSRouteRequest",
          "responseMessageName": "CreateNSRouteResponse",
          "code": "rpc createNSRoute (CreateNSRouteRequest) returns (CreateNSRouteResponse);",
          "doc": "创建线路"
        },
        {
          "name": "updateNSRoute",
          "requestMessageName": "UpdateNSRouteRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSRoute (UpdateNSRouteRequest) returns (RPCSuccess);",
          "doc": "修改线路"
        },
        {
          "name": "deleteNSRoute",
          "requestMessageName": "DeleteNSRouteRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteNSRoute (DeleteNSRouteRequest) returns (RPCSuccess);",
          "doc": "删除线路"
        },
        {
          "name": "findEnabledNSRoute",
          "requestMessageName": "FindEnabledNSRouteRequest",
          "responseMessageName": "FindEnabledNSRouteResponse",
          "code": "rpc findEnabledNSRoute (FindEnabledNSRouteRequest) returns (FindEnabledNSRouteResponse);",
          "doc": "获取单个路线信息"
        },
        {
          "name": "findAllEnabledNSRoutes",
          "requestMessageName": "FindAllEnabledNSRoutesRequest",
          "responseMessageName": "FindAllEnabledNSRoutesResponse",
          "code": "rpc findAllEnabledNSRoutes (FindAllEnabledNSRoutesRequest) returns (FindAllEnabledNSRoutesResponse);",
          "doc": "读取所有线路"
        },
        {
          "name": "updateNSRouteOrders",
          "requestMessageName": "UpdateNSRouteOrdersRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateNSRouteOrders (UpdateNSRouteOrdersRequest) returns (RPCSuccess);",
          "doc": "设置线路排序"
        },
        {
          "name": "listNSRoutesAfterVersion",
          "requestMessageName": "ListNSRoutesAfterVersionRequest",
          "responseMessageName": "ListNSRoutesAfterVersionResponse",
          "code": "rpc listNSRoutesAfterVersion (ListNSRoutesAfterVersionRequest) returns (ListNSRoutesAfterVersionResponse);",
          "doc": "根据版本列出一组线路"
        }
      ],
      "filename": "service_ns_route.proto",
      "doc": "线路相关服务"
    },
    {
      "name": "OriginService",
      "methods": [
        {
          "name": "createOrigin",
          "requestMessageName": "CreateOriginRequest",
          "responseMessageName": "CreateOriginResponse",
          "code": "rpc createOrigin (CreateOriginRequest) returns (CreateOriginResponse);",
          "doc": "创建源站"
        },
        {
          "name": "updateOrigin",
          "requestMessageName": "UpdateOriginRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateOrigin (UpdateOriginRequest) returns (RPCSuccess);",
          "doc": "修改源站"
        },
        {
          "name": "findEnabledOrigin",
          "requestMessageName": "FindEnabledOriginRequest",
          "responseMessageName": "FindEnabledOriginResponse",
          "code": "rpc findEnabledOrigin (FindEnabledOriginRequest) returns (FindEnabledOriginResponse);",
          "doc": "查找单个源站信息"
        },
        {
          "name": "findEnabledOriginConfig",
          "requestMessageName": "FindEnabledOriginConfigRequest",
          "responseMessageName": "FindEnabledOriginConfigResponse",
          "code": "rpc findEnabledOriginConfig (FindEnabledOriginConfigRequest) returns (FindEnabledOriginConfigResponse);",
          "doc": "查找源站配置"
        }
      ],
      "filename": "service_origin.proto",
      "doc": ""
    },
    {
      "name": "PlanService",
      "methods": [
        {
          "name": "createPlan",
          "requestMessageName": "CreatePlanRequest",
          "responseMessageName": "CreatePlanResponse",
          "code": "rpc createPlan(CreatePlanRequest) returns (CreatePlanResponse);",
          "doc": "创建套餐"
        },
        {
          "name": "updatePlan",
          "requestMessageName": "UpdatePlanRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updatePlan(UpdatePlanRequest) returns (RPCSuccess);",
          "doc": "修改套餐"
        },
        {
          "name": "deletePlan",
          "requestMessageName": "DeletePlanRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deletePlan(DeletePlanRequest) returns (RPCSuccess);",
          "doc": "删除套餐"
        },
        {
          "name": "findEnabledPlan",
          "requestMessageName": "FindEnabledPlanRequest",
          "responseMessageName": "FindEnabledPlanResponse",
          "code": "rpc findEnabledPlan(FindEnabledPlanRequest) returns (FindEnabledPlanResponse);",
          "doc": "查找单个套餐"
        },
        {
          "name": "countAllEnabledPlans",
          "requestMessageName": "CountAllEnabledPlansRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledPlans(CountAllEnabledPlansRequest) returns (RPCCountResponse);",
          "doc": "计算套餐数量"
        },
        {
          "name": "listEnabledPlans",
          "requestMessageName": "ListEnabledPlansRequest",
          "responseMessageName": "ListEnabledPlansResponse",
          "code": "rpc listEnabledPlans(ListEnabledPlansRequest) returns (ListEnabledPlansResponse);",
          "doc": "列出单页套餐"
        },
        {
          "name": "sortPlans",
          "requestMessageName": "SortPlansRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc sortPlans(SortPlansRequest) returns (RPCSuccess);",
          "doc": "对套餐进行排序"
        }
      ],
      "filename": "service_plan.proto",
      "doc": "套餐相关服务"
    },
    {
      "name": "RegionCityService",
      "methods": [
        {
          "name": "findAllEnabledRegionCities",
          "requestMessageName": "FindAllEnabledRegionCitiesRequest",
          "responseMessageName": "FindAllEnabledRegionCitiesResponse",
          "code": "rpc findAllEnabledRegionCities (FindAllEnabledRegionCitiesRequest) returns (FindAllEnabledRegionCitiesResponse);",
          "doc": "查找所有城市"
        },
        {
          "name": "findEnabledRegionCity",
          "requestMessageName": "FindEnabledRegionCityRequest",
          "responseMessageName": "FindEnabledRegionCityResponse",
          "code": "rpc findEnabledRegionCity (FindEnabledRegionCityRequest) returns (FindEnabledRegionCityResponse);",
          "doc": "查找单个城市信息"
        }
      ],
      "filename": "service_region_city.proto",
      "doc": "城市相关服务"
    },
    {
      "name": "RegionCountryService",
      "methods": [
        {
          "name": "findAllEnabledRegionCountries",
          "requestMessageName": "FindAllEnabledRegionCountriesRequest",
          "responseMessageName": "FindAllEnabledRegionCountriesResponse",
          "code": "rpc findAllEnabledRegionCountries (FindAllEnabledRegionCountriesRequest) returns (FindAllEnabledRegionCountriesResponse);",
          "doc": "查找所有的国家列表"
        },
        {
          "name": "findEnabledRegionCountry",
          "requestMessageName": "FindEnabledRegionCountryRequest",
          "responseMessageName": "FindEnabledRegionCountryResponse",
          "code": "rpc findEnabledRegionCountry (FindEnabledRegionCountryRequest) returns (FindEnabledRegionCountryResponse);",
          "doc": "查找单个国家信息"
        }
      ],
      "filename": "service_region_country.proto",
      "doc": "国家相关服务"
    },
    {
      "name": "RegionProviderService",
      "methods": [
        {
          "name": "findAllEnabledRegionProviders",
          "requestMessageName": "FindAllEnabledRegionProvidersRequest",
          "responseMessageName": "FindAllEnabledRegionProvidersResponse",
          "code": "rpc findAllEnabledRegionProviders (FindAllEnabledRegionProvidersRequest) returns (FindAllEnabledRegionProvidersResponse);",
          "doc": "查找所有ISP"
        },
        {
          "name": "findEnabledRegionProvider",
          "requestMessageName": "FindEnabledRegionProviderRequest",
          "responseMessageName": "FindEnabledRegionProviderResponse",
          "code": "rpc findEnabledRegionProvider (FindEnabledRegionProviderRequest) returns (FindEnabledRegionProviderResponse);",
          "doc": "查找单个ISP信息"
        }
      ],
      "filename": "service_region_provider.proto",
      "doc": "ISP相关服务"
    },
    {
      "name": "RegionProvinceService",
      "methods": [
        {
          "name": "findAllEnabledRegionProvincesWithCountryId",
          "requestMessageName": "FindAllEnabledRegionProvincesWithCountryIdRequest",
          "responseMessageName": "FindAllEnabledRegionProvincesWithCountryIdResponse",
          "code": "rpc findAllEnabledRegionProvincesWithCountryId (FindAllEnabledRegionProvincesWithCountryIdRequest) returns (FindAllEnabledRegionProvincesWithCountryIdResponse);",
          "doc": "查找所有省份"
        },
        {
          "name": "findEnabledRegionProvince",
          "requestMessageName": "FindEnabledRegionProvinceRequest",
          "responseMessageName": "FindEnabledRegionProvinceResponse",
          "code": "rpc findEnabledRegionProvince (FindEnabledRegionProvinceRequest) returns (FindEnabledRegionProvinceResponse);",
          "doc": "查找单个省份信息"
        }
      ],
      "filename": "service_region_province.proto",
      "doc": "省份相关服务"
    },
    {
      "name": "ReportNodeService",
      "methods": [
        {
          "name": "createReportNode",
          "requestMessageName": "CreateReportNodeRequest",
          "responseMessageName": "CreateReportNodeResponse",
          "code": "rpc createReportNode(CreateReportNodeRequest) returns (CreateReportNodeResponse);",
          "doc": "添加终端"
        },
        {
          "name": "deleteReportNode",
          "requestMessageName": "DeleteReportNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteReportNode(DeleteReportNodeRequest) returns (RPCSuccess);",
          "doc": "删除终端"
        },
        {
          "name": "updateReportNode",
          "requestMessageName": "UpdateReportNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateReportNode(UpdateReportNodeRequest) returns (RPCSuccess);",
          "doc": "修改终端"
        },
        {
          "name": "countAllEnabledReportNodes",
          "requestMessageName": "CountAllEnabledReportNodesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledReportNodes(CountAllEnabledReportNodesRequest) returns (RPCCountResponse);",
          "doc": "计算终端数量"
        },
        {
          "name": "listEnabledReportNodes",
          "requestMessageName": "ListEnabledReportNodesRequest",
          "responseMessageName": "ListEnabledReportNodesResponse",
          "code": "rpc listEnabledReportNodes(ListEnabledReportNodesRequest) returns (ListEnabledReportNodesResponse);",
          "doc": "列出单页终端"
        },
        {
          "name": "findEnabledReportNode",
          "requestMessageName": "FindEnabledReportNodeRequest",
          "responseMessageName": "FindEnabledReportNodeResponse",
          "code": "rpc findEnabledReportNode(FindEnabledReportNodeRequest) returns (FindEnabledReportNodeResponse);",
          "doc": "查找单个终端"
        },
        {
          "name": "updateReportNodeStatus",
          "requestMessageName": "UpdateReportNodeStatusRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateReportNodeStatus (UpdateReportNodeStatusRequest) returns (RPCSuccess);",
          "doc": "更新节点状态"
        },
        {
          "name": "findCurrentReportNodeConfig",
          "requestMessageName": "FindCurrentReportNodeConfigRequest",
          "responseMessageName": "FindCurrentReportNodeConfigResponse",
          "code": "rpc findCurrentReportNodeConfig (FindCurrentReportNodeConfigRequest) returns (FindCurrentReportNodeConfigResponse);",
          "doc": "获取当前节点信息"
        },
        {
          "name": "findReportNodeTasks",
          "requestMessageName": "FindReportNodeTasksRequest",
          "responseMessageName": "FindReportNodeTasksResponse",
          "code": "rpc findReportNodeTasks(FindReportNodeTasksRequest) returns (FindReportNodeTasksResponse);",
          "doc": "读取任务"
        },
        {
          "name": "findLatestReportNodeVersion",
          "requestMessageName": "FindLatestReportNodeVersionRequest",
          "responseMessageName": "FindLatestReportNodeVersionResponse",
          "code": "rpc findLatestReportNodeVersion(FindLatestReportNodeVersionRequest) returns (FindLatestReportNodeVersionResponse);",
          "doc": "取得最新的版本号"
        },
        {
          "name": "countAllReportNodeTasks",
          "requestMessageName": "CountAllReportNodeTasksRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllReportNodeTasks(CountAllReportNodeTasksRequest) returns (RPCCountResponse);",
          "doc": "计算任务数量"
        },
        {
          "name": "listReportNodeTasks",
          "requestMessageName": "ListReportNodeTasksRequest",
          "responseMessageName": "ListReportNodeTasksResponse",
          "code": "rpc listReportNodeTasks(ListReportNodeTasksRequest) returns (ListReportNodeTasksResponse);",
          "doc": "列出单页任务"
        },
        {
          "name": "updateReportNodeGlobalSetting",
          "requestMessageName": "UpdateReportNodeGlobalSetting",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateReportNodeGlobalSetting(UpdateReportNodeGlobalSetting) returns (RPCSuccess);",
          "doc": "修改全局设置"
        },
        {
          "name": "readReportNodeGlobalSetting",
          "requestMessageName": "ReadReportNodeGlobalSettingRequest",
          "responseMessageName": "ReadReportNodeGlobalSettingResponse",
          "code": "rpc readReportNodeGlobalSetting(ReadReportNodeGlobalSettingRequest) returns (ReadReportNodeGlobalSettingResponse);",
          "doc": "读取全局设置"
        }
      ],
      "filename": "service_report_node.proto",
      "doc": "监控终端服务"
    },
    {
      "name": "ReportNodeGroupService",
      "methods": [
        {
          "name": "createReportNodeGroup",
          "requestMessageName": "CreateReportNodeGroupRequest",
          "responseMessageName": "CreateReportNodeGroupResponse",
          "code": "rpc createReportNodeGroup(CreateReportNodeGroupRequest) returns (CreateReportNodeGroupResponse);",
          "doc": "创建分组"
        },
        {
          "name": "updateReportNodeGroup",
          "requestMessageName": "UpdateReportNodeGroupRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateReportNodeGroup(UpdateReportNodeGroupRequest) returns (RPCSuccess);",
          "doc": "修改分组"
        },
        {
          "name": "deleteReportNodeGroup",
          "requestMessageName": "DeleteReportNodeGroupRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteReportNodeGroup(DeleteReportNodeGroupRequest) returns (RPCSuccess);",
          "doc": "删除分组"
        },
        {
          "name": "findAllEnabledReportNodeGroups",
          "requestMessageName": "FindAllEnabledReportNodeGroupsRequest",
          "responseMessageName": "FindAllEnabledReportNodeGroupsResponse",
          "code": "rpc findAllEnabledReportNodeGroups(FindAllEnabledReportNodeGroupsRequest) returns (FindAllEnabledReportNodeGroupsResponse);",
          "doc": "查找所有分组"
        },
        {
          "name": "findEnabledReportNodeGroup",
          "requestMessageName": "FindEnabledReportNodeGroupRequest",
          "responseMessageName": "FindEnabledReportNodeGroupResponse",
          "code": "rpc findEnabledReportNodeGroup(FindEnabledReportNodeGroupRequest) returns (FindEnabledReportNodeGroupResponse);",
          "doc": "查找单个分组"
        },
        {
          "name": "countAllEnabledReportNodeGroups",
          "requestMessageName": "CountAllEnabledReportNodeGroupsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledReportNodeGroups(CountAllEnabledReportNodeGroupsRequest) returns (RPCCountResponse);",
          "doc": "计算所有分组数量"
        }
      ],
      "filename": "service_report_node_group.proto",
      "doc": "监控节点分组"
    },
    {
      "name": "ReportResultService",
      "methods": [
        {
          "name": "countAllReportResults",
          "requestMessageName": "CountAllReportResultsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllReportResults(CountAllReportResultsRequest) returns (RPCCountResponse);",
          "doc": "计算监控结果数量"
        },
        {
          "name": "listReportResults",
          "requestMessageName": "ListReportResultsRequest",
          "responseMessageName": "ListReportResultsResponse",
          "code": "rpc listReportResults(ListReportResultsRequest) returns (ListReportResultsResponse);",
          "doc": "列出单页监控结果"
        },
        {
          "name": "updateReportResults",
          "requestMessageName": "UpdateReportResultsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateReportResults(UpdateReportResultsRequest) returns (RPCSuccess);",
          "doc": "上传报告结果"
        },
        {
          "name": "findAllReportResults",
          "requestMessageName": "FindAllReportResultsRequest",
          "responseMessageName": "FindAllReportResultsResponse",
          "code": "rpc findAllReportResults(FindAllReportResultsRequest) returns (FindAllReportResultsResponse);",
          "doc": "查询某个对象的监控结果"
        }
      ],
      "filename": "service_report_result.proto",
      "doc": "区域监控报告结果"
    },
    {
      "name": "ReverseProxyService",
      "methods": [
        {
          "name": "createReverseProxy",
          "requestMessageName": "CreateReverseProxyRequest",
          "responseMessageName": "CreateReverseProxyResponse",
          "code": "rpc createReverseProxy (CreateReverseProxyRequest) returns (CreateReverseProxyResponse);",
          "doc": "创建反向代理"
        },
        {
          "name": "findEnabledReverseProxy",
          "requestMessageName": "FindEnabledReverseProxyRequest",
          "responseMessageName": "FindEnabledReverseProxyResponse",
          "code": "rpc findEnabledReverseProxy (FindEnabledReverseProxyRequest) returns (FindEnabledReverseProxyResponse);",
          "doc": "查找反向代理"
        },
        {
          "name": "findEnabledReverseProxyConfig",
          "requestMessageName": "FindEnabledReverseProxyConfigRequest",
          "responseMessageName": "FindEnabledReverseProxyConfigResponse",
          "code": "rpc findEnabledReverseProxyConfig (FindEnabledReverseProxyConfigRequest) returns (FindEnabledReverseProxyConfigResponse);",
          "doc": "查找反向代理配置"
        },
        {
          "name": "updateReverseProxyScheduling",
          "requestMessageName": "UpdateReverseProxySchedulingRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateReverseProxyScheduling (UpdateReverseProxySchedulingRequest) returns (RPCSuccess);",
          "doc": "修改反向代理的调度算法"
        },
        {
          "name": "updateReverseProxyPrimaryOrigins",
          "requestMessageName": "UpdateReverseProxyPrimaryOriginsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateReverseProxyPrimaryOrigins (UpdateReverseProxyPrimaryOriginsRequest) returns (RPCSuccess);",
          "doc": "修改主要源站信息"
        },
        {
          "name": "updateReverseProxyBackupOrigins",
          "requestMessageName": "UpdateReverseProxyBackupOriginsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateReverseProxyBackupOrigins (UpdateReverseProxyBackupOriginsRequest) returns (RPCSuccess);",
          "doc": "修改备用源站信息"
        },
        {
          "name": "updateReverseProxy",
          "requestMessageName": "UpdateReverseProxyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateReverseProxy (UpdateReverseProxyRequest) returns (RPCSuccess);",
          "doc": "修改反向代理设置"
        }
      ],
      "filename": "service_reverse_proxy.proto",
      "doc": ""
    },
    {
      "name": "ScriptService",
      "methods": [
        {
          "name": "createScript",
          "requestMessageName": "CreateScriptRequest",
          "responseMessageName": "CreateScriptResponse",
          "code": "rpc createScript(CreateScriptRequest) returns (CreateScriptResponse);",
          "doc": "添加脚本"
        },
        {
          "name": "deleteScript",
          "requestMessageName": "DeleteScriptRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteScript(DeleteScriptRequest) returns (RPCSuccess);",
          "doc": "删除脚本"
        },
        {
          "name": "countAllEnabledScripts",
          "requestMessageName": "CountAllEnabledScriptsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledScripts(CountAllEnabledScriptsRequest) returns (RPCCountResponse);",
          "doc": "计算脚本数量"
        },
        {
          "name": "listEnabledScripts",
          "requestMessageName": "ListEnabledScriptsRequest",
          "responseMessageName": "ListEnabledScriptsResponse",
          "code": "rpc listEnabledScripts(ListEnabledScriptsRequest) returns (ListEnabledScriptsResponse);",
          "doc": "列出单页脚本"
        },
        {
          "name": "publishScripts",
          "requestMessageName": "PublishScriptsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc publishScripts(PublishScriptsRequest) returns (RPCSuccess);",
          "doc": "发布脚本"
        },
        {
          "name": "checkScriptUpdates",
          "requestMessageName": "CheckScriptUpdatesRequest",
          "responseMessageName": "CheckScriptUpdatesResponse",
          "code": "rpc checkScriptUpdates(CheckScriptUpdatesRequest) returns (CheckScriptUpdatesResponse);",
          "doc": "检查脚本是否需要有更新"
        },
        {
          "name": "findEnabledScript",
          "requestMessageName": "FindEnabledScriptRequest",
          "responseMessageName": "FindEnabledScriptResponse",
          "code": "rpc findEnabledScript(FindEnabledScriptRequest) returns (FindEnabledScriptResponse);",
          "doc": "查找单个脚本"
        },
        {
          "name": "updateScript",
          "requestMessageName": "UpdateScriptRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateScript(UpdateScriptRequest) returns (RPCSuccess);",
          "doc": "修改脚本"
        },
        {
          "name": "composeScriptConfigs",
          "requestMessageName": "ComposeScriptConfigsRequest",
          "responseMessageName": "ComposeScriptConfigsResponse",
          "code": "rpc composeScriptConfigs(ComposeScriptConfigsRequest) returns (ComposeScriptConfigsResponse);",
          "doc": "组合脚本配置"
        }
      ],
      "filename": "service_script.proto",
      "doc": "脚本相关服务"
    },
    {
      "name": "ServerService",
      "methods": [
        {
          "name": "createServer",
          "requestMessageName": "CreateServerRequest",
          "responseMessageName": "CreateServerResponse",
          "code": "rpc createServer (CreateServerRequest) returns (CreateServerResponse);",
          "doc": "创建服务"
        },
        {
          "name": "updateServerBasic",
          "requestMessageName": "UpdateServerBasicRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerBasic (UpdateServerBasicRequest) returns (RPCSuccess);",
          "doc": "修改服务基本信息"
        },
        {
          "name": "updateServerIsOn",
          "requestMessageName": "UpdateServerIsOnRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerIsOn (UpdateServerIsOnRequest) returns (RPCSuccess);",
          "doc": "修改服务是否启用"
        },
        {
          "name": "updateServerHTTP",
          "requestMessageName": "UpdateServerHTTPRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerHTTP (UpdateServerHTTPRequest) returns (RPCSuccess);",
          "doc": "修改服务的HTTP设置"
        },
        {
          "name": "updateServerHTTPS",
          "requestMessageName": "UpdateServerHTTPSRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerHTTPS (UpdateServerHTTPSRequest) returns (RPCSuccess);",
          "doc": "修改服务的HTTPS设置"
        },
        {
          "name": "updateServerTCP",
          "requestMessageName": "UpdateServerTCPRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerTCP (UpdateServerTCPRequest) returns (RPCSuccess);",
          "doc": "修改服务的TCP设置"
        },
        {
          "name": "updateServerTLS",
          "requestMessageName": "UpdateServerTLSRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerTLS (UpdateServerTLSRequest) returns (RPCSuccess);",
          "doc": "修改服务的TLS设置"
        },
        {
          "name": "updateServerUnix",
          "requestMessageName": "UpdateServerUnixRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerUnix (UpdateServerUnixRequest) returns (RPCSuccess);",
          "doc": "修改服务的Unix设置"
        },
        {
          "name": "updateServerUDP",
          "requestMessageName": "UpdateServerUDPRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerUDP (UpdateServerUDPRequest) returns (RPCSuccess);",
          "doc": "修改服务的UDP设置"
        },
        {
          "name": "updateServerWeb",
          "requestMessageName": "UpdateServerWebRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerWeb (UpdateServerWebRequest) returns (RPCSuccess);",
          "doc": "修改服务的Web设置"
        },
        {
          "name": "updateServerReverseProxy",
          "requestMessageName": "UpdateServerReverseProxyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerReverseProxy (UpdateServerReverseProxyRequest) returns (RPCSuccess);",
          "doc": "修改服务的反向代理设置"
        },
        {
          "name": "findServerNames",
          "requestMessageName": "FindServerNamesRequest",
          "responseMessageName": "FindServerNamesResponse",
          "code": "rpc findServerNames (FindServerNamesRequest) returns (FindServerNamesResponse);",
          "doc": "查找服务的域名设置"
        },
        {
          "name": "updateServerNames",
          "requestMessageName": "UpdateServerNamesRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerNames (UpdateServerNamesRequest) returns (RPCSuccess);",
          "doc": "修改服务的域名设置"
        },
        {
          "name": "updateServerNamesAuditing",
          "requestMessageName": "UpdateServerNamesAuditingRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerNamesAuditing (UpdateServerNamesAuditingRequest) returns (RPCSuccess);",
          "doc": "审核服务的域名设置"
        },
        {
          "name": "updateServerDNS",
          "requestMessageName": "UpdateServerDNSRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerDNS(UpdateServerDNSRequest) returns (RPCSuccess);",
          "doc": "修改服务的DNS相关设置"
        },
        {
          "name": "regenerateServerCNAME",
          "requestMessageName": "RegenerateServerCNAMERequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc regenerateServerCNAME(RegenerateServerCNAMERequest) returns (RPCSuccess);",
          "doc": "重新生成CNAME"
        },
        {
          "name": "countAllEnabledServersMatch",
          "requestMessageName": "CountAllEnabledServersMatchRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledServersMatch (CountAllEnabledServersMatchRequest) returns (RPCCountResponse);",
          "doc": "计算匹配的服务数量"
        },
        {
          "name": "listEnabledServersMatch",
          "requestMessageName": "ListEnabledServersMatchRequest",
          "responseMessageName": "ListEnabledServersMatchResponse",
          "code": "rpc listEnabledServersMatch (ListEnabledServersMatchRequest) returns (ListEnabledServersMatchResponse);",
          "doc": "列出单页服务"
        },
        {
          "name": "deleteServer",
          "requestMessageName": "DeleteServerRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteServer (DeleteServerRequest) returns (RPCSuccess);",
          "doc": "禁用某服务"
        },
        {
          "name": "findEnabledServer",
          "requestMessageName": "FindEnabledServerRequest",
          "responseMessageName": "FindEnabledServerResponse",
          "code": "rpc findEnabledServer (FindEnabledServerRequest) returns (FindEnabledServerResponse);",
          "doc": "查找单个服务"
        },
        {
          "name": "findEnabledServerConfig",
          "requestMessageName": "FindEnabledServerConfigRequest",
          "responseMessageName": "FindEnabledServerConfigResponse",
          "code": "rpc findEnabledServerConfig (FindEnabledServerConfigRequest) returns (FindEnabledServerConfigResponse);",
          "doc": "查找服务配置"
        },
        {
          "name": "findEnabledServerType",
          "requestMessageName": "FindEnabledServerTypeRequest",
          "responseMessageName": "FindEnabledServerTypeResponse",
          "code": "rpc findEnabledServerType (FindEnabledServerTypeRequest) returns (FindEnabledServerTypeResponse);",
          "doc": "查找服务的服务类型"
        },
        {
          "name": "findAndInitServerReverseProxyConfig",
          "requestMessageName": "FindAndInitServerReverseProxyConfigRequest",
          "responseMessageName": "FindAndInitServerReverseProxyConfigResponse",
          "code": "rpc findAndInitServerReverseProxyConfig (FindAndInitServerReverseProxyConfigRequest) returns (FindAndInitServerReverseProxyConfigResponse);",
          "doc": "查找反向代理设置"
        },
        {
          "name": "findAndInitServerWebConfig",
          "requestMessageName": "FindAndInitServerWebConfigRequest",
          "responseMessageName": "FindAndInitServerWebConfigResponse",
          "code": "rpc findAndInitServerWebConfig (FindAndInitServerWebConfigRequest) returns (FindAndInitServerWebConfigResponse);",
          "doc": "初始化Web设置"
        },
        {
          "name": "countAllEnabledServersWithSSLCertId",
          "requestMessageName": "CountAllEnabledServersWithSSLCertIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledServersWithSSLCertId (CountAllEnabledServersWithSSLCertIdRequest) returns (RPCCountResponse);",
          "doc": "计算使用某个SSL证书的服务数量"
        },
        {
          "name": "findAllEnabledServersWithSSLCertId",
          "requestMessageName": "FindAllEnabledServersWithSSLCertIdRequest",
          "responseMessageName": "FindAllEnabledServersWithSSLCertIdResponse",
          "code": "rpc findAllEnabledServersWithSSLCertId (FindAllEnabledServersWithSSLCertIdRequest) returns (FindAllEnabledServersWithSSLCertIdResponse);",
          "doc": "查找使用某个SSL证书的所有服务"
        },
        {
          "name": "countAllEnabledServersWithNodeClusterId",
          "requestMessageName": "CountAllEnabledServersWithNodeClusterIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledServersWithNodeClusterId (CountAllEnabledServersWithNodeClusterIdRequest) returns (RPCCountResponse);",
          "doc": "计算运行在某个集群上的所有服务数量"
        },
        {
          "name": "countAllEnabledServersWithServerGroupId",
          "requestMessageName": "CountAllEnabledServersWithServerGroupIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledServersWithServerGroupId (CountAllEnabledServersWithServerGroupIdRequest) returns (RPCCountResponse);",
          "doc": "计算使用某个分组的服务数量"
        },
        {
          "name": "notifyServersChange",
          "requestMessageName": "NotifyServersChangeRequest",
          "responseMessageName": "NotifyServersChangeResponse",
          "code": "rpc notifyServersChange (NotifyServersChangeRequest) returns (NotifyServersChangeResponse);",
          "doc": "通知更新"
        },
        {
          "name": "findAllEnabledServersDNSWithNodeClusterId",
          "requestMessageName": "FindAllEnabledServersDNSWithNodeClusterIdRequest",
          "responseMessageName": "FindAllEnabledServersDNSWithNodeClusterIdResponse",
          "code": "rpc findAllEnabledServersDNSWithNodeClusterId (FindAllEnabledServersDNSWithNodeClusterIdRequest) returns (FindAllEnabledServersDNSWithNodeClusterIdResponse);",
          "doc": "取得某个集群下的所有服务相关的DNS"
        },
        {
          "name": "findEnabledServerDNS",
          "requestMessageName": "FindEnabledServerDNSRequest",
          "responseMessageName": "FindEnabledServerDNSResponse",
          "code": "rpc findEnabledServerDNS (FindEnabledServerDNSRequest) returns (FindEnabledServerDNSResponse);",
          "doc": "查找单个服务的DNS信息"
        },
        {
          "name": "checkUserServer",
          "requestMessageName": "CheckUserServerRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc checkUserServer (CheckUserServerRequest) returns (RPCSuccess);",
          "doc": "检查服务是否属于某个用户"
        },
        {
          "name": "findAllEnabledServerNamesWithUserId",
          "requestMessageName": "FindAllEnabledServerNamesWithUserIdRequest",
          "responseMessageName": "FindAllEnabledServerNamesWithUserIdResponse",
          "code": "rpc findAllEnabledServerNamesWithUserId (FindAllEnabledServerNamesWithUserIdRequest) returns (FindAllEnabledServerNamesWithUserIdResponse);",
          "doc": "查找一个用户下的所有域名列表"
        },
        {
          "name": "findEnabledUserServerBasic",
          "requestMessageName": "FindEnabledUserServerBasicRequest",
          "responseMessageName": "FindEnabledUserServerBasicResponse",
          "code": "rpc findEnabledUserServerBasic (FindEnabledUserServerBasicRequest) returns (FindEnabledUserServerBasicResponse);",
          "doc": "查找用户服务基本信息"
        },
        {
          "name": "updateEnabledUserServerBasic",
          "requestMessageName": "UpdateEnabledUserServerBasicRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateEnabledUserServerBasic (UpdateEnabledUserServerBasicRequest) returns (RPCSuccess);",
          "doc": "修改用户服务基本信息"
        },
        {
          "name": "uploadServerHTTPRequestStat",
          "requestMessageName": "UploadServerHTTPRequestStatRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc uploadServerHTTPRequestStat (UploadServerHTTPRequestStatRequest) returns (RPCSuccess);",
          "doc": "上传HTTP请求待统计数据"
        },
        {
          "name": "checkServerNameDuplicationInNodeCluster",
          "requestMessageName": "CheckServerNameDuplicationInNodeClusterRequest",
          "responseMessageName": "CheckServerNameDuplicationInNodeClusterResponse",
          "code": "rpc checkServerNameDuplicationInNodeCluster (CheckServerNameDuplicationInNodeClusterRequest) returns (CheckServerNameDuplicationInNodeClusterResponse);",
          "doc": "检查域名是否已经存在"
        },
        {
          "name": "findLatestServers",
          "requestMessageName": "FindLatestServersRequest",
          "responseMessageName": "FindLatestServersResponse",
          "code": "rpc findLatestServers (FindLatestServersRequest) returns (FindLatestServersResponse);",
          "doc": "查找最近访问的服务"
        },
        {
          "name": "findNearbyServers",
          "requestMessageName": "FindNearbyServersRequest",
          "responseMessageName": "FindNearbyServersResponse",
          "code": "rpc findNearbyServers(FindNearbyServersRequest) returns (FindNearbyServersResponse);",
          "doc": "查找某个服务附近的服务"
        },
        {
          "name": "purgeServerCache",
          "requestMessageName": "PurgeServerCacheRequest",
          "responseMessageName": "PurgeServerCacheResponse",
          "code": "rpc purgeServerCache(PurgeServerCacheRequest) returns (PurgeServerCacheResponse);",
          "doc": "清除缓存"
        },
        {
          "name": "findEnabledServerTrafficLimit",
          "requestMessageName": "FindEnabledServerTrafficLimitRequest",
          "responseMessageName": "FindEnabledServerTrafficLimitResponse",
          "code": "rpc findEnabledServerTrafficLimit(FindEnabledServerTrafficLimitRequest) returns (FindEnabledServerTrafficLimitResponse);",
          "doc": "查找流量限制"
        },
        {
          "name": "updateServerTrafficLimit",
          "requestMessageName": "UpdateServerTrafficLimitRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerTrafficLimit(UpdateServerTrafficLimitRequest) returns (RPCSuccess);",
          "doc": "设置流量限制"
        },
        {
          "name": "updateServerUserPlan",
          "requestMessageName": "UpdateServerUserPlanRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerUserPlan(UpdateServerUserPlanRequest) returns (RPCSuccess);",
          "doc": "修改服务套餐"
        },
        {
          "name": "findServerUserPlan",
          "requestMessageName": "FindServerUserPlanRequest",
          "responseMessageName": "FindServerUserPlanResponse",
          "code": "rpc findServerUserPlan(FindServerUserPlanRequest) returns (FindServerUserPlanResponse);",
          "doc": "获取服务套餐信息"
        },
        {
          "name": "composeServerConfig",
          "requestMessageName": "ComposeServerConfigRequest",
          "responseMessageName": "ComposeServerConfigResponse",
          "code": "rpc composeServerConfig(ComposeServerConfigRequest) returns (ComposeServerConfigResponse);",
          "doc": "获取服务配置"
        },
        {
          "name": "updateServerUAM",
          "requestMessageName": "UpdateServerUAMRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerUAM(UpdateServerUAMRequest) returns (RPCSuccess);",
          "doc": "修改服务UAM设置"
        },
        {
          "name": "findEnabledServerUAM",
          "requestMessageName": "FindEnabledServerUAMRequest",
          "responseMessageName": "FindEnabledServerUAMResponse",
          "code": "rpc findEnabledServerUAM(FindEnabledServerUAMRequest) returns (FindEnabledServerUAMResponse);",
          "doc": "查找服务UAM设置"
        }
      ],
      "filename": "service_server.proto",
      "doc": ""
    },
    {
      "name": "ServerBillService",
      "methods": [
        {
          "name": "countAllServerBills",
          "requestMessageName": "CountAllServerBillsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllServerBills(CountAllServerBillsRequest) returns (RPCCountResponse);",
          "doc": "查询服务账单数量"
        },
        {
          "name": "listServerBills",
          "requestMessageName": "ListServerBillsRequest",
          "responseMessageName": "ListServerBillsResponse",
          "code": "rpc listServerBills(ListServerBillsRequest) returns (ListServerBillsResponse);",
          "doc": "查询服务账单列表"
        }
      ],
      "filename": "service_server_bill.proto",
      "doc": "服务账单相关服务"
    },
    {
      "name": "ServerClientBrowserMonthlyStatService",
      "methods": [
        {
          "name": "findTopServerClientBrowserMonthlyStats",
          "requestMessageName": "FindTopServerClientBrowserMonthlyStatsRequest",
          "responseMessageName": "FindTopServerClientBrowserMonthlyStatsResponse",
          "code": "rpc findTopServerClientBrowserMonthlyStats (FindTopServerClientBrowserMonthlyStatsRequest) returns (FindTopServerClientBrowserMonthlyStatsResponse);",
          "doc": "查找前N个浏览器"
        }
      ],
      "filename": "service_server_client_browser_monthly_stat.proto",
      "doc": "浏览器统计"
    },
    {
      "name": "ServerClientSystemMonthlyStatService",
      "methods": [
        {
          "name": "findTopServerClientSystemMonthlyStats",
          "requestMessageName": "FindTopServerClientSystemMonthlyStatsRequest",
          "responseMessageName": "FindTopServerClientSystemMonthlyStatsResponse",
          "code": "rpc findTopServerClientSystemMonthlyStats (FindTopServerClientSystemMonthlyStatsRequest) returns (FindTopServerClientSystemMonthlyStatsResponse);",
          "doc": "查找前N个操作系统"
        }
      ],
      "filename": "service_server_client_system_monthly_stat.proto",
      "doc": "操作系统统计"
    },
    {
      "name": "ServerDailyStatService",
      "methods": [
        {
          "name": "uploadServerDailyStats",
          "requestMessageName": "UploadServerDailyStatsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc uploadServerDailyStats (UploadServerDailyStatsRequest) returns (RPCSuccess);",
          "doc": "上传统计"
        },
        {
          "name": "findLatestServerHourlyStats",
          "requestMessageName": "FindLatestServerHourlyStatsRequest",
          "responseMessageName": "FindLatestServerHourlyStatsResponse",
          "code": "rpc findLatestServerHourlyStats (FindLatestServerHourlyStatsRequest) returns (FindLatestServerHourlyStatsResponse);",
          "doc": "按小时读取统计数据"
        },
        {
          "name": "findLatestServerMinutelyStats",
          "requestMessageName": "FindLatestServerMinutelyStatsRequest",
          "responseMessageName": "FindLatestServerMinutelyStatsResponse",
          "code": "rpc findLatestServerMinutelyStats (FindLatestServerMinutelyStatsRequest) returns (FindLatestServerMinutelyStatsResponse);",
          "doc": "按分钟读取统计数据"
        },
        {
          "name": "findLatestServerDailyStats",
          "requestMessageName": "FindLatestServerDailyStatsRequest",
          "responseMessageName": "FindLatestServerDailyStatsResponse",
          "code": "rpc findLatestServerDailyStats (FindLatestServerDailyStatsRequest) returns (FindLatestServerDailyStatsResponse);",
          "doc": "按日读取统计数据"
        },
        {
          "name": "sumCurrentServerDailyStats",
          "requestMessageName": "SumCurrentServerDailyStatsRequest",
          "responseMessageName": "SumCurrentServerDailyStatsResponse",
          "code": "rpc sumCurrentServerDailyStats(SumCurrentServerDailyStatsRequest) returns (SumCurrentServerDailyStatsResponse);",
          "doc": "查找单个服务当前时刻（N分钟内）统计数据"
        },
        {
          "name": "sumServerDailyStats",
          "requestMessageName": "SumServerDailyStatsRequest",
          "responseMessageName": "SumServerDailyStatsResponse",
          "code": "rpc sumServerDailyStats(SumServerDailyStatsRequest) returns (SumServerDailyStatsResponse);",
          "doc": "计算单个服务的日统计"
        },
        {
          "name": "sumServerMonthlyStats",
          "requestMessageName": "SumServerMonthlyStatsRequest",
          "responseMessageName": "SumServerMonthlyStatsResponse",
          "code": "rpc sumServerMonthlyStats(SumServerMonthlyStatsRequest) returns (SumServerMonthlyStatsResponse);",
          "doc": "计算单个服务的月统计"
        }
      ],
      "filename": "service_server_daily_stat.proto",
      "doc": "服务统计相关服务"
    },
    {
      "name": "ServerDomainHourlyStatService",
      "methods": [
        {
          "name": "listTopServerDomainStatsWithServerId",
          "requestMessageName": "ListTopServerDomainStatsWithServerIdRequest",
          "responseMessageName": "ListTopServerDomainStatsWithServerIdResponse",
          "code": "rpc listTopServerDomainStatsWithServerId(ListTopServerDomainStatsWithServerIdRequest) returns (ListTopServerDomainStatsWithServerIdResponse);",
          "doc": "读取服务的域名排行"
        }
      ],
      "filename": "service_server_domain_hourly_stat.proto",
      "doc": "服务域名按小时统计服务"
    },
    {
      "name": "ServerGroupService",
      "methods": [
        {
          "name": "createServerGroup",
          "requestMessageName": "CreateServerGroupRequest",
          "responseMessageName": "CreateServerGroupResponse",
          "code": "rpc createServerGroup (CreateServerGroupRequest) returns (CreateServerGroupResponse);",
          "doc": "创建分组"
        },
        {
          "name": "updateServerGroup",
          "requestMessageName": "UpdateServerGroupRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerGroup (UpdateServerGroupRequest) returns (RPCSuccess);",
          "doc": "修改分组"
        },
        {
          "name": "deleteServerGroup",
          "requestMessageName": "DeleteServerGroupRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteServerGroup (DeleteServerGroupRequest) returns (RPCSuccess);",
          "doc": "删除分组"
        },
        {
          "name": "findAllEnabledServerGroups",
          "requestMessageName": "FindAllEnabledServerGroupsRequest",
          "responseMessageName": "FindAllEnabledServerGroupsResponse",
          "code": "rpc findAllEnabledServerGroups (FindAllEnabledServerGroupsRequest) returns (FindAllEnabledServerGroupsResponse);",
          "doc": "查询所有分组"
        },
        {
          "name": "updateServerGroupOrders",
          "requestMessageName": "UpdateServerGroupOrdersRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerGroupOrders (UpdateServerGroupOrdersRequest) returns (RPCSuccess);",
          "doc": "修改分组排序"
        },
        {
          "name": "findEnabledServerGroup",
          "requestMessageName": "FindEnabledServerGroupRequest",
          "responseMessageName": "FindEnabledServerGroupResponse",
          "code": "rpc findEnabledServerGroup (FindEnabledServerGroupRequest) returns (FindEnabledServerGroupResponse);",
          "doc": "查找单个分组信息"
        },
        {
          "name": "findAndInitServerGroupHTTPReverseProxyConfig",
          "requestMessageName": "FindAndInitServerGroupHTTPReverseProxyConfigRequest",
          "responseMessageName": "FindAndInitServerGroupHTTPReverseProxyConfigResponse",
          "code": "rpc findAndInitServerGroupHTTPReverseProxyConfig (FindAndInitServerGroupHTTPReverseProxyConfigRequest) returns (FindAndInitServerGroupHTTPReverseProxyConfigResponse);",
          "doc": "查找HTTP反向代理设置"
        },
        {
          "name": "findAndInitServerGroupTCPReverseProxyConfig",
          "requestMessageName": "FindAndInitServerGroupTCPReverseProxyConfigRequest",
          "responseMessageName": "FindAndInitServerGroupTCPReverseProxyConfigResponse",
          "code": "rpc findAndInitServerGroupTCPReverseProxyConfig (FindAndInitServerGroupTCPReverseProxyConfigRequest) returns (FindAndInitServerGroupTCPReverseProxyConfigResponse);",
          "doc": "查找TCP反向代理设置"
        },
        {
          "name": "findAndInitServerGroupUDPReverseProxyConfig",
          "requestMessageName": "FindAndInitServerGroupUDPReverseProxyConfigRequest",
          "responseMessageName": "FindAndInitServerGroupUDPReverseProxyConfigResponse",
          "code": "rpc findAndInitServerGroupUDPReverseProxyConfig (FindAndInitServerGroupUDPReverseProxyConfigRequest) returns (FindAndInitServerGroupUDPReverseProxyConfigResponse);",
          "doc": "查找UDP反向代理设置"
        },
        {
          "name": "updateServerGroupHTTPReverseProxy",
          "requestMessageName": "UpdateServerGroupHTTPReverseProxyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerGroupHTTPReverseProxy (UpdateServerGroupHTTPReverseProxyRequest) returns (RPCSuccess);",
          "doc": "修改分组的HTTP反向代理设置"
        },
        {
          "name": "updateServerGroupTCPReverseProxy",
          "requestMessageName": "UpdateServerGroupTCPReverseProxyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerGroupTCPReverseProxy (UpdateServerGroupTCPReverseProxyRequest) returns (RPCSuccess);",
          "doc": "修改分组的TCP反向代理设置"
        },
        {
          "name": "updateServerGroupUDPReverseProxy",
          "requestMessageName": "UpdateServerGroupUDPReverseProxyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateServerGroupUDPReverseProxy (UpdateServerGroupUDPReverseProxyRequest) returns (RPCSuccess);",
          "doc": "修改分组的UDP反向代理设置"
        },
        {
          "name": "findEnabledServerGroupConfigInfo",
          "requestMessageName": "FindEnabledServerGroupConfigInfoRequest",
          "responseMessageName": "FindEnabledServerGroupConfigInfoResponse",
          "code": "rpc findEnabledServerGroupConfigInfo (FindEnabledServerGroupConfigInfoRequest) returns (FindEnabledServerGroupConfigInfoResponse);",
          "doc": "取得分组的配置概要信息"
        },
        {
          "name": "findAndInitServerGroupWebConfig",
          "requestMessageName": "FindAndInitServerGroupWebConfigRequest",
          "responseMessageName": "FindAndInitServerGroupWebConfigResponse",
          "code": "rpc findAndInitServerGroupWebConfig (FindAndInitServerGroupWebConfigRequest) returns (FindAndInitServerGroupWebConfigResponse);",
          "doc": "初始化Web设置"
        }
      ],
      "filename": "service_server_group.proto",
      "doc": "服务分组服务"
    },
    {
      "name": "ServerHTTPFirewallDailyStatService",
      "methods": [
        {
          "name": "composeServerHTTPFirewallDashboard",
          "requestMessageName": "ComposeServerHTTPFirewallDashboardRequest",
          "responseMessageName": "ComposeServerHTTPFirewallDashboardResponse",
          "code": "rpc composeServerHTTPFirewallDashboard (ComposeServerHTTPFirewallDashboardRequest) returns (ComposeServerHTTPFirewallDashboardResponse);",
          "doc": "组合服务的Dashboard"
        }
      ],
      "filename": "service_server_http_firewall_daily_stat.proto",
      "doc": "WAF统计"
    },
    {
      "name": "ServerRegionCityMonthlyStatService",
      "methods": [
        {
          "name": "findTopServerRegionCityMonthlyStats",
          "requestMessageName": "FindTopServerRegionCityMonthlyStatsRequest",
          "responseMessageName": "FindTopServerRegionCityMonthlyStatsResponse",
          "code": "rpc findTopServerRegionCityMonthlyStats (FindTopServerRegionCityMonthlyStatsRequest) returns (FindTopServerRegionCityMonthlyStatsResponse);",
          "doc": "查找前N个城市"
        }
      ],
      "filename": "service_server_region_city_monthly_stat.proto",
      "doc": "城市月份统计"
    },
    {
      "name": "ServerRegionCountryMonthlyStatService",
      "methods": [
        {
          "name": "findTopServerRegionCountryMonthlyStats",
          "requestMessageName": "FindTopServerRegionCountryMonthlyStatsRequest",
          "responseMessageName": "FindTopServerRegionCountryMonthlyStatsResponse",
          "code": "rpc findTopServerRegionCountryMonthlyStats (FindTopServerRegionCountryMonthlyStatsRequest) returns (FindTopServerRegionCountryMonthlyStatsResponse);",
          "doc": "查找前N个地区"
        }
      ],
      "filename": "service_server_region_country_monthly_stat.proto",
      "doc": "地区月份统计"
    },
    {
      "name": "ServerRegionProviderMonthlyStatService",
      "methods": [
        {
          "name": "findTopServerRegionProviderMonthlyStats",
          "requestMessageName": "FindTopServerRegionProviderMonthlyStatsRequest",
          "responseMessageName": "FindTopServerRegionProviderMonthlyStatsResponse",
          "code": "rpc findTopServerRegionProviderMonthlyStats (FindTopServerRegionProviderMonthlyStatsRequest) returns (FindTopServerRegionProviderMonthlyStatsResponse);",
          "doc": "查找前N个运营商"
        }
      ],
      "filename": "service_server_region_provider_monthly_stat.proto",
      "doc": "运营商月份统计"
    },
    {
      "name": "ServerRegionProvinceMonthlyStatService",
      "methods": [
        {
          "name": "findTopServerRegionProvinceMonthlyStats",
          "requestMessageName": "FindTopServerRegionProvinceMonthlyStatsRequest",
          "responseMessageName": "FindTopServerRegionProvinceMonthlyStatsResponse",
          "code": "rpc findTopServerRegionProvinceMonthlyStats (FindTopServerRegionProvinceMonthlyStatsRequest) returns (FindTopServerRegionProvinceMonthlyStatsResponse);",
          "doc": "查找前N个省份"
        }
      ],
      "filename": "service_server_region_province_monthly_stat.proto",
      "doc": "省份月份统计"
    },
    {
      "name": "ServerStatBoardService",
      "methods": [
        {
          "name": "findAllEnabledServerStatBoards",
          "requestMessageName": "FindAllEnabledServerStatBoardsRequest",
          "responseMessageName": "FindAllEnabledServerStatBoardsResponse",
          "code": "rpc findAllEnabledServerStatBoards (FindAllEnabledServerStatBoardsRequest) returns (FindAllEnabledServerStatBoardsResponse);",
          "doc": "读取所有看板"
        },
        {
          "name": "composeServerStatNodeClusterBoard",
          "requestMessageName": "ComposeServerStatNodeClusterBoardRequest",
          "responseMessageName": "ComposeServerStatNodeClusterBoardResponse",
          "code": "rpc composeServerStatNodeClusterBoard (ComposeServerStatNodeClusterBoardRequest) returns (ComposeServerStatNodeClusterBoardResponse);",
          "doc": "组合集群看板数据"
        },
        {
          "name": "composeServerStatNodeBoard",
          "requestMessageName": "ComposeServerStatNodeBoardRequest",
          "responseMessageName": "ComposeServerStatNodeBoardResponse",
          "code": "rpc composeServerStatNodeBoard (ComposeServerStatNodeBoardRequest) returns (ComposeServerStatNodeBoardResponse);",
          "doc": "组合节点看板数据"
        },
        {
          "name": "composeServerStatBoard",
          "requestMessageName": "ComposeServerStatBoardRequest",
          "responseMessageName": "ComposeServerStatBoardResponse",
          "code": "rpc composeServerStatBoard (ComposeServerStatBoardRequest) returns (ComposeServerStatBoardResponse);",
          "doc": "组合服务看板数据"
        }
      ],
      "filename": "service_server_stat_board.proto",
      "doc": "统计看板"
    },
    {
      "name": "ServerStatBoardChartService",
      "methods": [
        {
          "name": "enableServerStatBoardChart",
          "requestMessageName": "EnableServerStatBoardChartRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc enableServerStatBoardChart (EnableServerStatBoardChartRequest) returns (RPCSuccess);",
          "doc": "添加图表"
        },
        {
          "name": "disableServerStatBoardChart",
          "requestMessageName": "DisableServerStatBoardChartRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc disableServerStatBoardChart (DisableServerStatBoardChartRequest) returns (RPCSuccess);",
          "doc": "取消图表"
        },
        {
          "name": "findAllEnabledServerStatBoardCharts",
          "requestMessageName": "FindAllEnabledServerStatBoardChartsRequest",
          "responseMessageName": "FindAllEnabledServerStatBoardChartsResponse",
          "code": "rpc findAllEnabledServerStatBoardCharts (FindAllEnabledServerStatBoardChartsRequest) returns (FindAllEnabledServerStatBoardChartsResponse);",
          "doc": "读取看板中的图表"
        }
      ],
      "filename": "service_server_stat_board_chart.proto",
      "doc": "统计看板条目"
    },
    {
      "name": "SSLCertService",
      "methods": [
        {
          "name": "createSSLCert",
          "requestMessageName": "CreateSSLCertRequest",
          "responseMessageName": "CreateSSLCertResponse",
          "code": "rpc createSSLCert (CreateSSLCertRequest) returns (CreateSSLCertResponse);",
          "doc": "创建Cert"
        },
        {
          "name": "updateSSLCert",
          "requestMessageName": "UpdateSSLCertRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateSSLCert (UpdateSSLCertRequest) returns (RPCSuccess);",
          "doc": "修改Cert"
        },
        {
          "name": "deleteSSLCert",
          "requestMessageName": "DeleteSSLCertRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteSSLCert (DeleteSSLCertRequest) returns (RPCSuccess);",
          "doc": "删除Cert"
        },
        {
          "name": "findEnabledSSLCertConfig",
          "requestMessageName": "FindEnabledSSLCertConfigRequest",
          "responseMessageName": "FindEnabledSSLCertConfigResponse",
          "code": "rpc findEnabledSSLCertConfig (FindEnabledSSLCertConfigRequest) returns (FindEnabledSSLCertConfigResponse);",
          "doc": "查找证书配置"
        },
        {
          "name": "countSSLCerts",
          "requestMessageName": "CountSSLCertRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countSSLCerts (CountSSLCertRequest) returns (RPCCountResponse);",
          "doc": "计算匹配的Cert数量"
        },
        {
          "name": "listSSLCerts",
          "requestMessageName": "ListSSLCertsRequest",
          "responseMessageName": "ListSSLCertsResponse",
          "code": "rpc listSSLCerts (ListSSLCertsRequest) returns (ListSSLCertsResponse);",
          "doc": "列出单页匹配的Cert"
        },
        {
          "name": "countAllSSLCertsWithOCSPError",
          "requestMessageName": "CountAllSSLCertsWithOCSPErrorRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllSSLCertsWithOCSPError (CountAllSSLCertsWithOCSPErrorRequest) returns (RPCCountResponse);",
          "doc": "计算有OCSP错误的证书数量"
        },
        {
          "name": "listSSLCertsWithOCSPError",
          "requestMessageName": "ListSSLCertsWithOCSPErrorRequest",
          "responseMessageName": "ListSSLCertsWithOCSPErrorResponse",
          "code": "rpc listSSLCertsWithOCSPError (ListSSLCertsWithOCSPErrorRequest) returns (ListSSLCertsWithOCSPErrorResponse);",
          "doc": "列出有OCSP错误的证书"
        },
        {
          "name": "ignoreSSLCertsWithOCSPError",
          "requestMessageName": "IgnoreSSLCertsWithOCSPErrorRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc ignoreSSLCertsWithOCSPError (IgnoreSSLCertsWithOCSPErrorRequest) returns (RPCSuccess);",
          "doc": "忽略一组OCSP证书错误"
        },
        {
          "name": "resetSSLCertsWithOCSPError",
          "requestMessageName": "ResetSSLCertsWithOCSPErrorRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc resetSSLCertsWithOCSPError (ResetSSLCertsWithOCSPErrorRequest) returns (RPCSuccess);",
          "doc": "重置一组证书OCSP错误状态"
        },
        {
          "name": "resetAllSSLCertsWithOCSPError",
          "requestMessageName": "ResetAllSSLCertsWithOCSPErrorRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc resetAllSSLCertsWithOCSPError (ResetAllSSLCertsWithOCSPErrorRequest) returns (RPCSuccess);",
          "doc": "重置所有证书OCSP错误状态"
        },
        {
          "name": "listUpdatedSSLCertOCSP",
          "requestMessageName": "ListUpdatedSSLCertOCSPRequest",
          "responseMessageName": "ListUpdatedSSLCertOCSPResponse",
          "code": "rpc listUpdatedSSLCertOCSP(ListUpdatedSSLCertOCSPRequest) returns (ListUpdatedSSLCertOCSPResponse);",
          "doc": "读取证书的OCSP"
        }
      ],
      "filename": "service_ssl_cert.proto",
      "doc": ""
    },
    {
      "name": "SSLPolicyService",
      "methods": [
        {
          "name": "createSSLPolicy",
          "requestMessageName": "CreateSSLPolicyRequest",
          "responseMessageName": "CreateSSLPolicyResponse",
          "code": "rpc createSSLPolicy (CreateSSLPolicyRequest) returns (CreateSSLPolicyResponse);",
          "doc": "创建Policy"
        },
        {
          "name": "updateSSLPolicy",
          "requestMessageName": "UpdateSSLPolicyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateSSLPolicy (UpdateSSLPolicyRequest) returns (RPCSuccess);",
          "doc": "修改Policy"
        },
        {
          "name": "findEnabledSSLPolicyConfig",
          "requestMessageName": "FindEnabledSSLPolicyConfigRequest",
          "responseMessageName": "FindEnabledSSLPolicyConfigResponse",
          "code": "rpc findEnabledSSLPolicyConfig (FindEnabledSSLPolicyConfigRequest) returns (FindEnabledSSLPolicyConfigResponse);",
          "doc": "查找Policy"
        }
      ],
      "filename": "service_ssl_policy.proto",
      "doc": ""
    },
    {
      "name": "SysLockerService",
      "methods": [
        {
          "name": "SysLockerLock",
          "requestMessageName": "SysLockerLockRequest",
          "responseMessageName": "SysLockerLockResponse",
          "code": "rpc SysLockerLock (SysLockerLockRequest) returns (SysLockerLockResponse);",
          "doc": "获得锁"
        },
        {
          "name": "SysLockerUnlock",
          "requestMessageName": "SysLockerUnlockRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc SysLockerUnlock (SysLockerUnlockRequest) returns (RPCSuccess);",
          "doc": "释放锁"
        }
      ],
      "filename": "service_sys_locker.proto",
      "doc": "互斥锁管理"
    },
    {
      "name": "SysSettingService",
      "methods": [
        {
          "name": "updateSysSetting",
          "requestMessageName": "UpdateSysSettingRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateSysSetting (UpdateSysSettingRequest) returns (RPCSuccess);",
          "doc": "更改配置"
        },
        {
          "name": "readSysSetting",
          "requestMessageName": "ReadSysSettingRequest",
          "responseMessageName": "ReadSysSettingResponse",
          "code": "rpc readSysSetting (ReadSysSettingRequest) returns (ReadSysSettingResponse);",
          "doc": "读取配置"
        }
      ],
      "filename": "service_sys_setting.proto",
      "doc": ""
    },
    {
      "name": "TrafficDailyStatService",
      "methods": [
        {
          "name": "findTrafficDailyStatWithDay",
          "requestMessageName": "FindTrafficDailyStatWithDayRequest",
          "responseMessageName": "FindTrafficDailyStatWithDayResponse",
          "code": "rpc findTrafficDailyStatWithDay(FindTrafficDailyStatWithDayRequest) returns (FindTrafficDailyStatWithDayResponse);",
          "doc": "查找某日统计"
        }
      ],
      "filename": "service_traffic_daily_stat.proto",
      "doc": "按日统计服务"
    },
    {
      "name": "UserService",
      "methods": [
        {
          "name": "createUser",
          "requestMessageName": "CreateUserRequest",
          "responseMessageName": "CreateUserResponse",
          "code": "rpc createUser (CreateUserRequest) returns (CreateUserResponse);",
          "doc": "创建用户"
        },
        {
          "name": "registerUser",
          "requestMessageName": "RegisterUserRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc registerUser(RegisterUserRequest) returns (RPCSuccess);",
          "doc": "注册用户"
        },
        {
          "name": "verifyUser",
          "requestMessageName": "VerifyUserRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc verifyUser(VerifyUserRequest) returns (RPCSuccess);",
          "doc": "审核用户"
        },
        {
          "name": "updateUser",
          "requestMessageName": "UpdateUserRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateUser (UpdateUserRequest) returns (RPCSuccess);",
          "doc": "修改用户"
        },
        {
          "name": "deleteUser",
          "requestMessageName": "DeleteUserRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteUser (DeleteUserRequest) returns (RPCSuccess);",
          "doc": "删除用户"
        },
        {
          "name": "countAllEnabledUsers",
          "requestMessageName": "CountAllEnabledUsersRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledUsers (CountAllEnabledUsersRequest) returns (RPCCountResponse);",
          "doc": "计算用户数量"
        },
        {
          "name": "listEnabledUsers",
          "requestMessageName": "ListEnabledUsersRequest",
          "responseMessageName": "ListEnabledUsersResponse",
          "code": "rpc listEnabledUsers (ListEnabledUsersRequest) returns (ListEnabledUsersResponse);",
          "doc": "列出单页用户"
        },
        {
          "name": "findEnabledUser",
          "requestMessageName": "FindEnabledUserRequest",
          "responseMessageName": "FindEnabledUserResponse",
          "code": "rpc findEnabledUser (FindEnabledUserRequest) returns (FindEnabledUserResponse);",
          "doc": "查询单个用户信息"
        },
        {
          "name": "checkUserUsername",
          "requestMessageName": "CheckUserUsernameRequest",
          "responseMessageName": "CheckUserUsernameResponse",
          "code": "rpc checkUserUsername (CheckUserUsernameRequest) returns (CheckUserUsernameResponse);",
          "doc": "检查用户名是否存在"
        },
        {
          "name": "loginUser",
          "requestMessageName": "LoginUserRequest",
          "responseMessageName": "LoginUserResponse",
          "code": "rpc loginUser (LoginUserRequest) returns (LoginUserResponse);",
          "doc": "登录"
        },
        {
          "name": "updateUserInfo",
          "requestMessageName": "UpdateUserInfoRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateUserInfo (UpdateUserInfoRequest) returns (RPCSuccess);",
          "doc": "修改用户基本信息"
        },
        {
          "name": "updateUserLogin",
          "requestMessageName": "UpdateUserLoginRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateUserLogin (UpdateUserLoginRequest) returns (RPCSuccess);",
          "doc": "修改用户登录信息"
        },
        {
          "name": "composeUserDashboard",
          "requestMessageName": "ComposeUserDashboardRequest",
          "responseMessageName": "ComposeUserDashboardResponse",
          "code": "rpc composeUserDashboard (ComposeUserDashboardRequest) returns (ComposeUserDashboardResponse);",
          "doc": "取得用户Dashboard数据"
        },
        {
          "name": "findUserNodeClusterId",
          "requestMessageName": "FindUserNodeClusterIdRequest",
          "responseMessageName": "FindUserNodeClusterIdResponse",
          "code": "rpc findUserNodeClusterId (FindUserNodeClusterIdRequest) returns (FindUserNodeClusterIdResponse);",
          "doc": "获取用户所在的集群ID"
        },
        {
          "name": "updateUserFeatures",
          "requestMessageName": "UpdateUserFeaturesRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateUserFeatures (UpdateUserFeaturesRequest) returns (RPCSuccess);",
          "doc": "设置用户能使用的功能"
        },
        {
          "name": "findUserFeatures",
          "requestMessageName": "FindUserFeaturesRequest",
          "responseMessageName": "FindUserFeaturesResponse",
          "code": "rpc findUserFeatures (FindUserFeaturesRequest) returns (FindUserFeaturesResponse);",
          "doc": "获取用户所有的功能列表"
        },
        {
          "name": "findAllUserFeatureDefinitions",
          "requestMessageName": "FindAllUserFeatureDefinitionsRequest",
          "responseMessageName": "FindAllUserFeatureDefinitionsResponse",
          "code": "rpc findAllUserFeatureDefinitions (FindAllUserFeatureDefinitionsRequest) returns (FindAllUserFeatureDefinitionsResponse);",
          "doc": "获取所有的功能定义"
        },
        {
          "name": "composeUserGlobalBoard",
          "requestMessageName": "ComposeUserGlobalBoardRequest",
          "responseMessageName": "ComposeUserGlobalBoardResponse",
          "code": "rpc composeUserGlobalBoard (ComposeUserGlobalBoardRequest) returns (ComposeUserGlobalBoardResponse);",
          "doc": "组合全局的看板数据"
        }
      ],
      "filename": "service_user.proto",
      "doc": "用户相关服务"
    },
    {
      "name": "UserAccessKeyService",
      "methods": [
        {
          "name": "createUserAccessKey",
          "requestMessageName": "CreateUserAccessKeyRequest",
          "responseMessageName": "CreateUserAccessKeyResponse",
          "code": "rpc createUserAccessKey (CreateUserAccessKeyRequest) returns (CreateUserAccessKeyResponse);",
          "doc": "创建AccessKey"
        },
        {
          "name": "findAllEnabledUserAccessKeys",
          "requestMessageName": "FindAllEnabledUserAccessKeysRequest",
          "responseMessageName": "FindAllEnabledUserAccessKeysResponse",
          "code": "rpc findAllEnabledUserAccessKeys (FindAllEnabledUserAccessKeysRequest) returns (FindAllEnabledUserAccessKeysResponse);",
          "doc": "查找所有的AccessKey"
        },
        {
          "name": "deleteUserAccessKey",
          "requestMessageName": "DeleteUserAccessKeyRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteUserAccessKey (DeleteUserAccessKeyRequest) returns (RPCSuccess);",
          "doc": "删除AccessKey"
        },
        {
          "name": "updateUserAccessKeyIsOn",
          "requestMessageName": "UpdateUserAccessKeyIsOnRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateUserAccessKeyIsOn (UpdateUserAccessKeyIsOnRequest) returns (RPCSuccess);",
          "doc": "设置是否启用AccessKey"
        },
        {
          "name": "countAllEnabledUserAccessKeys",
          "requestMessageName": "CountAllEnabledUserAccessKeysRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledUserAccessKeys (CountAllEnabledUserAccessKeysRequest) returns (RPCCountResponse);",
          "doc": "计算AccessKey数量"
        }
      ],
      "filename": "service_user_access_key.proto",
      "doc": "用户AccessKey相关服务"
    },
    {
      "name": "UserAccountService",
      "methods": [
        {
          "name": "countUserAccounts",
          "requestMessageName": "CountUserAccountsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countUserAccounts(CountUserAccountsRequest) returns (RPCCountResponse);",
          "doc": "计算账户数量"
        },
        {
          "name": "listUserAccounts",
          "requestMessageName": "ListUserAccountsRequest",
          "responseMessageName": "ListUserAccountsResponse",
          "code": "rpc listUserAccounts(ListUserAccountsRequest) returns (ListUserAccountsResponse);",
          "doc": "列出单页账户"
        },
        {
          "name": "findEnabledUserAccountWithUserId",
          "requestMessageName": "FindEnabledUserAccountWithUserIdRequest",
          "responseMessageName": "FindEnabledUserAccountWithUserIdResponse",
          "code": "rpc findEnabledUserAccountWithUserId(FindEnabledUserAccountWithUserIdRequest) returns (FindEnabledUserAccountWithUserIdResponse);",
          "doc": "根据用户ID查找单个账户"
        },
        {
          "name": "findEnabledUserAccount",
          "requestMessageName": "FindEnabledUserAccountRequest",
          "responseMessageName": "FindEnabledUserAccountResponse",
          "code": "rpc findEnabledUserAccount(FindEnabledUserAccountRequest) returns (FindEnabledUserAccountResponse);",
          "doc": "查找单个账户"
        },
        {
          "name": "updateUserAccount",
          "requestMessageName": "UpdateUserAccountRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateUserAccount(UpdateUserAccountRequest) returns (RPCSuccess);",
          "doc": "修改用户账户"
        }
      ],
      "filename": "service_user_account.proto",
      "doc": "用户账户服务"
    },
    {
      "name": "UserAccountDailyStatService",
      "methods": [
        {
          "name": "listUserAccountDailyStats",
          "requestMessageName": "ListUserAccountDailyStatsRequest",
          "responseMessageName": "ListUserAccountDailyStatsResponse",
          "code": "rpc listUserAccountDailyStats(ListUserAccountDailyStatsRequest) returns (ListUserAccountDailyStatsResponse);",
          "doc": "列出按天统计"
        },
        {
          "name": "listUserAccountMonthlyStats",
          "requestMessageName": "ListUserAccountMonthlyStatsRequest",
          "responseMessageName": "ListUserAccountMonthlyStatsResponse",
          "code": "rpc listUserAccountMonthlyStats(ListUserAccountMonthlyStatsRequest) returns (ListUserAccountMonthlyStatsResponse);",
          "doc": "列出按月统计"
        }
      ],
      "filename": "service_user_account_daily_stat.proto",
      "doc": "用户账户统计服务"
    },
    {
      "name": "UserAccountLogService",
      "methods": [
        {
          "name": "countUserAccountLogs",
          "requestMessageName": "CountUserAccountLogsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countUserAccountLogs(CountUserAccountLogsRequest) returns (RPCCountResponse);",
          "doc": "计算日志数量"
        },
        {
          "name": "listUserAccountLogs",
          "requestMessageName": "ListUserAccountLogsRequest",
          "responseMessageName": "ListUserAccountLogsResponse",
          "code": "rpc listUserAccountLogs(ListUserAccountLogsRequest) returns (ListUserAccountLogsResponse);",
          "doc": "列出单页日志"
        }
      ],
      "filename": "service_user_account_log.proto",
      "doc": "用户账户日志服务"
    },
    {
      "name": "UserBillService",
      "methods": [
        {
          "name": "generateAllUserBills",
          "requestMessageName": "GenerateAllUserBillsRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc generateAllUserBills (GenerateAllUserBillsRequest) returns (RPCSuccess);",
          "doc": "手工生成账单"
        },
        {
          "name": "countAllUserBills",
          "requestMessageName": "CountAllUserBillsRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllUserBills (CountAllUserBillsRequest) returns (RPCCountResponse);",
          "doc": "计算所有账单数量"
        },
        {
          "name": "listUserBills",
          "requestMessageName": "ListUserBillsRequest",
          "responseMessageName": "ListUserBillsResponse",
          "code": "rpc listUserBills (ListUserBillsRequest) returns (ListUserBillsResponse);",
          "doc": "列出单页账单"
        },
        {
          "name": "findUserBill",
          "requestMessageName": "FindUserBillRequest",
          "responseMessageName": "FindUserBillResponse",
          "code": "rpc findUserBill(FindUserBillRequest) returns (FindUserBillResponse);",
          "doc": "查找账单信息"
        },
        {
          "name": "payUserBill",
          "requestMessageName": "PayUserBillRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc payUserBill(PayUserBillRequest) returns (RPCSuccess);",
          "doc": "支付账单"
        },
        {
          "name": "sumUserUnpaidBills",
          "requestMessageName": "SumUserUnpaidBillsRequest",
          "responseMessageName": "SumUserUnpaidBillsResponse",
          "code": "rpc sumUserUnpaidBills(SumUserUnpaidBillsRequest) returns (SumUserUnpaidBillsResponse);",
          "doc": "计算用户所有未支付账单总额"
        }
      ],
      "filename": "service_user_bill.proto",
      "doc": "账单相关服务"
    },
    {
      "name": "UserNodeService",
      "methods": [
        {
          "name": "createUserNode",
          "requestMessageName": "CreateUserNodeRequest",
          "responseMessageName": "CreateUserNodeResponse",
          "code": "rpc createUserNode (CreateUserNodeRequest) returns (CreateUserNodeResponse);",
          "doc": "创建用户节点"
        },
        {
          "name": "updateUserNode",
          "requestMessageName": "UpdateUserNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateUserNode (UpdateUserNodeRequest) returns (RPCSuccess);",
          "doc": "修改用户节点"
        },
        {
          "name": "deleteUserNode",
          "requestMessageName": "DeleteUserNodeRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteUserNode (DeleteUserNodeRequest) returns (RPCSuccess);",
          "doc": "删除用户节点"
        },
        {
          "name": "findAllEnabledUserNodes",
          "requestMessageName": "FindAllEnabledUserNodesRequest",
          "responseMessageName": "FindAllEnabledUserNodesResponse",
          "code": "rpc findAllEnabledUserNodes (FindAllEnabledUserNodesRequest) returns (FindAllEnabledUserNodesResponse);",
          "doc": "列出所有可用用户节点"
        },
        {
          "name": "countAllEnabledUserNodes",
          "requestMessageName": "CountAllEnabledUserNodesRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledUserNodes (CountAllEnabledUserNodesRequest) returns (RPCCountResponse);",
          "doc": "计算用户节点数量"
        },
        {
          "name": "listEnabledUserNodes",
          "requestMessageName": "ListEnabledUserNodesRequest",
          "responseMessageName": "ListEnabledUserNodesResponse",
          "code": "rpc listEnabledUserNodes (ListEnabledUserNodesRequest) returns (ListEnabledUserNodesResponse);",
          "doc": "列出单页的用户节点"
        },
        {
          "name": "findEnabledUserNode",
          "requestMessageName": "FindEnabledUserNodeRequest",
          "responseMessageName": "FindEnabledUserNodeResponse",
          "code": "rpc findEnabledUserNode (FindEnabledUserNodeRequest) returns (FindEnabledUserNodeResponse);",
          "doc": "根据ID查找节点"
        },
        {
          "name": "findCurrentUserNode",
          "requestMessageName": "FindCurrentUserNodeRequest",
          "responseMessageName": "FindCurrentUserNodeResponse",
          "code": "rpc findCurrentUserNode (FindCurrentUserNodeRequest) returns (FindCurrentUserNodeResponse);",
          "doc": "获取当前用户节点信息"
        },
        {
          "name": "updateUserNodeStatus",
          "requestMessageName": "UpdateUserNodeStatusRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateUserNodeStatus (UpdateUserNodeStatusRequest) returns (RPCSuccess);",
          "doc": "更新节点状态"
        },
        {
          "name": "countAllEnabledUserNodesWithSSLCertId",
          "requestMessageName": "CountAllEnabledUserNodesWithSSLCertIdRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledUserNodesWithSSLCertId (CountAllEnabledUserNodesWithSSLCertIdRequest) returns (RPCCountResponse);",
          "doc": "计算使用某个SSL证书的用户节点数量"
        }
      ],
      "filename": "service_user_node.proto",
      "doc": ""
    },
    {
      "name": "UserPlanService",
      "methods": [
        {
          "name": "buyUserPlan",
          "requestMessageName": "BuyUserPlanRequest",
          "responseMessageName": "BuyUserPlanResponse",
          "code": "rpc buyUserPlan(BuyUserPlanRequest) returns (BuyUserPlanResponse);",
          "doc": "购买套餐"
        },
        {
          "name": "renewUserPlan",
          "requestMessageName": "RenewUserPlanRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc renewUserPlan(RenewUserPlanRequest) returns (RPCSuccess);",
          "doc": "续费套餐"
        },
        {
          "name": "findEnabledUserPlan",
          "requestMessageName": "FindEnabledUserPlanRequest",
          "responseMessageName": "FindEnabledUserPlanResponse",
          "code": "rpc findEnabledUserPlan(FindEnabledUserPlanRequest) returns (FindEnabledUserPlanResponse);",
          "doc": "查找单个已购套餐信息"
        },
        {
          "name": "updateUserPlan",
          "requestMessageName": "UpdateUserPlanRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc updateUserPlan(UpdateUserPlanRequest) returns (RPCSuccess);",
          "doc": "修改已购套餐"
        },
        {
          "name": "deleteUserPlan",
          "requestMessageName": "DeleteUserPlanRequest",
          "responseMessageName": "RPCSuccess",
          "code": "rpc deleteUserPlan(DeleteUserPlanRequest) returns (RPCSuccess);",
          "doc": "删除已购套餐"
        },
        {
          "name": "countAllEnabledUserPlans",
          "requestMessageName": "CountAllEnabledUserPlansRequest",
          "responseMessageName": "RPCCountResponse",
          "code": "rpc countAllEnabledUserPlans(CountAllEnabledUserPlansRequest) returns (RPCCountResponse);",
          "doc": "计算已购套餐数"
        },
        {
          "name": "listEnabledUserPlans",
          "requestMessageName": "ListEnabledUserPlansRequest",
          "responseMessageName": "ListEnabledUserPlansResponse",
          "code": "rpc listEnabledUserPlans(ListEnabledUserPlansRequest) returns (ListEnabledUserPlansResponse);",
          "doc": "列出单页已购套餐"
        },
        {
          "name": "findAllEnabledUserPlansForServer",
          "requestMessageName": "FindAllEnabledUserPlansForServerRequest",
          "responseMessageName": "FindAllEnabledUserPlansForServerResponse",
          "code": "rpc findAllEnabledUserPlansForServer(FindAllEnabledUserPlansForServerRequest) returns (FindAllEnabledUserPlansForServerResponse);",
          "doc": "查找所有服务可用的套餐"
        }
      ],
      "filename": "service_user_plan.proto",
      "doc": "用户购买的套餐"
    }
  ],
  "messages": [
    {
      "name": "FindAPIMethodStatsWithDayRequest",
      "code": "\nmessage FindAPIMethodStatsWithDayRequest {\n\tstring day = 1; // YYYYMMDD\n}",
      "doc": "查找某天的统计"
    },
    {
      "name": "FindAPIMethodStatsWithDayResponse",
      "code": "\n\nmessage FindAPIMethodStatsWithDayResponse {\n\trepeated APIMethodStat apiMethodStats = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAPIMethodStatsWithDayRequest",
      "code": "\nmessage CountAPIMethodStatsWithDayRequest {\n\tstring day = 1; // YYYYMMDD\n}",
      "doc": "检查是否有统计数据"
    },
    {
      "name": "FindACMEAuthenticationKeyWithTokenRequest",
      "code": "\nmessage FindACMEAuthenticationKeyWithTokenRequest {\n\tstring token = 1;\n}",
      "doc": "获取Key"
    },
    {
      "name": "FindACMEAuthenticationKeyWithTokenResponse",
      "code": "\n\nmessage FindACMEAuthenticationKeyWithTokenResponse {\n\tstring key = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllACMEProvidersRequest",
      "code": "\nmessage FindAllACMEProvidersRequest {\n\n}",
      "doc": "查找所有的服务商"
    },
    {
      "name": "FindAllACMEProvidersResponse",
      "code": "\n\nmessage FindAllACMEProvidersResponse {\n\trepeated ACMEProvider acmeProviders = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindACMEProviderWithCodeRequest",
      "code": "\nmessage FindACMEProviderWithCodeRequest{\n\tstring acmeProviderCode = 1;\n}",
      "doc": "根据代号查找服务商"
    },
    {
      "name": "FindACMEProviderWithCodeResponse",
      "code": "\n\nmessage FindACMEProviderWithCodeResponse {\n\tACMEProvider acmeProvider = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllACMEProviderAccountsWithProviderCodeResponse",
      "code": "\n\nmessage FindAllACMEProviderAccountsWithProviderCodeResponse {\n\trepeated ACMEProviderAccount acmeProviderAccounts = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateACMEProviderAccountRequest",
      "code": "\nmessage UpdateACMEProviderAccountRequest {\n\tint64 acmeProviderAccountId = 1;\n\tstring name = 2;\n\tstring eabKid = 3;\n\tstring eabKey = 4;\n}",
      "doc": "修改服务商账号"
    },
    {
      "name": "DeleteACMEProviderAccountRequest",
      "code": "\nmessage DeleteACMEProviderAccountRequest {\n\tint64 acmeProviderAccountId = 1;\n}",
      "doc": "删除服务商账号"
    },
    {
      "name": "CountAllEnabledACMEProviderAccountsRequest",
      "code": "\nmessage CountAllEnabledACMEProviderAccountsRequest {\n\n}",
      "doc": "计算所有服务商账号数量"
    },
    {
      "name": "ListEnabledACMEProviderAccountsRequest",
      "code": "\nmessage ListEnabledACMEProviderAccountsRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出单页服务商账号"
    },
    {
      "name": "CreateACMEProviderAccountRequest",
      "code": "\nmessage CreateACMEProviderAccountRequest {\n\tstring name = 1;\n\tstring providerCode = 2;\n\tstring eabKid = 3;\n\tstring eabKey = 4;\n}",
      "doc": "创建服务商"
    },
    {
      "name": "CreateACMEProviderAccountResponse",
      "code": "\n\nmessage CreateACMEProviderAccountResponse {\n\tint64 acmeProviderAccountId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllACMEProviderAccountsWithProviderCodeRequest",
      "code": "\nmessage FindAllACMEProviderAccountsWithProviderCodeRequest {\n\tstring acmeProviderCode = 1;\n}",
      "doc": "使用代号查找服务商账号"
    },
    {
      "name": "FindEnabledACMEProviderAccountRequest",
      "code": "\nmessage FindEnabledACMEProviderAccountRequest {\n\tint64 acmeProviderAccountId = 1;\n}",
      "doc": "查找单个服务商账号"
    },
    {
      "name": "FindEnabledACMEProviderAccountResponse",
      "code": "\n\nmessage FindEnabledACMEProviderAccountResponse {\n\tACMEProviderAccount acmeProviderAccount = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListEnabledACMEProviderAccountsResponse",
      "code": "\n\nmessage ListEnabledACMEProviderAccountsResponse {\n\trepeated ACMEProviderAccount acmeProviderAccounts = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledACMETaskResponse",
      "code": "\n\nmessage FindEnabledACMETaskResponse {\n\tACMETask acmeTask = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListEnabledACMETasksResponse",
      "code": "\n\nmessage ListEnabledACMETasksResponse {\n\trepeated ACMETask acmeTasks = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateACMETaskRequest",
      "code": "\nmessage CreateACMETaskRequest {\n\tint64 acmeUserId = 1;\n\tint64 dnsProviderId = 2;\n\tstring dnsDomain = 3;\n\trepeated string domains = 4;\n\tbool autoRenew = 5;\n\tstring authType = 6;\n\tstring authURL = 7;\n}",
      "doc": "创建任务"
    },
    {
      "name": "UpdateACMETaskRequest",
      "code": "\nmessage UpdateACMETaskRequest {\n\tint64 acmeTaskId = 1;\n\tint64 acmeUserId = 2;\n\tint64 dnsProviderId = 3;\n\tstring dnsDomain = 4;\n\trepeated string domains = 5;\n\tbool autoRenew = 6;\n\tstring authURL = 7;\n}",
      "doc": "修改任务"
    },
    {
      "name": "DeleteACMETaskRequest",
      "code": "\nmessage DeleteACMETaskRequest {\n\tint64 acmeTaskId = 1;\n}",
      "doc": "删除任务"
    },
    {
      "name": "RunACMETaskRequest",
      "code": "\nmessage RunACMETaskRequest {\n\tint64 acmeTaskId = 1;\n}",
      "doc": "运行某个任务"
    },
    {
      "name": "RunACMETaskResponse",
      "code": "\n\nmessage RunACMETaskResponse {\n\tbool isOk = 1;\n\tstring error = 2;\n\tint64 sslCertId = 3;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledACMETaskRequest",
      "code": "\nmessage FindEnabledACMETaskRequest {\n\tint64 acmeTaskId = 1;\n}",
      "doc": "查找单个任务信息"
    },
    {
      "name": "CountAllEnabledACMETasksWithACMEUserIdRequest",
      "code": "\nmessage CountAllEnabledACMETasksWithACMEUserIdRequest {\n\tint64 acmeUserId = 1;\n}",
      "doc": "计算某个ACME用户相关的任务数量"
    },
    {
      "name": "CountEnabledACMETasksWithDNSProviderIdRequest",
      "code": "\nmessage CountEnabledACMETasksWithDNSProviderIdRequest {\n\tint64 dnsProviderId = 1;\n}",
      "doc": "计算跟某个DNS服务商相关的任务数量"
    },
    {
      "name": "CountAllEnabledACMETasksRequest",
      "code": "\nmessage CountAllEnabledACMETasksRequest {\n\tint64 adminId = 1;\n\tint64 userId = 2;\n\tbool isAvailable = 3;\n\tbool isExpired = 4;\n\tint32 expiringDays = 5;\n\tstring keyword = 6;\n}",
      "doc": "计算所有任务数量"
    },
    {
      "name": "ListEnabledACMETasksRequest",
      "code": "\nmessage ListEnabledACMETasksRequest {\n\tint64 adminId = 1;\n\tint64 userId = 2;\n\tint64 offset = 3;\n\tint64 size = 4;\n\tbool isAvailable = 5;\n\tbool isExpired = 6;\n\tint32 expiringDays = 7;\n\tstring keyword = 8;\n}",
      "doc": "列出单页任务"
    },
    {
      "name": "CreateACMETaskResponse",
      "code": "\n\nmessage CreateACMETaskResponse {\n\tint64 acmeTaskId = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateACMEUserResponse",
      "code": "\n\nmessage CreateACMEUserResponse {\n\tint64 acmeUserId = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListACMEUsersResponse",
      "code": "\n\nmessage ListACMEUsersResponse {\n\trepeated ACMEUser acmeUsers = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllACMEUsersRequest",
      "code": "\nmessage FindAllACMEUsersRequest {\n\tint64 adminId = 1;\n\tint64 userId = 2;\n\tstring acmeProviderCode = 3;\n}",
      "doc": "查找所有用户"
    },
    {
      "name": "FindAllACMEUsersResponse",
      "code": "\n\nmessage FindAllACMEUsersResponse {\n\trepeated ACMEUser acmeUsers = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateACMEUserRequest",
      "code": "\nmessage CreateACMEUserRequest {\n\tstring email = 1;\n\tstring description = 2;\n\tstring acmeProviderCode = 3;\n\tint64 acmeProviderAccountId = 4;\n}",
      "doc": "创建用户"
    },
    {
      "name": "UpdateACMEUserRequest",
      "code": "\nmessage UpdateACMEUserRequest {\n\tint64 acmeUserId = 1;\n\tstring description = 2;\n}",
      "doc": "修改用户"
    },
    {
      "name": "DeleteACMEUserRequest",
      "code": "\nmessage DeleteACMEUserRequest {\n\tint64 acmeUserId = 1;\n}",
      "doc": "删除用户"
    },
    {
      "name": "CountAcmeUsersRequest",
      "code": "\nmessage CountAcmeUsersRequest {\n\tint64 adminId = 1;\n\tint64 userId = 2;\n\tint64 acmeProviderAccountId = 3;\n}",
      "doc": "计算用户数量"
    },
    {
      "name": "ListACMEUsersRequest",
      "code": "\nmessage ListACMEUsersRequest {\n\tint64 adminId = 1;\n\tint64 userId = 2;\n\tint64 offset = 3;\n\tint64 size = 4;\n}",
      "doc": "列出单页用户"
    },
    {
      "name": "FindEnabledACMEUserRequest",
      "code": "\nmessage FindEnabledACMEUserRequest {\n\tint64 acmeUserId = 1;\n}",
      "doc": "查找单个用户"
    },
    {
      "name": "FindEnabledACMEUserResponse",
      "code": "\n\nmessage FindEnabledACMEUserResponse {\n\tACMEUser acmeUser = 1;\n}",
      "doc": ""
    },
    {
      "name": "LoginAdminRequest",
      "code": "\nmessage LoginAdminRequest {\n\tstring username = 1;\n\tstring password = 2;\n}",
      "doc": "登录"
    },
    {
      "name": "UpdateAdminThemeRequest",
      "code": "\nmessage UpdateAdminThemeRequest {\n\tint64 adminId = 1;\n\tstring theme = 2;\n}",
      "doc": "修改管理员使用的界面风格"
    },
    {
      "name": "CreateAdminResponse",
      "code": "\n\nmessage CreateAdminResponse {\n\tint64 adminId = 1;\n}",
      "doc": ""
    },
    {
      "name": "CheckAdminOTPWithUsernameResponse",
      "code": "\n\nmessage CheckAdminOTPWithUsernameResponse {\n\tbool requireOTP = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateAdminRequest",
      "code": "\nmessage UpdateAdminRequest {\n\tint64 adminId = 1;\n\tstring username = 2;\n\tstring password = 3;\n\tstring fullname = 4;\n\tbytes modulesJSON = 5;\n\tbool isSuper = 6;\n\tbool isOn = 7;\n\tbool canLogin = 8;\n}",
      "doc": "修改管理员"
    },
    {
      "name": "ComposeAdminDashboardResponse",
      "code": "\n\nmessage ComposeAdminDashboardResponse {\n\tint64 countNodeClusters = 1;\n\tint64 countNodes = 2;\n\tint64 countOfflineNodes = 9;\n\tint64 countServers = 3;\n\tint64 countAuditingServers = 13;\n\tint64 countUsers = 4;\n\tint64 countAPINodes = 5;\n\tint64 countOfflineAPINodes = 10;\n\tint64 countDBNodes = 6;\n\tint64 countOfflineDBNodes = 11;\n\tint64 countUserNodes = 7;\n\tint64 countOfflineUserNodes = 12;\n\tint64 defaultNodeClusterId = 8;\n\n\trepeated DailyTrafficStat dailyTrafficStats = 30;\n\trepeated HourlyTrafficStat hourlyTrafficStats = 31;\n\n\tUpgradeInfo nodeUpgradeInfo = 32;\n\tUpgradeInfo apiNodeUpgradeInfo = 33;\n\tUpgradeInfo monitorNodeUpgradeInfo = 34;\n\tUpgradeInfo userNodeUpgradeInfo = 35;\n\tUpgradeInfo authorityNodeUpgradeInfo = 36;\n\tUpgradeInfo nsNodeUpgradeInfo = 37;\n\tUpgradeInfo reportNodeUpgradeInfo = 41;\n\n\trepeated NodeStat topNodeStats = 38;\n\trepeated DomainStat topDomainStats = 39;\n\trepeated CountryStat topCountryStats = 42;\n\n\trepeated MetricDataChart metricDataCharts = 40;\n\n\n\tmessage DailyTrafficStat {\n\t\tstring day = 1;\n\t\tint64 bytes = 2;\n\t\tint64 cachedBytes = 3;\n\t\tint64 countRequests = 4;\n\t\tint64 countCachedRequests = 5;\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n\n\n\tmessage HourlyTrafficStat {\n\t\tstring hour = 1;\n\t\tint64 bytes = 2;\n\t\tint64 cachedBytes = 3;\n\t\tint64 countRequests = 4;\n\t\tint64 countCachedRequests = 5;\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n\n\n\tmessage NodeStat {\n\t\tint64 nodeId = 1;\n\t\tstring nodeName = 2;\n\t\tint64 countRequests = 3;\n\t\tint64 bytes = 4;\n\t}\n\n\n\tmessage DomainStat {\n\t\tint64 serverId = 1;\n\t\tstring domain = 2;\n\t\tint64 countRequests = 3;\n\t\tint64 bytes = 4;\n\t}\n\n\n\tmessage CountryStat {\n\t\tstring countryName = 1;\n\t\tint64 bytes = 2;\n\t\tint64 countRequests = 3;\n\t\tfloat percent = 4; // 流量占比\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n\n\t// 节点升级信息\n\n\tmessage UpgradeInfo {\n\t\tint64 countNodes = 1;\n\t\tstring newVersion = 2;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "CheckAdminUsernameRequest",
      "code": "\nmessage CheckAdminUsernameRequest {\n\tint64 adminId = 1;\n\tstring username = 2;\n}",
      "doc": "检查用户名是否存在"
    },
    {
      "name": "FindAdminFullnameResponse",
      "code": "\n\nmessage FindAdminFullnameResponse {\n\tstring fullname = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateOrUpdateAdminResponse",
      "code": "\n\nmessage CreateOrUpdateAdminResponse {\n\tint64 adminId = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListEnabledAdminsRequest",
      "code": "\nmessage ListEnabledAdminsRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出单页的管理员"
    },
    {
      "name": "CreateOrUpdateAdminRequest",
      "code": "\nmessage CreateOrUpdateAdminRequest {\n\tstring username = 1;\n\tstring password = 2;\n}",
      "doc": "创建或修改管理员"
    },
    {
      "name": "UpdateAdminInfoRequest",
      "code": "\nmessage UpdateAdminInfoRequest {\n\tint64 adminId = 1;\n\tstring fullname = 2;\n}",
      "doc": "修改管理员信息"
    },
    {
      "name": "FindAllAdminModulesRequest",
      "code": "\nmessage FindAllAdminModulesRequest {\n\n}",
      "doc": "获取管理所有权限列表"
    },
    {
      "name": "FindAllAdminModulesResponse",
      "code": "\n\nmessage FindAllAdminModulesResponse {\n\trepeated AdminModuleList adminModules = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateAdminRequest",
      "code": "\nmessage CreateAdminRequest {\n\tstring username = 1;\n\tstring password = 2;\n\tstring fullname = 3;\n\tbytes modulesJSON = 4;\n\tbool isSuper = 5;\n\tbool canLogin = 6;\n}",
      "doc": "创建管理员"
    },
    {
      "name": "CountAllEnabledAdminsRequest",
      "code": "\nmessage CountAllEnabledAdminsRequest {\n\n}",
      "doc": "计算管理员数量"
    },
    {
      "name": "ListEnabledAdminsResponse",
      "code": "\n\nmessage ListEnabledAdminsResponse {\n\trepeated Admin admins = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteAdminRequest",
      "code": "\nmessage DeleteAdminRequest {\n\tint64 adminId = 1;\n}",
      "doc": "删除管理员"
    },
    {
      "name": "LoginAdminResponse",
      "code": "\n\nmessage LoginAdminResponse {\n\tint64 adminId = 1;\n\tbool isOk = 2;\n\tstring message = 3;\n}",
      "doc": ""
    },
    {
      "name": "FindAdminFullnameRequest",
      "code": "\nmessage FindAdminFullnameRequest {\n\tint64 adminId = 1;\n}",
      "doc": "获取管理员名称"
    },
    {
      "name": "FindEnabledAdminResponse",
      "code": "\n\nmessage FindEnabledAdminResponse {\n\tAdmin admin = 1;\n}",
      "doc": ""
    },
    {
      "name": "ComposeAdminDashboardRequest",
      "code": "\nmessage ComposeAdminDashboardRequest {\n\tstring apiVersion = 1;\n}",
      "doc": "取得管理员Dashboard数据"
    },
    {
      "name": "CheckAdminExistsRequest",
      "code": "\nmessage CheckAdminExistsRequest {\n\tint64 adminId = 1;\n}",
      "doc": "检查管理员是否存在"
    },
    {
      "name": "CheckAdminUsernameResponse",
      "code": "\n\nmessage CheckAdminUsernameResponse {\n\tbool exists = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledAdminRequest",
      "code": "\nmessage FindEnabledAdminRequest {\n\tint64 adminId = 1;\n}",
      "doc": "获取管理员信息"
    },
    {
      "name": "CheckAdminExistsResponse",
      "code": "\n\nmessage CheckAdminExistsResponse {\n\tbool isOk = 1;\n\tstring message = 2;\n}",
      "doc": ""
    },
    {
      "name": "UpdateAdminLoginRequest",
      "code": "\nmessage UpdateAdminLoginRequest {\n\tint64 adminId = 1;\n\tstring username = 2;\n\tstring password = 3;\n}",
      "doc": "修改管理员登录信息"
    },
    {
      "name": "CheckAdminOTPWithUsernameRequest",
      "code": "\nmessage CheckAdminOTPWithUsernameRequest {\n\tstring username = 1;\n}",
      "doc": "根据用户名检查是否需要输入OTP"
    },
    {
      "name": "GetAPIAccessTokenRequest",
      "code": "\nmessage GetAPIAccessTokenRequest {\n\tstring type = 1;\n\tstring accessKeyId = 2;\n\tstring accessKey = 3;\n}",
      "doc": "获取AccessToken"
    },
    {
      "name": "GetAPIAccessTokenResponse",
      "code": "\n\nmessage GetAPIAccessTokenResponse {\n\tstring token = 1;\n\tint64 expiresAt = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledAPINodesResponse",
      "code": "\n\nmessage FindAllEnabledAPINodesResponse {\n\trepeated APINode apiNodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListEnabledAPINodesRequest",
      "code": "\nmessage ListEnabledAPINodesRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出单页的API节点"
    },
    {
      "name": "FindEnabledAPINodeResponse",
      "code": "\n\nmessage FindEnabledAPINodeResponse {\n\tAPINode apiNode = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindCurrentAPINodeResponse",
      "code": "\n\nmessage FindCurrentAPINodeResponse {\n\tAPINode apiNode = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindCurrentAPINodeVersionRequest",
      "code": "\nmessage FindCurrentAPINodeVersionRequest {\n\n}",
      "doc": "获取当前API节点的版本"
    },
    {
      "name": "CreateAPINodeRequest",
      "code": "\nmessage CreateAPINodeRequest {\n\tstring name = 1;\n\tstring description = 2;\n\tbytes httpJSON = 3;\n\tbytes httpsJSON = 4;\n\tbytes accessAddrsJSON = 5;\n\tbool isOn = 6;\n\tbool restIsOn = 7;\n\tbytes restHTTPJSON = 8;\n\tbytes restHTTPSJSON = 9;\n}",
      "doc": "创建API节点"
    },
    {
      "name": "UpdateAPINodeRequest",
      "code": "\nmessage UpdateAPINodeRequest {\n\tint64 apiNodeId = 1;\n\tstring name = 2;\n\tstring description = 3;\n\tbytes httpJSON = 4;\n\tbytes httpsJSON = 5;\n\tbytes accessAddrsJSON = 6;\n\tbool isOn = 7;\n\tbool restIsOn = 8;\n\tbytes restHTTPJSON = 9;\n\tbytes restHTTPSJSON = 10;\n\tbool isPrimary = 11;\n}",
      "doc": "修改API节点"
    },
    {
      "name": "CountAllEnabledAndOnAPINodesRequest",
      "code": "\nmessage CountAllEnabledAndOnAPINodesRequest {\n\n}",
      "doc": "计算启用的API节点数量"
    },
    {
      "name": "ListEnabledAPINodesResponse",
      "code": "\n\nmessage ListEnabledAPINodesResponse {\n\trepeated APINode apiNodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteAPINodeRequest",
      "code": "\nmessage DeleteAPINodeRequest {\n\tint64 apiNodeId = 1;\n}",
      "doc": "删除API节点"
    },
    {
      "name": "FindAllEnabledAPINodesRequest",
      "code": "\nmessage FindAllEnabledAPINodesRequest {\n\n}",
      "doc": "列出所有可用API节点"
    },
    {
      "name": "CountAllEnabledAPINodesRequest",
      "code": "\nmessage CountAllEnabledAPINodesRequest {\n\n}",
      "doc": "计算API节点数量"
    },
    {
      "name": "FindEnabledAPINodeRequest",
      "code": "\nmessage FindEnabledAPINodeRequest {\n\tint64 apiNodeId = 1;\n}",
      "doc": "根据ID查找节点"
    },
    {
      "name": "CreateAPINodeResponse",
      "code": "\n\nmessage CreateAPINodeResponse {\n\tint64 apiNodeId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindCurrentAPINodeVersionResponse",
      "code": "\n\nmessage FindCurrentAPINodeVersionResponse {\n\tstring version = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledAPINodesWithSSLCertIdRequest",
      "code": "\nmessage CountAllEnabledAPINodesWithSSLCertIdRequest {\n\tint64 sslCertId = 1;\n}",
      "doc": "计算使用某个SSL证书的API节点数量"
    },
    {
      "name": "DebugAPINodeRequest",
      "code": "\nmessage DebugAPINodeRequest {\n\tbool debug = 1;\n}",
      "doc": "修改调试模式状态"
    },
    {
      "name": "FindAllEnabledAPITokensResponse",
      "code": "\n\nmessage FindAllEnabledAPITokensResponse {\n\trepeated APIToken apiTokens = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledAPITokensRequest",
      "code": "\nmessage FindAllEnabledAPITokensRequest {\n\tstring role = 1;\n}",
      "doc": "获取API令牌"
    },
    {
      "name": "ValidateAuthorityKeyRequest",
      "code": "\nmessage ValidateAuthorityKeyRequest {\n\tstring key = 1;\n}",
      "doc": "校验Key"
    },
    {
      "name": "ValidateAuthorityKeyResponse",
      "code": "\n\nmessage ValidateAuthorityKeyResponse {\n\tbool isOk = 1;\n\tstring error = 2;\n}",
      "doc": ""
    },
    {
      "name": "UpdateAuthorityKeyRequest",
      "code": "\nmessage UpdateAuthorityKeyRequest {\n\tstring value = 1;\n\tstring dayFrom = 2;\n\tstring dayTo = 3;\n\tstring hostname = 4;\n\trepeated string macAddresses = 5;\n\tstring company = 6;\n}",
      "doc": "设置Key"
    },
    {
      "name": "ReadAuthorityKeyRequest",
      "code": "\nmessage ReadAuthorityKeyRequest {\n\n}",
      "doc": "读取Key"
    },
    {
      "name": "ReadAuthorityKeyResponse",
      "code": "\n\nmessage ReadAuthorityKeyResponse {\n\tAuthorityKey authorityKey = 1;\n}",
      "doc": ""
    },
    {
      "name": "ResetAuthorityKeyRequest",
      "code": "\nmessage ResetAuthorityKeyRequest {\n\n}",
      "doc": "重置Key"
    },
    {
      "name": "CreateAuthorityNodeRequest",
      "code": "\nmessage CreateAuthorityNodeRequest {\n\tstring name = 1;\n\tstring description = 2;\n\tbool isOn = 3;\n}",
      "doc": "创建认证节点"
    },
    {
      "name": "FindAllEnabledAuthorityNodesRequest",
      "code": "\nmessage FindAllEnabledAuthorityNodesRequest {\n\n}",
      "doc": "列出所有可用认证节点"
    },
    {
      "name": "FindAllEnabledAuthorityNodesResponse",
      "code": "\n\nmessage FindAllEnabledAuthorityNodesResponse {\n\trepeated AuthorityNode authorityNodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledAuthorityNodesRequest",
      "code": "\nmessage CountAllEnabledAuthorityNodesRequest {\n\n}",
      "doc": "计算认证节点数量"
    },
    {
      "name": "FindEnabledAuthorityNodeRequest",
      "code": "\nmessage FindEnabledAuthorityNodeRequest {\n\tint64 authorityNodeId = 1;\n}",
      "doc": "根据ID查找节点"
    },
    {
      "name": "FindEnabledAuthorityNodeResponse",
      "code": "\n\nmessage FindEnabledAuthorityNodeResponse {\n\tAuthorityNode authorityNode = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindCurrentAuthorityNodeRequest",
      "code": "\nmessage FindCurrentAuthorityNodeRequest {\n\n}",
      "doc": "获取当前认证节点"
    },
    {
      "name": "CreateAuthorityNodeResponse",
      "code": "\n\nmessage CreateAuthorityNodeResponse {\n\tint64 authorityNodeId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateAuthorityNodeRequest",
      "code": "\nmessage UpdateAuthorityNodeRequest {\n\tint64 authorityNodeId = 1;\n\tstring name = 2;\n\tstring description = 3;\n\tbool isOn = 4;\n}",
      "doc": "修改认证节点"
    },
    {
      "name": "DeleteAuthorityNodeRequest",
      "code": "\nmessage DeleteAuthorityNodeRequest {\n\tint64 authorityNodeId = 1;\n}",
      "doc": "删除认证节点"
    },
    {
      "name": "FindCurrentAuthorityNodeResponse",
      "code": "\n\nmessage FindCurrentAuthorityNodeResponse {\n\tAuthorityNode authorityNode = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListEnabledAuthorityNodesRequest",
      "code": "\nmessage ListEnabledAuthorityNodesRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出单页的认证节点"
    },
    {
      "name": "ListEnabledAuthorityNodesResponse",
      "code": "\n\nmessage ListEnabledAuthorityNodesResponse {\n\trepeated AuthorityNode authorityNodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateAuthorityNodeStatusRequest",
      "code": "\nmessage UpdateAuthorityNodeStatusRequest {\n\tint64 authorityNodeId = 1;\n\tbytes statusJSON = 2;\n}",
      "doc": "更新认证状态"
    },
    {
      "name": "TruncateDBTableRequest",
      "code": "\nmessage TruncateDBTableRequest {\n\tstring dbTable = 1;\n}",
      "doc": "清空表"
    },
    {
      "name": "FindAllDBTablesRequest",
      "code": "\nmessage FindAllDBTablesRequest {\n\n}",
      "doc": "获取所有表信息"
    },
    {
      "name": "FindAllDBTablesResponse",
      "code": "\n\nmessage FindAllDBTablesResponse {\n\trepeated DBTable dbTables = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteDBTableRequest",
      "code": "\nmessage DeleteDBTableRequest {\n\tstring dbTable = 1;\n}",
      "doc": "删除表"
    },
    {
      "name": "CreateDBNodeRequest",
      "code": "\nmessage CreateDBNodeRequest {\n\tbool isOn = 1;\n\tstring name = 2;\n\tstring description = 3;\n\tstring host = 4;\n\tint32 port = 5;\n\tstring database = 6;\n\tstring username = 7;\n\tstring password = 8;\n\tstring charset = 9;\n}",
      "doc": "创建数据库节点"
    },
    {
      "name": "ListEnabledDBNodesResponse",
      "code": "\n\nmessage ListEnabledDBNodesResponse {\n\trepeated DBNode dbNodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledDBNodeResponse",
      "code": "\n\nmessage FindEnabledDBNodeResponse {\n\tDBNode dbNode = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteDBNodeTableRequest",
      "code": "\nmessage DeleteDBNodeTableRequest {\n\tint64 dbNodeId = 1;\n\tstring dbNodeTable = 2;\n}",
      "doc": "删除表"
    },
    {
      "name": "TruncateDBNodeTableRequest",
      "code": "\nmessage TruncateDBNodeTableRequest {\n\tint64 dbNodeId = 1;\n\tstring dbNodeTable = 2;\n}",
      "doc": "清空表"
    },
    {
      "name": "CreateDBNodeResponse",
      "code": "\n\nmessage CreateDBNodeResponse {\n\tint64 dbNodeId = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteDBNodeRequest",
      "code": "\nmessage DeleteDBNodeRequest {\n\tint64 dbNodeId = 1;\n}",
      "doc": "删除节点"
    },
    {
      "name": "FindEnabledDBNodeRequest",
      "code": "\nmessage FindEnabledDBNodeRequest {\n\tint64 dbNodeId = 1;\n}",
      "doc": "根据ID查找可用的数据库节点"
    },
    {
      "name": "FindAllDBNodeTablesRequest",
      "code": "\nmessage FindAllDBNodeTablesRequest {\n\tint64 dbNodeId = 1;\n}",
      "doc": "获取所有表信息"
    },
    {
      "name": "FindAllDBNodeTablesResponse",
      "code": "\n\nmessage FindAllDBNodeTablesResponse {\n\trepeated DBTable dbNodeTables = 1;\n}",
      "doc": ""
    },
    {
      "name": "CheckDBNodeStatusResponse",
      "code": "\n\nmessage CheckDBNodeStatusResponse  {\n\tDBNodeStatus dbNodeStatus = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledDBNodesRequest",
      "code": "\nmessage CountAllEnabledDBNodesRequest {\n\n}",
      "doc": "计算可用的数据库节点数量"
    },
    {
      "name": "CheckDBNodeStatusRequest",
      "code": "\nmessage CheckDBNodeStatusRequest {\n\tint64 dbNodeId = 1;\n}",
      "doc": "检查数据库节点状态"
    },
    {
      "name": "UpdateDBNodeRequest",
      "code": "\nmessage UpdateDBNodeRequest {\n\tint64 dbNodeId = 1;\n\tstring name = 2;\n\tstring description = 3;\n\tbool isOn = 4;\n\tstring host = 5;\n\tint32 port = 6;\n\tstring database = 7;\n\tstring username = 8;\n\tstring password = 9;\n\tstring charset = 10;\n}",
      "doc": "修改数据库节点"
    },
    {
      "name": "ListEnabledDBNodesRequest",
      "code": "\nmessage ListEnabledDBNodesRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出单页的数据库节点"
    },
    {
      "name": "FindAllDNSIssuesRequest",
      "code": "\nmessage FindAllDNSIssuesRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "查找问题"
    },
    {
      "name": "FindAllDNSIssuesResponse",
      "code": "\n\nmessage FindAllDNSIssuesResponse {\n\trepeated DNSIssue issues = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledBasicDNSDomainsWithDNSProviderIdResponse",
      "code": "\n\nmessage FindAllEnabledBasicDNSDomainsWithDNSProviderIdResponse {\n\trepeated DNSDomain dnsDomains = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllDNSDomainRoutesRequest",
      "code": "\nmessage FindAllDNSDomainRoutesRequest {\n\tint64 dnsDomainId = 1;\n}",
      "doc": "查看支持的线路"
    },
    {
      "name": "ExistAvailableDomainsResponse",
      "code": "\n\nmessage ExistAvailableDomainsResponse {\n\tbool exist = 1;\n}",
      "doc": ""
    },
    {
      "name": "ExistDNSDomainRecordRequest",
      "code": "\nmessage ExistDNSDomainRecordRequest {\n\tint64 dnsDomainId = 1;\n\tstring name = 2;\n\tstring type = 3; // 解析类型，比如A, CNAME等\n\tstring route = 4; // 线路\n\tstring value = 5; // 值\n}",
      "doc": "检查域名是否在记录中"
    },
    {
      "name": "ExistDNSDomainRecordResponse",
      "code": "\n\nmessage ExistDNSDomainRecordResponse {\n\tbool isOk = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateDNSDomainRequest",
      "code": "\nmessage UpdateDNSDomainRequest {\n\tint64 dnsDomainId = 1;\n\tstring name = 2;\n\tbool isOn = 3;\n}",
      "doc": "修改域名"
    },
    {
      "name": "FindEnabledBasicDNSDomainResponse",
      "code": "\n\nmessage FindEnabledBasicDNSDomainResponse {\n\tDNSDomain dnsDomain = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledBasicDNSDomainsWithDNSProviderIdRequest",
      "code": "\nmessage FindAllEnabledBasicDNSDomainsWithDNSProviderIdRequest {\n\tint64 dnsProviderId = 1;\n}",
      "doc": "列出服务商下的所有域名基本信息"
    },
    {
      "name": "SyncDNSDomainDataResponse",
      "code": "\n\nmessage SyncDNSDomainDataResponse {\n\tbool isOk = 1;\n\tstring error = 2;\n\tbool shouldFix = 3;\n}",
      "doc": ""
    },
    {
      "name": "ExistAvailableDomainsRequest",
      "code": "\nmessage ExistAvailableDomainsRequest {\n\n}",
      "doc": "判断是否有域名可选"
    },
    {
      "name": "SyncDNSDomainsFromProviderRequest",
      "code": "\nmessage SyncDNSDomainsFromProviderRequest {\n\tint64 dnsProviderId = 1;\n}",
      "doc": "从服务商同步域名"
    },
    {
      "name": "CreateDNSDomainRequest",
      "code": "\nmessage CreateDNSDomainRequest {\n\tint64 dnsProviderId = 1;\n\tstring name = 2;\n}",
      "doc": "创建域名"
    },
    {
      "name": "DeleteDNSDomainRequest",
      "code": "\nmessage DeleteDNSDomainRequest {\n\tint64 dnsDomainId = 1;\n}",
      "doc": "删除域名"
    },
    {
      "name": "SyncDNSDomainDataRequest",
      "code": "\nmessage SyncDNSDomainDataRequest {\n\tint64 dnsDomainId = 1;\n\tint64 nodeClusterId = 2; // 如果指定，表示只更新单个集群ID\n}",
      "doc": "同步域名数据"
    },
    {
      "name": "FindAllDNSDomainRoutesResponse",
      "code": "\n\nmessage FindAllDNSDomainRoutesResponse {\n\trepeated DNSRoute routes = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledDNSDomainsWithDNSProviderIdResponse",
      "code": "\n\nmessage FindAllEnabledDNSDomainsWithDNSProviderIdResponse {\n\trepeated DNSDomain dnsDomains = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateDNSDomainResponse",
      "code": "\n\nmessage CreateDNSDomainResponse {\n\tint64 dnsDomainId = 1;\n}",
      "doc": ""
    },
    {
      "name": "RecoverDNSDomainRequest",
      "code": "\nmessage RecoverDNSDomainRequest {\n\tint64 dnsDomainId = 1;\n}",
      "doc": "恢复删除的域名"
    },
    {
      "name": "FindEnabledDNSDomainRequest",
      "code": "\nmessage FindEnabledDNSDomainRequest {\n\tint64 dnsDomainId = 1;\n}",
      "doc": "查询单个域名信息"
    },
    {
      "name": "FindEnabledDNSDomainResponse",
      "code": "\n\nmessage FindEnabledDNSDomainResponse {\n\tDNSDomain dnsDomain = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledBasicDNSDomainRequest",
      "code": "\nmessage FindEnabledBasicDNSDomainRequest {\n\tint64 dnsDomainId = 1;\n}",
      "doc": "查询单个域名的基础信息"
    },
    {
      "name": "CountAllEnabledDNSDomainsWithDNSProviderIdRequest",
      "code": "\nmessage CountAllEnabledDNSDomainsWithDNSProviderIdRequest {\n\tint64 dnsProviderId = 1;\n}",
      "doc": "计算服务商下的域名数量"
    },
    {
      "name": "FindAllEnabledDNSDomainsWithDNSProviderIdRequest",
      "code": "\nmessage FindAllEnabledDNSDomainsWithDNSProviderIdRequest {\n\tint64 dnsProviderId = 1;\n}",
      "doc": "列出服务商下的所有域名"
    },
    {
      "name": "SyncDNSDomainsFromProviderResponse",
      "code": "\n\nmessage SyncDNSDomainsFromProviderResponse {\n\tbool hasChanges = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledDNSProvidersResponse",
      "code": "\n\nmessage FindAllEnabledDNSProvidersResponse {\n\trepeated DNSProvider dnsProviders = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledDNSProviderResponse",
      "code": "\n\nmessage FindEnabledDNSProviderResponse {\n\tDNSProvider dnsProvider = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledDNSProvidersWithTypeRequest",
      "code": "\nmessage FindAllEnabledDNSProvidersWithTypeRequest {\n\tstring providerTypeCode = 1;\n}",
      "doc": "取得某个类型的所有服务商"
    },
    {
      "name": "CreateDNSProviderRequest",
      "code": "\nmessage CreateDNSProviderRequest {\n\tstring name = 1;\n\tstring type = 2;\n\tbytes apiParamsJSON = 3;\n}",
      "doc": "创建服务商"
    },
    {
      "name": "CountAllEnabledDNSProvidersRequest",
      "code": "\nmessage CountAllEnabledDNSProvidersRequest {\n\tint64 adminId = 1;\n\tint64 userId = 2;\n\tstring keyword = 3;\n\tstring domain = 4;\n\tstring type = 5;\n}",
      "doc": "计算服务商数量"
    },
    {
      "name": "ListEnabledDNSProvidersRequest",
      "code": "\nmessage ListEnabledDNSProvidersRequest {\n\tint64 adminId = 1;\n\tint64 userId = 2;\n\tstring keyword = 5;\n\tstring domain = 6;\n\tstring type = 7;\n\tint64 offset = 3;\n\tint64 size = 4;\n}",
      "doc": "列出单页的服务商信息"
    },
    {
      "name": "DNSProviderType",
      "code": "\n\nmessage DNSProviderType {\n\tstring name = 1;\n\tstring code = 2;\n\tstring description = 3;\n}",
      "doc": ""
    },
    {
      "name": "DeleteDNSProviderRequest",
      "code": "\nmessage DeleteDNSProviderRequest {\n\tint64 dnsProviderId = 1;\n}",
      "doc": "删除服务商"
    },
    {
      "name": "FindAllDNSProviderTypesRequest",
      "code": "\nmessage FindAllDNSProviderTypesRequest {\n\n}",
      "doc": "取得所有服务商类型"
    },
    {
      "name": "UpdateDNSProviderRequest",
      "code": "\nmessage UpdateDNSProviderRequest {\n\tint64 dnsProviderId = 1;\n\tstring name = 2;\n\tbytes apiParamsJSON = 3;\n}",
      "doc": "修改服务商"
    },
    {
      "name": "ListEnabledDNSProvidersResponse",
      "code": "\n\nmessage ListEnabledDNSProvidersResponse {\n\trepeated DNSProvider dnsProviders = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledDNSProviderRequest",
      "code": "\nmessage FindEnabledDNSProviderRequest {\n\tint64 dnsProviderId = 1;\n}",
      "doc": "查找单个服务商"
    },
    {
      "name": "FindAllDNSProviderTypesResponse",
      "code": "\n\nmessage FindAllDNSProviderTypesResponse {\n\trepeated DNSProviderType providerTypes = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledDNSProvidersWithTypeResponse",
      "code": "\n\nmessage FindAllEnabledDNSProvidersWithTypeResponse {\n\trepeated DNSProvider dnsProviders = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateDNSProviderResponse",
      "code": "\n\nmessage CreateDNSProviderResponse {\n\tint64 dnsProviderId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledDNSProvidersRequest",
      "code": "\nmessage FindAllEnabledDNSProvidersRequest {\n\tint64 adminId = 1;\n\tint64 userId = 2;\n}",
      "doc": "查找所有的DNS服务商"
    },
    {
      "name": "ExistsDNSTasksRequest",
      "code": "\nmessage ExistsDNSTasksRequest {\n\n}",
      "doc": "检查是否有正在执行的任务"
    },
    {
      "name": "ExistsDNSTasksResponse",
      "code": "\n\nmessage ExistsDNSTasksResponse {\n\tbool existTasks = 1;\n\tbool existError = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindAllDoingDNSTasksRequest",
      "code": "\nmessage FindAllDoingDNSTasksRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "查找需要通知的任务"
    },
    {
      "name": "FindAllDoingDNSTasksResponse",
      "code": "\n\nmessage FindAllDoingDNSTasksResponse {\n\trepeated DNSTask dnsTasks = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteDNSTaskRequest",
      "code": "\nmessage DeleteDNSTaskRequest {\n\tint64 dnsTaskId = 1;\n}",
      "doc": "删除任务"
    },
    {
      "name": "CreateFileResponse",
      "code": "\n\nmessage CreateFileResponse {\n\tint64 fileId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateFileFinishedRequest",
      "code": "\nmessage UpdateFileFinishedRequest {\n\tint64 fileId = 1;\n}",
      "doc": "将文件置为已完成"
    },
    {
      "name": "FindEnabledFileRequest",
      "code": "\nmessage FindEnabledFileRequest {\n\tint64 fileId = 1;\n}",
      "doc": "查找文件"
    },
    {
      "name": "FindEnabledFileResponse",
      "code": "\n\nmessage FindEnabledFileResponse {\n\tFile file = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateFileRequest",
      "code": "\nmessage CreateFileRequest {\n\tstring filename = 1;\n\tint64 size = 2;\n\tbool isPublic = 3;\n}",
      "doc": "创建文件"
    },
    {
      "name": "DownloadFileChunkResponse",
      "code": "\n\nmessage DownloadFileChunkResponse {\n\tFileChunk fileChunk = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateFileChunkRequest",
      "code": "\nmessage CreateFileChunkRequest {\n\tint64 fileId = 1;\n\tbytes data = 2;\n}",
      "doc": "创建文件片段"
    },
    {
      "name": "CreateFileChunkResponse",
      "code": "\n\nmessage CreateFileChunkResponse {\n\tint64 fileChunkId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllFileChunkIdsRequest",
      "code": "\nmessage FindAllFileChunkIdsRequest {\n\tint64 fileId = 1;\n}",
      "doc": "获取的一个文件的所有片段IDs"
    },
    {
      "name": "FindAllFileChunkIdsResponse",
      "code": "\n\nmessage FindAllFileChunkIdsResponse {\n\trepeated int64 fileChunkIds = 1;\n}",
      "doc": ""
    },
    {
      "name": "DownloadFileChunkRequest",
      "code": "\nmessage DownloadFileChunkRequest {\n\tint64 fileChunkId = 1;\n}",
      "doc": "下载文件片段"
    },
    {
      "name": "ComposeFirewallGlobalBoardRequest",
      "code": "\nmessage ComposeFirewallGlobalBoardRequest {\n\n}",
      "doc": "组合看板数据"
    },
    {
      "name": "NotifyHTTPFirewallEventRequest",
      "code": "\nmessage NotifyHTTPFirewallEventRequest {\n\tint64 serverId = 1;\n\tint64 httpFirewallPolicyId = 2;\n\tint64 httpFirewallRuleGroupId = 3;\n\tint64 httpFirewallRuleSetId = 4;\n\tint64 createdAt = 5;\n}",
      "doc": "发送告警(notify)消息"
    },
    {
      "name": "CountFirewallDailyBlocksRequest",
      "code": "\nmessage CountFirewallDailyBlocksRequest {\n\n}",
      "doc": "读取当前Block动作次数"
    },
    {
      "name": "CountFirewallDailyBlocksResponse",
      "code": "\n\nmessage CountFirewallDailyBlocksResponse {\n\tint64 countBlocks = 1;\n}",
      "doc": ""
    },
    {
      "name": "ComposeFirewallGlobalBoardResponse",
      "code": "\n\nmessage ComposeFirewallGlobalBoardResponse {\n\tint64 countDailyLogs = 1;\n\tint64 countDailyBlocks = 2;\n\tint64 countDailyCaptcha = 3;\n\tint64 countWeeklyBlocks = 4;\n\n\trepeated HTTPFirewallRuleGroupStat httpFirewallRuleGroups = 30;\n\trepeated DailyStat dailyStats = 31;\n\trepeated HourlyStat hourlyStats = 32;\n\trepeated NodeStat topNodeStats = 33;\n\trepeated DomainStat topDomainStats = 34;\n\trepeated CountryStat topCountryStats = 35;\n\n\n\tmessage HTTPFirewallRuleGroupStat {\n\t\tHTTPFirewallRuleGroup httpFirewallRuleGroup = 1;\n\t\tint64 count = 2;\n\t}\n\n\n\tmessage HourlyStat {\n\t\tstring hour = 1;\n\t\tint64 countLogs = 2;\n\t\tint64 countCaptcha = 3;\n\t\tint64 countBlocks = 4;\n\t}\n\n\n\tmessage DailyStat {\n\t\tstring day = 1;\n\t\tint64 countLogs = 2;\n\t\tint64 countCaptcha = 3;\n\t\tint64 countBlocks = 4;\n\t}\n\n\n\tmessage NodeStat {\n\t\tint64 nodeId = 1;\n\t\tstring nodeName = 2;\n\t\tint64 countRequests = 3;\n\t\tint64 bytes = 4;\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n\n\n\tmessage DomainStat {\n\t\tint64 serverId = 1;\n\t\tstring domain = 2;\n\t\tint64 countRequests = 3;\n\t\tint64 bytes = 4;\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n\n\n\tmessage CountryStat {\n\t\tstring countryName = 1;\n\t\tint64 bytes = 2;\n\t\tint64 countRequests = 3;\n\t\tfloat percent = 4; // 流量占比\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "CreateHTTPAccessLogsResponse",
      "code": "\n\nmessage CreateHTTPAccessLogsResponse {\n\n}",
      "doc": ""
    },
    {
      "name": "ListHTTPAccessLogsRequest",
      "code": "\nmessage ListHTTPAccessLogsRequest {\n\tstring requestId = 1; // 上一页请求ID，可选\n\tint64 serverId = 2; // 服务ID\n\tint64 size = 3; // 单页条数\n\tstring day = 4; // 日期，格式YYYYMMDD\n\tstring hourFrom = 17; // 开始小时\n\tstring hourTo = 18; // 结束小时\n\tbool reverse = 5; // 是否反向查找，可选\n\tbool hasError = 6; // 是否有错误，可选\n\tint64 firewallPolicyId = 7; // WAF策略ID，可选\n\tint64 firewallRuleGroupId = 8; // WAF分组ID，可选\n\tint64 firewallRuleSetId = 9; // WAF规则集ID，可选\n\tint64 userId = 10; // 用户ID\n\tbool hasFirewallPolicy = 11; // 是否有WAF策略\n\tstring keyword = 12; // 关键词\n\tstring ip = 13;\n\tstring domain = 14;\n\tint64 nodeClusterId = 15;\n\tint64 nodeId = 16;\n\tint32 partition = 19; // 分区\n}",
      "doc": "列出往前的单页访问日志"
    },
    {
      "name": "ListHTTPAccessLogsResponse",
      "code": "\n\nmessage ListHTTPAccessLogsResponse {\n\trepeated HTTPAccessLog accessLogs = 1 [deprecated = true];\n\trepeated HTTPAccessLog httpAccessLogs = 4;\n\tstring requestId = 2;\n\tbool hasMore = 3;\n}",
      "doc": ""
    },
    {
      "name": "FindHTTPAccessLogRequest",
      "code": "\nmessage FindHTTPAccessLogRequest {\n\tstring requestId = 1;\n}",
      "doc": "查找单个日志"
    },
    {
      "name": "FindHTTPAccessLogResponse",
      "code": "\n\nmessage FindHTTPAccessLogResponse {\n\tHTTPAccessLog httpAccessLog = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindHTTPAccessLogPartitionsRequest",
      "code": "\nmessage FindHTTPAccessLogPartitionsRequest {\n\tstring day = 1; // YYYYMMDD\n}",
      "doc": "查找日志分区"
    },
    {
      "name": "FindHTTPAccessLogPartitionsResponse",
      "code": "\n\nmessage FindHTTPAccessLogPartitionsResponse {\n\trepeated int32  partitions = 1;\n\trepeated int32 reversePartitions = 2;\n}",
      "doc": ""
    },
    {
      "name": "CreateHTTPAccessLogsRequest",
      "code": "\nmessage CreateHTTPAccessLogsRequest {\n\trepeated HTTPAccessLog httpAccessLogs = 1;\n}",
      "doc": "创建访问日志"
    },
    {
      "name": "CreateHTTPAccessLogPolicyRequest",
      "code": "\nmessage CreateHTTPAccessLogPolicyRequest {\n\tstring name = 1;\n\tstring type = 2;\n\tbytes optionsJSON = 3;\n\tbytes condsJSON = 4;\n\tbool isPublic = 5;\n\tbool firewallOnly = 6;\n}",
      "doc": "创建访问日志策略"
    },
    {
      "name": "CreateHTTPAccessLogPolicyResponse",
      "code": "\n\nmessage CreateHTTPAccessLogPolicyResponse {\n\tint64 httpAccessLogPolicyId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPAccessLogPolicyRequest",
      "code": "\nmessage UpdateHTTPAccessLogPolicyRequest {\n\tint64 httpAccessLogPolicyId = 1;\n\tstring name = 2;\n\tbool isOn = 3;\n\tbytes optionsJSON = 4;\n\tbytes condsJSON = 5;\n\tbool isPublic = 6;\n\tbool firewallOnly = 7;\n}",
      "doc": "修改访问日志策略"
    },
    {
      "name": "DeleteHTTPAccessLogPolicyRequest",
      "code": "\nmessage DeleteHTTPAccessLogPolicyRequest {\n\tint64 httpAccessLogPolicyId = 1;\n}",
      "doc": "删除策略"
    },
    {
      "name": "WriteHTTPAccessLogPolicyRequest",
      "code": "\nmessage WriteHTTPAccessLogPolicyRequest {\n\tint64 httpAccessLogPolicyId = 1;\n\tHTTPAccessLog httpAccessLog = 2;\n}",
      "doc": "测试写入某个访问日志策略"
    },
    {
      "name": "CountAllEnabledHTTPAccessLogPoliciesRequest",
      "code": "\nmessage CountAllEnabledHTTPAccessLogPoliciesRequest {\n\n}",
      "doc": "计算访问日志策略数量"
    },
    {
      "name": "ListEnabledHTTPAccessLogPoliciesRequest",
      "code": "\nmessage ListEnabledHTTPAccessLogPoliciesRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出单页访问日志策略"
    },
    {
      "name": "ListEnabledHTTPAccessLogPoliciesResponse",
      "code": "\n\nmessage ListEnabledHTTPAccessLogPoliciesResponse {\n\trepeated HTTPAccessLogPolicy httpAccessLogPolicies = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledHTTPAccessLogPolicyRequest",
      "code": "\nmessage FindEnabledHTTPAccessLogPolicyRequest {\n\tint64 httpAccessLogPolicyId = 1;\n}",
      "doc": "查找单个访问日志策略"
    },
    {
      "name": "FindEnabledHTTPAccessLogPolicyResponse",
      "code": "\n\nmessage FindEnabledHTTPAccessLogPolicyResponse {\n\tHTTPAccessLogPolicy httpAccessLogPolicy = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateHTTPAuthPolicyRequest",
      "code": "\nmessage CreateHTTPAuthPolicyRequest {\n\tstring name = 1;\n\tstring type = 2;\n\tbytes paramsJSON = 3;\n}",
      "doc": "创建策略"
    },
    {
      "name": "CreateHTTPAuthPolicyResponse",
      "code": "\n\nmessage CreateHTTPAuthPolicyResponse {\n\tint64 httpAuthPolicyId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPAuthPolicyRequest",
      "code": "\nmessage UpdateHTTPAuthPolicyRequest {\n\tint64 httpAuthPolicyId = 1;\n\tstring name = 2;\n\tbytes paramsJSON = 3;\n\tbool isOn = 4;\n}",
      "doc": "修改策略"
    },
    {
      "name": "FindEnabledHTTPAuthPolicyRequest",
      "code": "\nmessage FindEnabledHTTPAuthPolicyRequest {\n\tint64 httpAuthPolicyId = 1;\n}",
      "doc": "查找策略信息"
    },
    {
      "name": "FindEnabledHTTPAuthPolicyResponse",
      "code": "\n\nmessage FindEnabledHTTPAuthPolicyResponse {\n\tHTTPAuthPolicy httpAuthPolicy = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledHTTPCachePoliciesRequest",
      "code": "\nmessage FindAllEnabledHTTPCachePoliciesRequest {\n\n}",
      "doc": "获取所有可用策略"
    },
    {
      "name": "CreateHTTPCachePolicyResponse",
      "code": "\n\nmessage CreateHTTPCachePolicyResponse {\n\tint64 httpCachePolicyId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPCachePolicyRequest",
      "code": "\nmessage UpdateHTTPCachePolicyRequest {\n\tint64 httpCachePolicyId = 1;\n\tbool isOn = 2;\n\tstring name = 3;\n\tstring description = 4;\n\tbytes capacityJSON = 5;\n\tint64 maxKeys = 6;\n\tbytes maxSizeJSON = 7;\n\tstring type = 8;\n\tbytes optionsJSON = 9;\n\tbool syncCompressionCache = 10;\n}",
      "doc": "修改缓存策略"
    },
    {
      "name": "FindEnabledHTTPCachePolicyRequest",
      "code": "\nmessage FindEnabledHTTPCachePolicyRequest {\n\tint64 httpCachePolicyId = 1;\n}",
      "doc": "查找单个缓存策略信息"
    },
    {
      "name": "FindEnabledHTTPCachePolicyResponse",
      "code": "\n\nmessage FindEnabledHTTPCachePolicyResponse {\n\tHTTPCachePolicy httpCachePolicy = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteHTTPCachePolicyRequest",
      "code": "\nmessage DeleteHTTPCachePolicyRequest {\n\tint64 httpCachePolicyId = 1;\n}",
      "doc": "删除缓存策略"
    },
    {
      "name": "CountAllEnabledHTTPCachePoliciesRequest",
      "code": "\nmessage CountAllEnabledHTTPCachePoliciesRequest {\n\tstring keyword = 1;\n\tint64 nodeClusterId = 2;\n\tstring type = 3;\n}",
      "doc": "计算缓存策略数量"
    },
    {
      "name": "ListEnabledHTTPCachePoliciesRequest",
      "code": "\nmessage ListEnabledHTTPCachePoliciesRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n\tstring keyword = 3;\n\tint64 nodeClusterId = 4;\n\tstring type = 5;\n}",
      "doc": "列出单页的缓存策略"
    },
    {
      "name": "FindEnabledHTTPCachePolicyConfigRequest",
      "code": "\nmessage FindEnabledHTTPCachePolicyConfigRequest {\n\tint64 httpCachePolicyId = 1;\n}",
      "doc": "查找单个缓存策略配置"
    },
    {
      "name": "UpdateHTTPCachePolicyRefsRequest",
      "code": "\nmessage UpdateHTTPCachePolicyRefsRequest {\n\tint64 httpCachePolicyId = 1;\n\tbytes refsJSON = 2;\n}",
      "doc": "设置缓存策略的默认条件"
    },
    {
      "name": "FindAllEnabledHTTPCachePoliciesResponse",
      "code": "\n\nmessage FindAllEnabledHTTPCachePoliciesResponse {\n\trepeated HTTPCachePolicy cachePolicies = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListEnabledHTTPCachePoliciesResponse",
      "code": "\n\nmessage ListEnabledHTTPCachePoliciesResponse {\n\tbytes httpCachePoliciesJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateHTTPCachePolicyRequest",
      "code": "\nmessage CreateHTTPCachePolicyRequest {\n\tbool isOn = 1;\n\tstring name = 2;\n\tstring description = 3;\n\tbytes capacityJSON = 4;\n\tint64 maxKeys = 5;\n\tbytes maxSizeJSON = 6;\n\tstring type = 7;\n\tbytes optionsJSON = 8;\n\tbool syncCompressionCache = 9;\n}",
      "doc": "创建缓存策略"
    },
    {
      "name": "FindEnabledHTTPCachePolicyConfigResponse",
      "code": "\n\nmessage FindEnabledHTTPCachePolicyConfigResponse {\n\tbytes httpCachePolicyJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateHTTPCacheTaskResponse",
      "code": "\n\nmessage CreateHTTPCacheTaskResponse {\n\tint64 httpCacheTaskId = 1;\n\tint64 countKeys = 2;\n}",
      "doc": ""
    },
    {
      "name": "CountHTTPCacheTasksRequest",
      "code": "\nmessage CountHTTPCacheTasksRequest {\n\n}",
      "doc": "计算任务总数量"
    },
    {
      "name": "CreateHTTPCacheTaskRequest",
      "code": "\nmessage CreateHTTPCacheTaskRequest {\n\tstring type = 1;\n\tstring keyType = 2;\n\trepeated string keys = 3;\n}",
      "doc": "创建任务"
    },
    {
      "name": "CountDoingHTTPCacheTasksRequest",
      "code": "\nmessage CountDoingHTTPCacheTasksRequest {\n\n}",
      "doc": "计算正在执行的任务数量"
    },
    {
      "name": "FindEnabledHTTPCacheTaskRequest",
      "code": "\nmessage FindEnabledHTTPCacheTaskRequest {\n\tint64 httpCacheTaskId = 1;\n}",
      "doc": "查找单个任务"
    },
    {
      "name": "FindEnabledHTTPCacheTaskResponse",
      "code": "\n\nmessage FindEnabledHTTPCacheTaskResponse {\n\tHTTPCacheTask httpCacheTask = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListHTTPCacheTasksRequest",
      "code": "\nmessage ListHTTPCacheTasksRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出单页任务"
    },
    {
      "name": "ListHTTPCacheTasksResponse",
      "code": "\n\nmessage ListHTTPCacheTasksResponse {\n\trepeated HTTPCacheTask httpCacheTasks = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteHTTPCacheTaskRequest",
      "code": "\nmessage DeleteHTTPCacheTaskRequest {\n\tint64 httpCacheTaskId = 1;\n}",
      "doc": "删除任务"
    },
    {
      "name": "ResetHTTPCacheTaskRequest",
      "code": "\nmessage ResetHTTPCacheTaskRequest {\n\tint64 httpCacheTaskId = 1;\n}",
      "doc": "重置任务状态"
    },
    {
      "name": "ValidateHTTPCacheTaskKeysRequest",
      "code": "\nmessage ValidateHTTPCacheTaskKeysRequest {\n\trepeated string keys = 1;\n}",
      "doc": "校验缓存Key"
    },
    {
      "name": "ValidateHTTPCacheTaskKeysResponse",
      "code": "\n\nmessage ValidateHTTPCacheTaskKeysResponse {\n\trepeated FailKey failKeys = 1;\n\n\n\tmessage FailKey {\n\t\tstring key = 1;\n\t\tstring reasonCode = 2;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "FindDoingHTTPCacheTaskKeysRequest",
      "code": "\nmessage FindDoingHTTPCacheTaskKeysRequest{\n\tint64 size = 1;\n}",
      "doc": "查找需要执行的Key"
    },
    {
      "name": "FindDoingHTTPCacheTaskKeysResponse",
      "code": "\n\nmessage FindDoingHTTPCacheTaskKeysResponse {\n\trepeated HTTPCacheTaskKey httpCacheTaskKeys = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPCacheTaskKeysStatusRequest",
      "code": "\nmessage UpdateHTTPCacheTaskKeysStatusRequest {\n\trepeated KeyResult keyResults = 1;\n\n\n\tmessage KeyResult {\n\t\tint64 id = 1;\n\t\tint64 nodeClusterId = 2; // 特意设置的冗余数据\n\t\tstring error = 3;\n\t}\n}",
      "doc": "更新一组Key状态"
    },
    {
      "name": "CreateHTTPFastcgiRequest",
      "code": "\nmessage CreateHTTPFastcgiRequest {\n\tbool isOn = 1;\n\tstring address = 2;\n\tbytes paramsJSON = 3;\n\tbytes readTimeoutJSON = 4;\n\tbytes connTimeoutJSON = 5;\n\tint32 poolSize = 6;\n\tstring pathInfoPattern = 7;\n}",
      "doc": "创建Fastcgi服务"
    },
    {
      "name": "CreateHTTPFastcgiResponse",
      "code": "\n\nmessage CreateHTTPFastcgiResponse {\n\tint64 httpFastcgiId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPFastcgiRequest",
      "code": "\nmessage UpdateHTTPFastcgiRequest {\n\tint64 httpFastcgiId = 1;\n\tbool isOn = 2;\n\tstring address = 3;\n\tbytes paramsJSON = 4;\n\tbytes readTimeoutJSON = 5;\n\tbytes connTimeoutJSON = 6;\n\tint32 poolSize = 7;\n\tstring pathInfoPattern = 8;\n}",
      "doc": "修改Fastcgi服务"
    },
    {
      "name": "FindEnabledHTTPFastcgiRequest",
      "code": "\nmessage FindEnabledHTTPFastcgiRequest {\n\tint64 httpFastcgiId = 1;\n}",
      "doc": "获取Fastcgi详情"
    },
    {
      "name": "FindEnabledHTTPFastcgiResponse",
      "code": "\n\nmessage FindEnabledHTTPFastcgiResponse {\n\tHTTPFastcgi httpFastcgi = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledHTTPFastcgiConfigRequest",
      "code": "\nmessage FindEnabledHTTPFastcgiConfigRequest {\n\tint64 httpFastcgiId = 1;\n}",
      "doc": "获取Fastcgi配置"
    },
    {
      "name": "FindEnabledHTTPFastcgiConfigResponse",
      "code": "\n\nmessage FindEnabledHTTPFastcgiConfigResponse {\n\tbytes httpFastcgiJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteHTTPFirewallPolicyRequest",
      "code": "\nmessage DeleteHTTPFirewallPolicyRequest {\n\tint64 httpFirewallPolicyId = 1;\n}",
      "doc": "删除某个防火墙策略"
    },
    {
      "name": "FindEnabledHTTPFirewallPolicyConfigResponse",
      "code": "\n\nmessage FindEnabledHTTPFirewallPolicyConfigResponse {\n\tbytes httpFirewallPolicyJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateHTTPFirewallPolicyRequest",
      "code": "\nmessage CreateHTTPFirewallPolicyRequest {\n\tbool isOn = 1;\n\tstring name = 2;\n\tstring description = 3;\n\trepeated string httpFirewallGroupCodes = 4;\n\tint64 serverId = 5;\n\tint64 serverGroupId = 6;\n}",
      "doc": "创建防火墙策略"
    },
    {
      "name": "CreateHTTPFirewallPolicyResponse",
      "code": "\n\nmessage CreateHTTPFirewallPolicyResponse {\n\tint64 httpFirewallPolicyId = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateEmptyHTTPFirewallPolicyRequest",
      "code": "\nmessage CreateEmptyHTTPFirewallPolicyRequest {\n\tbool isOn = 1;\n\tstring name = 2;\n\tstring description = 3;\n\tint64 serverId = 4;\n\tint64 serverGroupId = 5;\n}",
      "doc": "创建空防火墙策略"
    },
    {
      "name": "CreateEmptyHTTPFirewallPolicyResponse",
      "code": "\n\nmessage CreateEmptyHTTPFirewallPolicyResponse {\n\tint64 httpFirewallPolicyId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPFirewallPolicyRequest",
      "code": "\nmessage UpdateHTTPFirewallPolicyRequest {\n\tint64 httpFirewallPolicyId = 1;\n\tbool isOn = 2;\n\tstring name = 3;\n\tstring description = 4;\n\trepeated string firewallGroupCodes = 5;\n\tbytes blockOptionsJSON = 6;\n\tbytes captchaOptionsJSON = 11;\n\tstring mode = 7;\n\tbool useLocalFirewall = 8;\n\tbytes synFloodJSON = 9;\n\tbytes LogJSON = 10;\n}",
      "doc": "修改防火墙策略"
    },
    {
      "name": "UpdateHTTPFirewallPolicyGroupsRequest",
      "code": "\nmessage UpdateHTTPFirewallPolicyGroupsRequest {\n\tint64 httpFirewallPolicyId = 1;\n\tbytes inboundJSON = 2;\n\tbytes outboundJSON = 3;\n}",
      "doc": "修改分组信息"
    },
    {
      "name": "FindEnabledHTTPFirewallPolicyRequest",
      "code": "\nmessage FindEnabledHTTPFirewallPolicyRequest {\n\tint64 httpFirewallPolicyId = 1;\n}",
      "doc": "获取防火墙的基本信息"
    },
    {
      "name": "FindEnabledHTTPFirewallPolicyResponse",
      "code": "\n\nmessage FindEnabledHTTPFirewallPolicyResponse {\n\tHTTPFirewallPolicy httpFirewallPolicy = 1;\n}",
      "doc": ""
    },
    {
      "name": "CheckHTTPFirewallPolicyIPStatusRequest",
      "code": "\nmessage CheckHTTPFirewallPolicyIPStatusRequest {\n\tint64 httpFirewallPolicyId = 1;\n\tstring ip = 2;\n}",
      "doc": "检查IP状态"
    },
    {
      "name": "CheckHTTPFirewallPolicyIPStatusResponse",
      "code": "\n\nmessage CheckHTTPFirewallPolicyIPStatusResponse {\n\tbool isOk = 1; // 是否查询成功\n\tstring error = 2;\n\tbool isFound = 3; // 是否找到\n\tbool isAllowed = 4; // 是否允许\n\tIPList ipList = 5; // 匹配的IPList\n\tIPItem ipItem = 6; // 匹配的IPItem\n\tRegionCountry regionCountry = 7; // 匹配到封禁的地区\n\tRegionProvince regionProvince = 8; // 匹配到封禁的省份\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledHTTPFirewallPoliciesResponse",
      "code": "\n\nmessage FindAllEnabledHTTPFirewallPoliciesResponse {\n\trepeated HTTPFirewallPolicy firewallPolicies = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledHTTPFirewallPolicyConfigRequest",
      "code": "\nmessage FindEnabledHTTPFirewallPolicyConfigRequest {\n\tint64 httpFirewallPolicyId = 1;\n}",
      "doc": "查找单个防火墙配置"
    },
    {
      "name": "ImportHTTPFirewallPolicyRequest",
      "code": "\nmessage ImportHTTPFirewallPolicyRequest {\n\tint64 httpFirewallPolicyId = 1;\n\tbytes httpFirewallPolicyJSON = 2;\n}",
      "doc": "导入策略数据"
    },
    {
      "name": "FindAllEnabledHTTPFirewallPoliciesRequest",
      "code": "\nmessage FindAllEnabledHTTPFirewallPoliciesRequest {\n\n}",
      "doc": "获取所有可用策略"
    },
    {
      "name": "UpdateHTTPFirewallInboundConfigRequest",
      "code": "\nmessage UpdateHTTPFirewallInboundConfigRequest {\n\tint64 httpFirewallPolicyId = 1;\n\tbytes inboundJSON = 2;\n}",
      "doc": "修改inbound信息"
    },
    {
      "name": "CountAllEnabledHTTPFirewallPoliciesRequest",
      "code": "\nmessage CountAllEnabledHTTPFirewallPoliciesRequest {\n\tstring keyword = 1;\n\tint64 nodeClusterId = 2;\n}",
      "doc": "计算可用的防火墙策略数量"
    },
    {
      "name": "ListEnabledHTTPFirewallPoliciesRequest",
      "code": "\nmessage ListEnabledHTTPFirewallPoliciesRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n\tstring keyword = 3;\n\tint64 nodeClusterId = 4;\n}",
      "doc": "列出单页的防火墙策略"
    },
    {
      "name": "ListEnabledHTTPFirewallPoliciesResponse",
      "code": "\n\nmessage ListEnabledHTTPFirewallPoliciesResponse {\n\trepeated HTTPFirewallPolicy httpFirewallPolicies = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPFirewallRuleGroupIsOnRequest",
      "code": "\nmessage UpdateHTTPFirewallRuleGroupIsOnRequest {\n\tint64 firewallRuleGroupId = 1;\n\tbool isOn = 2;\n}",
      "doc": "设置是否启用分组"
    },
    {
      "name": "FindEnabledHTTPFirewallRuleGroupConfigRequest",
      "code": "\nmessage FindEnabledHTTPFirewallRuleGroupConfigRequest {\n\tint64 firewallRuleGroupId = 1;\n}",
      "doc": "获取分组配置"
    },
    {
      "name": "UpdateHTTPFirewallRuleGroupRequest",
      "code": "\nmessage UpdateHTTPFirewallRuleGroupRequest {\n\tint64 firewallRuleGroupId = 1;\n\tbool isOn = 2;\n\tstring name = 3;\n\tstring description = 4;\n\tstring code = 5;\n}",
      "doc": "修改分组"
    },
    {
      "name": "FindEnabledHTTPFirewallRuleGroupConfigResponse",
      "code": "\n\nmessage FindEnabledHTTPFirewallRuleGroupConfigResponse {\n\tbytes firewallRuleGroupJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledHTTPFirewallRuleGroupRequest",
      "code": "\nmessage FindEnabledHTTPFirewallRuleGroupRequest {\n\tint64 firewallRuleGroupId = 1;\n}",
      "doc": "获取分组信息"
    },
    {
      "name": "FindEnabledHTTPFirewallRuleGroupResponse",
      "code": "\n\nmessage FindEnabledHTTPFirewallRuleGroupResponse {\n\tHTTPFirewallRuleGroup firewallRuleGroup = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPFirewallRuleGroupSetsRequest",
      "code": "\nmessage UpdateHTTPFirewallRuleGroupSetsRequest {\n\tint64 firewallRuleGroupId = 1;\n\tbytes firewallRuleSetsJSON = 2;\n}",
      "doc": "修改分组的规则集"
    },
    {
      "name": "AddHTTPFirewallRuleGroupSetRequest",
      "code": "\nmessage AddHTTPFirewallRuleGroupSetRequest {\n\tint64 firewallRuleGroupId = 1;\n\tbytes firewallRuleSetConfigJSON = 2;\n}",
      "doc": "添加规则集"
    },
    {
      "name": "CreateHTTPFirewallRuleGroupRequest",
      "code": "\nmessage CreateHTTPFirewallRuleGroupRequest {\n\tbool isOn = 1;\n\tstring name = 2;\n\tstring code = 4;\n\tstring description = 3;\n}",
      "doc": "创建分组"
    },
    {
      "name": "CreateHTTPFirewallRuleGroupResponse",
      "code": "\n\nmessage CreateHTTPFirewallRuleGroupResponse {\n\tint64 firewallRuleGroupId = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateOrUpdateHTTPFirewallRuleSetFromConfigRequest",
      "code": "\nmessage CreateOrUpdateHTTPFirewallRuleSetFromConfigRequest {\n\tbytes firewallRuleSetConfigJSON = 1;\n}",
      "doc": "根据配置创建或修改规则集"
    },
    {
      "name": "CreateOrUpdateHTTPFirewallRuleSetFromConfigResponse",
      "code": "\n\nmessage CreateOrUpdateHTTPFirewallRuleSetFromConfigResponse {\n\tint64 firewallRuleSetId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPFirewallRuleSetIsOnRequest",
      "code": "\nmessage UpdateHTTPFirewallRuleSetIsOnRequest {\n\tint64 firewallRuleSetId = 1;\n\tbool isOn = 2;\n}",
      "doc": "设置开启状态"
    },
    {
      "name": "FindEnabledHTTPFirewallRuleSetConfigRequest",
      "code": "\nmessage FindEnabledHTTPFirewallRuleSetConfigRequest {\n\tint64 firewallRuleSetId = 1;\n}",
      "doc": "查找规则集配置"
    },
    {
      "name": "FindEnabledHTTPFirewallRuleSetConfigResponse",
      "code": "\n\nmessage FindEnabledHTTPFirewallRuleSetConfigResponse {\n\tbytes firewallRuleSetJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledHTTPFirewallRuleSetRequest",
      "code": "\nmessage FindEnabledHTTPFirewallRuleSetRequest {\n\tint64 firewallRuleSetId = 1;\n}",
      "doc": "查找规则集"
    },
    {
      "name": "FindEnabledHTTPFirewallRuleSetResponse",
      "code": "\n\nmessage FindEnabledHTTPFirewallRuleSetResponse {\n\tHTTPFirewallRuleSet firewallRuleSet = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledGzipConfigResponse",
      "code": "\n\nmessage FindEnabledGzipConfigResponse {\n\tbytes httpGzipJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPGzipRequest",
      "code": "\nmessage UpdateHTTPGzipRequest {\n\tint64 httpGzipId = 1;\n\tint32 level = 2;\n\tSizeCapacity minLength = 3;\n\tSizeCapacity maxLength = 4;\n\tbytes condsJSON = 5;\n}",
      "doc": "修改Gzip配置"
    },
    {
      "name": "CreateHTTPGzipRequest",
      "code": "\nmessage CreateHTTPGzipRequest {\n\tint32 level = 1;\n\tSizeCapacity minLength = 2;\n\tSizeCapacity maxLength = 3;\n\tbytes condsJSON = 4;\n}",
      "doc": "创建Gzip配置"
    },
    {
      "name": "CreateHTTPGzipResponse",
      "code": "\n\nmessage CreateHTTPGzipResponse {\n\tint64 httpGzipId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledGzipConfigRequest",
      "code": "\nmessage FindEnabledGzipConfigRequest {\n\tint64 httpGzipId = 1;\n}",
      "doc": "查找Gzip配置"
    },
    {
      "name": "FindEnabledHTTPHeaderConfigRequest",
      "code": "\nmessage FindEnabledHTTPHeaderConfigRequest {\n\tint64 headerId = 1;\n}",
      "doc": "查找配置"
    },
    {
      "name": "FindEnabledHTTPHeaderConfigResponse",
      "code": "\n\nmessage FindEnabledHTTPHeaderConfigResponse {\n\tbytes headerJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateHTTPHeaderRequest",
      "code": "\nmessage CreateHTTPHeaderRequest {\n\tstring name = 1;\n\tstring value = 2;\n\trepeated int32 status = 3;\n\tbool disableRedirect = 4;\n\tbool shouldAppend = 5;\n\tbool shouldReplace = 6;\n\tbytes replaceValuesJSON = 7;\n\trepeated string methods = 8;\n\trepeated string domains = 9;\n}",
      "doc": "创建Header"
    },
    {
      "name": "CreateHTTPHeaderResponse",
      "code": "\n\nmessage CreateHTTPHeaderResponse {\n\tint64 headerId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPHeaderRequest",
      "code": "\nmessage UpdateHTTPHeaderRequest {\n\tint64 headerId = 1;\n\tstring name = 2;\n\tstring value = 3;\n\trepeated int32 status = 4;\n\tbool disableRedirect = 5;\n\tbool shouldAppend = 6;\n\tbool shouldReplace = 7;\n\tbytes replaceValuesJSON = 8;\n\trepeated string methods = 9;\n\trepeated string domains = 10;\n}",
      "doc": "修改Header"
    },
    {
      "name": "CreateHTTPHeaderPolicyRequest",
      "code": "\nmessage CreateHTTPHeaderPolicyRequest {\n\n}",
      "doc": "创建策略"
    },
    {
      "name": "UpdateHTTPHeaderPolicySettingHeadersRequest",
      "code": "\nmessage UpdateHTTPHeaderPolicySettingHeadersRequest {\n\tint64 headerPolicyId = 1;\n\tbytes headersJSON = 2;\n}",
      "doc": "修改SetHeaders"
    },
    {
      "name": "UpdateHTTPHeaderPolicyReplacingHeadersRequest",
      "code": "\nmessage UpdateHTTPHeaderPolicyReplacingHeadersRequest {\n\tint64 headerPolicyId = 1;\n\tbytes headersJSON = 2;\n}",
      "doc": "修改ReplaceHeaders"
    },
    {
      "name": "UpdateHTTPHeaderPolicyAddingTrailersRequest",
      "code": "\nmessage UpdateHTTPHeaderPolicyAddingTrailersRequest {\n\tint64 headerPolicyId = 1;\n\tbytes headersJSON = 2;\n}",
      "doc": "修改AddTrailers"
    },
    {
      "name": "UpdateHTTPHeaderPolicyDeletingHeadersRequest",
      "code": "\nmessage UpdateHTTPHeaderPolicyDeletingHeadersRequest {\n\tint64 headerPolicyId = 1;\n\trepeated string headerNames = 2;\n}",
      "doc": "修改删除的Headers"
    },
    {
      "name": "FindEnabledHTTPHeaderPolicyConfigRequest",
      "code": "\nmessage FindEnabledHTTPHeaderPolicyConfigRequest {\n\tint64 headerPolicyId = 1;\n}",
      "doc": "查找策略"
    },
    {
      "name": "FindEnabledHTTPHeaderPolicyConfigResponse",
      "code": "\n\nmessage FindEnabledHTTPHeaderPolicyConfigResponse {\n\tbytes headerPolicyJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateHTTPHeaderPolicyResponse",
      "code": "\n\nmessage CreateHTTPHeaderPolicyResponse {\n\tint64 headerPolicyId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPHeaderPolicyAddingHeadersRequest",
      "code": "\nmessage UpdateHTTPHeaderPolicyAddingHeadersRequest {\n\tint64 headerPolicyId = 1;\n\tbytes headersJSON = 2;\n}",
      "doc": "修改AddHeaders"
    },
    {
      "name": "FindEnabledHTTPLocationConfigRequest",
      "code": "\nmessage FindEnabledHTTPLocationConfigRequest {\n\tint64 locationId = 1;\n}",
      "doc": "查找路径规则配置"
    },
    {
      "name": "FindAndInitHTTPLocationReverseProxyConfigResponse",
      "code": "\n\nmessage FindAndInitHTTPLocationReverseProxyConfigResponse {\n\tbytes reverseProxyJSON = 1;\n\tbytes reverseProxyRefJSON = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindAndInitHTTPLocationWebConfigRequest",
      "code": "\nmessage FindAndInitHTTPLocationWebConfigRequest {\n\tint64 locationId = 1;\n}",
      "doc": "初始化Web设置"
    },
    {
      "name": "FindAndInitHTTPLocationWebConfigResponse",
      "code": "\n\nmessage FindAndInitHTTPLocationWebConfigResponse {\n\tbytes webJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPLocationReverseProxyRequest",
      "code": "\nmessage UpdateHTTPLocationReverseProxyRequest {\n\tint64 locationId = 1;\n\tbytes reverseProxyJSON = 2;\n}",
      "doc": "修改反向代理设置"
    },
    {
      "name": "CreateHTTPLocationRequest",
      "code": "\nmessage CreateHTTPLocationRequest {\n\tint64 parentId = 1;\n\tstring name = 2;\n\tstring description = 3;\n\tstring pattern = 4;\n\tbool isBreak = 5;\n\tbytes condsJSON = 6;\n\trepeated string domains = 7;\n}",
      "doc": "创建路径规则"
    },
    {
      "name": "UpdateHTTPLocationRequest",
      "code": "\nmessage UpdateHTTPLocationRequest {\n\tint64 locationId = 1;\n\tstring name = 2;\n\tstring description = 3;\n\tstring pattern = 4;\n\tbool isOn = 5;\n\tbool isBreak = 6;\n\tbytes condsJSON = 7;\n\trepeated string domains = 8;\n}",
      "doc": "修改路径规则"
    },
    {
      "name": "FindEnabledHTTPLocationConfigResponse",
      "code": "\n\nmessage FindEnabledHTTPLocationConfigResponse {\n\tbytes locationJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteHTTPLocationRequest",
      "code": "\nmessage DeleteHTTPLocationRequest {\n\tint64 locationId = 1;\n}",
      "doc": "删除路径规则"
    },
    {
      "name": "FindAndInitHTTPLocationReverseProxyConfigRequest",
      "code": "\nmessage FindAndInitHTTPLocationReverseProxyConfigRequest {\n\tint64 locationId = 1;\n}",
      "doc": "查找反向代理设置"
    },
    {
      "name": "CreateHTTPLocationResponse",
      "code": "\n\nmessage CreateHTTPLocationResponse {\n\tint64 locationId = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateHTTPPageRequest",
      "code": "\nmessage CreateHTTPPageRequest {\n\trepeated string statusList = 1;\n\tstring bodyType = 5;\n\tstring url = 2;\n\tstring body = 4;\n\tint32 newStatus = 3;\n}",
      "doc": "创建Page"
    },
    {
      "name": "CreateHTTPPageResponse",
      "code": "\n\nmessage CreateHTTPPageResponse {\n\tint64 httpPageId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPPageRequest",
      "code": "\nmessage UpdateHTTPPageRequest {\n\tint64 httpPageId = 1;\n\trepeated string statusList = 2;\n\tstring bodyType = 6;\n\tstring url = 3;\n\tstring body = 5;\n\tint32 newStatus = 4;\n}",
      "doc": "修改Page"
    },
    {
      "name": "FindEnabledHTTPPageConfigRequest",
      "code": "\nmessage FindEnabledHTTPPageConfigRequest {\n\tint64 httpPageId = 1;\n}",
      "doc": "查找单个Page配置"
    },
    {
      "name": "FindEnabledHTTPPageConfigResponse",
      "code": "\n\nmessage FindEnabledHTTPPageConfigResponse {\n\tbytes pageJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateHTTPRewriteRuleRequest",
      "code": "\nmessage CreateHTTPRewriteRuleRequest {\n\tstring pattern = 1;\n\tstring replace = 2;\n\tstring mode = 3;\n\tint32 redirectStatus = 4;\n\tbool isBreak = 5;\n\tstring proxyHost = 6;\n\tbool isOn = 7;\n\tbool withQuery = 8;\n\tbytes condsJSON = 9;\n}",
      "doc": "创建重写规则"
    },
    {
      "name": "CreateHTTPRewriteRuleResponse",
      "code": "\n\nmessage CreateHTTPRewriteRuleResponse {\n\tint64 rewriteRuleId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPRewriteRuleRequest",
      "code": "\nmessage UpdateHTTPRewriteRuleRequest {\n\tint64 rewriteRuleId = 1;\n\tstring pattern = 2;\n\tstring replace = 3;\n\tstring mode = 4;\n\tint32 redirectStatus = 5;\n\tbool isBreak = 6;\n\tstring proxyHost = 7;\n\tbool isOn = 8;\n\tbool withQuery = 9;\n\tbytes condsJSON = 10;\n}",
      "doc": "修改重写规则"
    },
    {
      "name": "FindHTTPWebHostRedirectsRequest",
      "code": "\nmessage FindHTTPWebHostRedirectsRequest {\n\tint64 httpWebId = 1;\n}",
      "doc": "查找主机跳转设置"
    },
    {
      "name": "FindHTTPWebUAMRequest",
      "code": "\nmessage FindHTTPWebUAMRequest {\n\tint64 httpWebId = 1;\n}",
      "doc": "查找服务UAM设置"
    },
    {
      "name": "UpdateHTTPWebRemoteAddrRequest",
      "code": "\nmessage UpdateHTTPWebRemoteAddrRequest {\n\tint64 httpWebId = 1;\n\tbytes remoteAddrJSON = 2;\n}",
      "doc": "更改RemoteAddr配置"
    },
    {
      "name": "UpdateHTTPWebRequestLimitRequest",
      "code": "\nmessage UpdateHTTPWebRequestLimitRequest {\n\tint64 httpWebId = 1;\n\tbytes requestLimitJSON = 2;\n}",
      "doc": "修改请求限制"
    },
    {
      "name": "FindHTTPWebRequestLimitResponse",
      "code": "\n\nmessage FindHTTPWebRequestLimitResponse {\n\tbytes requestLimitJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPWebRedirectToHTTPSRequest",
      "code": "\nmessage UpdateHTTPWebRedirectToHTTPSRequest {\n\tint64 httpWebId = 1;\n\tbytes redirectToHTTPSJSON = 2;\n}",
      "doc": "更改跳转到HTTPS设置"
    },
    {
      "name": "UpdateHTTPWebRequestHeaderRequest",
      "code": "\nmessage UpdateHTTPWebRequestHeaderRequest {\n\tint64 httpWebId = 1;\n\tbytes headerJSON = 2;\n}",
      "doc": "更改请求Header策略"
    },
    {
      "name": "UpdateHTTPWebAuthRequest",
      "code": "\nmessage UpdateHTTPWebAuthRequest {\n\tint64 httpWebId = 1;\n\tbytes authJSON = 2;\n}",
      "doc": "更改认证设置"
    },
    {
      "name": "FindEnabledHTTPWebConfigResponse",
      "code": "\n\nmessage FindEnabledHTTPWebConfigResponse {\n\tbytes httpWebJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPWebResponseHeaderRequest",
      "code": "\nmessage UpdateHTTPWebResponseHeaderRequest {\n\tint64 httpWebId = 1;\n\tbytes headerJSON = 2;\n}",
      "doc": "更改响应Header策略"
    },
    {
      "name": "UpdateHTTPWebFastcgiRequest",
      "code": "\nmessage UpdateHTTPWebFastcgiRequest {\n\tint64 httpWebId = 1;\n\tbytes fastcgiJSON = 2;\n}",
      "doc": "更改Fastcgi设置"
    },
    {
      "name": "FindHTTPWebHostRedirectsResponse",
      "code": "\n\nmessage FindHTTPWebHostRedirectsResponse {\n\tbytes hostRedirectsJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindHTTPWebRequestLimitRequest",
      "code": "\nmessage FindHTTPWebRequestLimitRequest {\n\tint64 httpWebId = 1;\n}",
      "doc": "查找请求限制"
    },
    {
      "name": "UpdateHTTPWebRequestScriptsRequest",
      "code": "\nmessage UpdateHTTPWebRequestScriptsRequest {\n\tint64 httpWebId = 1;\n\tbytes requestScriptsJSON = 2;\n}",
      "doc": "修改请求脚本"
    },
    {
      "name": "UpdateHTTPWebUAMRequest",
      "code": "\nmessage UpdateHTTPWebUAMRequest {\n\tint64 httpWebId = 1;\n\tbytes uamJSON = 2;\n}",
      "doc": "修改服务UAM设置"
    },
    {
      "name": "FindHTTPWebUAMResponse",
      "code": "\n\nmessage FindHTTPWebUAMResponse {\n\tbytes uamJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPWebCharsetRequest",
      "code": "\nmessage UpdateHTTPWebCharsetRequest {\n\tint64 httpWebId = 1;\n\tbytes charsetJSON = 2;\n}",
      "doc": "更改字符集配置"
    },
    {
      "name": "FindEnabledHTTPWebRequest",
      "code": "\nmessage FindEnabledHTTPWebRequest {\n\tint64 httpWebId = 1;\n}",
      "doc": "查找Web信息"
    },
    {
      "name": "FindEnabledHTTPWebResponse",
      "code": "\n\nmessage FindEnabledHTTPWebResponse {\n\tHTTPWeb httpWeb = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledHTTPWebConfigRequest",
      "code": "\nmessage FindEnabledHTTPWebConfigRequest {\n\tint64 httpWebId = 1;\n}",
      "doc": "查找Web配置"
    },
    {
      "name": "UpdateHTTPWebShutdownRequest",
      "code": "\nmessage UpdateHTTPWebShutdownRequest {\n\tint64 httpWebId = 1;\n\tbytes shutdownJSON = 2;\n}",
      "doc": "更改Shutdown"
    },
    {
      "name": "UpdateHTTPWebAccessLogRequest",
      "code": "\nmessage UpdateHTTPWebAccessLogRequest {\n\tint64 httpWebId = 1;\n\tbytes accessLogJSON = 2;\n}",
      "doc": "更改访问日志配置"
    },
    {
      "name": "FindHTTPWebRequestScriptsResponse",
      "code": "\n\nmessage FindHTTPWebRequestScriptsResponse {\n\tbytes requestScriptsJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateHTTPWebResponse",
      "code": "\n\nmessage CreateHTTPWebResponse {\n\tint64 httpWebId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateHTTPWebWebPRequest",
      "code": "\nmessage UpdateHTTPWebWebPRequest {\n\tint64 httpWebId = 1;\n\tbytes webpJSON = 2;\n}",
      "doc": "更改WebP配置"
    },
    {
      "name": "UpdateHTTPWebFirewallRequest",
      "code": "\nmessage UpdateHTTPWebFirewallRequest {\n\tint64 httpWebId = 1;\n\tbytes firewallJSON = 2;\n}",
      "doc": "更改防火墙设置"
    },
    {
      "name": "UpdateHTTPWebCommonRequest",
      "code": "\nmessage UpdateHTTPWebCommonRequest {\n\tint64 httpWebId = 1;\n\tbool mergeSlashes = 2;\n}",
      "doc": "更改通用设置"
    },
    {
      "name": "FindHTTPWebRequestScriptsRequest",
      "code": "\nmessage FindHTTPWebRequestScriptsRequest {\n\tint64 httpWebId = 1;\n}",
      "doc": "查找请求脚本"
    },
    {
      "name": "CreateHTTPWebRequest",
      "code": "\nmessage CreateHTTPWebRequest {\n\tbytes rootJSON = 1;\n}",
      "doc": "创建Web配置"
    },
    {
      "name": "UpdateHTTPWebCacheRequest",
      "code": "\nmessage UpdateHTTPWebCacheRequest {\n\tint64 httpWebId = 1;\n\tbytes cacheJSON = 2;\n}",
      "doc": "更改缓存配置"
    },
    {
      "name": "UpdateHTTPWebLocationsRequest",
      "code": "\nmessage UpdateHTTPWebLocationsRequest {\n\tint64 httpWebId = 1;\n\tbytes locationsJSON = 3;\n}",
      "doc": "更改路径规则配置"
    },
    {
      "name": "UpdateHTTPWebWebsocketRequest",
      "code": "\nmessage UpdateHTTPWebWebsocketRequest {\n\tint64 httpWebId = 1;\n\tbytes websocketJSON = 2;\n}",
      "doc": "更改Websocket设置"
    },
    {
      "name": "UpdateHTTPWebRewriteRulesRequest",
      "code": "\nmessage UpdateHTTPWebRewriteRulesRequest {\n\tint64 httpWebId = 1;\n\tbytes rewriteRulesJSON = 2;\n}",
      "doc": "更改重写规则设置"
    },
    {
      "name": "UpdateHTTPWebHostRedirectsRequest",
      "code": "\nmessage UpdateHTTPWebHostRedirectsRequest {\n\tint64 httpWebId = 1;\n\tbytes hostRedirectsJSON = 2;\n}",
      "doc": "更改主机跳转设置"
    },
    {
      "name": "UpdateHTTPWebCompressionRequest",
      "code": "\nmessage UpdateHTTPWebCompressionRequest {\n\tint64 httpWebId = 1;\n\tbytes compressionJSON = 2;\n}",
      "doc": "更改压缩配置"
    },
    {
      "name": "UpdateHTTPWebPagesRequest",
      "code": "\nmessage UpdateHTTPWebPagesRequest {\n\tint64 httpWebId = 1;\n\tbytes pagesJSON = 2;\n}",
      "doc": "更改Pages"
    },
    {
      "name": "UpdateHTTPWebStatRequest",
      "code": "\nmessage UpdateHTTPWebStatRequest {\n\tint64 httpWebId = 1;\n\tbytes statJSON = 2;\n}",
      "doc": "更改统计配置"
    },
    {
      "name": "UpdateHTTPWebRequest",
      "code": "\nmessage UpdateHTTPWebRequest {\n\tint64 httpWebId = 1;\n\tbytes rootJSON = 2;\n}",
      "doc": "更改Web配置"
    },
    {
      "name": "UpdateHTTPWebsocketRequest",
      "code": "\nmessage UpdateHTTPWebsocketRequest {\n\tint64 websocketId = 1;\n\tbytes handshakeTimeoutJSON = 2;\n\tbool allowAllOrigins = 3;\n\trepeated string allowedOrigins = 4;\n\tbool requestSameOrigin = 5;\n\tstring requestOrigin = 6;\n}",
      "doc": "修改Websocket配置"
    },
    {
      "name": "CreateHTTPWebsocketRequest",
      "code": "\nmessage CreateHTTPWebsocketRequest {\n\tbytes handshakeTimeoutJSON = 1;\n\tbool allowAllOrigins = 2;\n\trepeated string allowedOrigins = 3;\n\tbool requestSameOrigin = 4;\n\tstring requestOrigin = 5;\n}",
      "doc": "创建Websocket配置"
    },
    {
      "name": "CreateHTTPWebsocketResponse",
      "code": "\n\nmessage CreateHTTPWebsocketResponse {\n\tint64 websocketId = 1;\n}",
      "doc": ""
    },
    {
      "name": "ExistsEnabledIPItemResponse",
      "code": "\n\nmessage ExistsEnabledIPItemResponse {\n\tbool exists = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledIPItemsRequest",
      "code": "\nmessage CountAllEnabledIPItemsRequest {\n\tstring ip = 1;\n\tbool globalOnly = 2;\n\tbool unread = 3;\n\tstring eventLevel = 4;\n\tstring listType = 5;\n}",
      "doc": "计算所有IP数量"
    },
    {
      "name": "ListAllEnabledIPItemsRequest",
      "code": "\nmessage ListAllEnabledIPItemsRequest {\n\tstring ip = 1;\n\tbool globalOnly = 2;\n\tbool unread = 5;\n\tstring eventLevel = 6;\n\tstring listType = 7;\n\tint64 offset = 3;\n\tint64 size = 4;\n}",
      "doc": "列出所有名单中的IP"
    },
    {
      "name": "UpdateIPItemRequest",
      "code": "\nmessage UpdateIPItemRequest {\n\tint64 ipItemId = 1;\n\tstring ipFrom = 2;\n\tstring ipTo = 3;\n\tint64 expiredAt = 4;\n\tstring reason = 5;\n\tstring type = 6; // 类型\n\tstring eventLevel = 7; // 级别\n}",
      "doc": "修改IP"
    },
    {
      "name": "ListIPItemsWithListIdResponse",
      "code": "\n\nmessage ListIPItemsWithListIdResponse {\n\trepeated IPItem ipItems = 1;\n}",
      "doc": ""
    },
    {
      "name": "ExistsEnabledIPItemRequest",
      "code": "\nmessage ExistsEnabledIPItemRequest {\n\tint64 ipItemId = 1;\n}",
      "doc": "检查IP是否存在"
    },
    {
      "name": "ListIPItemsAfterVersionRequest",
      "code": "\nmessage ListIPItemsAfterVersionRequest {\n\tint64 version = 1;\n\tint64 size = 2;\n}",
      "doc": "根据版本列出一组IP"
    },
    {
      "name": "ListIPItemsAfterVersionResponse",
      "code": "\n\nmessage ListIPItemsAfterVersionResponse {\n\trepeated IPItem ipItems = 1;\n}",
      "doc": ""
    },
    {
      "name": "CheckIPItemStatusRequest",
      "code": "\nmessage CheckIPItemStatusRequest {\n\tint64 ipListId = 1;\n\tstring ip = 2;\n}",
      "doc": "检查IP状态"
    },
    {
      "name": "CreateIPItemRequest",
      "code": "\nmessage CreateIPItemRequest {\n\tint64 ipListId = 1; // IP列表ID\n\tstring ipFrom = 2; // 开始IP\n\tstring ipTo = 3; // 结束IP（可选）\n\tint64 expiredAt = 4; // 过期时间戳（可选）\n\tstring reason = 5; // 加入理由（可选）\n\tstring type = 6; // 类型\n\tstring eventLevel = 7; // 级别\n\n\tint64 nodeId = 8; // 所属节点ID\n\tint64 serverId = 9; // 所属服务ID\n\n\tint64 sourceNodeId = 10;\n\tint64 sourceServerId = 11;\n\tint64 sourceHTTPFirewallPolicyId = 12;\n\tint64 sourceHTTPFirewallRuleGroupId = 13;\n\tint64 sourceHTTPFirewallRuleSetId = 14;\n}",
      "doc": "创建IP"
    },
    {
      "name": "DeleteIPItemRequest",
      "code": "\nmessage DeleteIPItemRequest {\n\tint64 ipItemId = 1; // IP条目的ID\n\n\tstring ipFrom = 2; // v0.4.8新增，开始IP，和ipItemId二选一\n\tstring ipTo = 3; // v0.4.8新增，结束IP，和ipItemId二选一\n\tint64 ipListId = 4; // v0.4.8新增，IP列表，IP所在的IP列表，如果不指定，则会删除所有IP列表中的相关IP信息\n}",
      "doc": "删除IP\n可以使用 ipItemId 删除，也可以使用 ipFrom+ipTo+ipListId 删除，如果只是单个IP，则不需要指定ipTo"
    },
    {
      "name": "CountIPItemsWithListIdRequest",
      "code": "\nmessage CountIPItemsWithListIdRequest {\n\tint64 ipListId = 1;\n\tstring keyword = 2;\n\tstring ipFrom = 3;\n\tstring ipTo = 4;\n\tstring eventLevel = 5;\n}",
      "doc": "计算IP数量"
    },
    {
      "name": "DeleteIPItemsRequest",
      "code": "\nmessage DeleteIPItemsRequest {\n\trepeated int64 ipItemIds = 1;\n}",
      "doc": "批量删除IP"
    },
    {
      "name": "ListIPItemsWithListIdRequest",
      "code": "\nmessage ListIPItemsWithListIdRequest {\n\tint64 ipListId = 1;\n\tstring keyword = 4;\n\tstring ipFrom = 5;\n\tstring ipTo = 6;\n\tstring eventLevel = 7;\n\tint64 offset = 2;\n\tint64 size = 3;\n}",
      "doc": "列出单页的IP"
    },
    {
      "name": "UpdateIPItemsReadRequest",
      "code": "\nmessage UpdateIPItemsReadRequest {\n\n}",
      "doc": "设置所有为已读"
    },
    {
      "name": "CheckIPItemStatusResponse",
      "code": "\n\nmessage CheckIPItemStatusResponse {\n\tbool isOk = 1; // 是否查询成功\n\tstring error = 2;\n\tbool isFound = 3; // 是否找到\n\tbool isAllowed = 4; // 是否允许\n\tIPItem ipItem = 5; // 匹配的IPItem\n}",
      "doc": ""
    },
    {
      "name": "ListAllEnabledIPItemsResponse",
      "code": "\n\nmessage ListAllEnabledIPItemsResponse {\n\trepeated Result results = 1;\n\n\n\tmessage Result {\n\t\tIPList ipList = 1; // 所属名单\n\t\tIPItem ipItem = 2; // IP信息\n\t\tServer server = 3; // 所属服务\n\t\tHTTPFirewallPolicy httpFirewallPolicy = 4; // 所属WAF策略\n\t}\n}",
      "doc": ""
    },
    {
      "name": "CreateIPItemResponse",
      "code": "\n\nmessage CreateIPItemResponse {\n\tint64 ipItemId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledIPItemRequest",
      "code": "\nmessage FindEnabledIPItemRequest {\n\tint64 ipItemId = 1;\n}",
      "doc": "查找单个IP"
    },
    {
      "name": "FindEnabledIPItemResponse",
      "code": "\n\nmessage FindEnabledIPItemResponse {\n\tIPItem ipItem = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindLatestIPLibraryWithTypeResponse",
      "code": "\n\nmessage FindLatestIPLibraryWithTypeResponse {\n\tIPLibrary ipLibrary = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateIPLibraryRequest",
      "code": "\nmessage CreateIPLibraryRequest {\n\tstring type = 1;\n\tint64 fileId = 3;\n}",
      "doc": "创建IP库"
    },
    {
      "name": "FindAllEnabledIPLibrariesWithTypeResponse",
      "code": "\n\nmessage FindAllEnabledIPLibrariesWithTypeResponse {\n\trepeated IPLibrary ipLibraries = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteIPLibraryRequest",
      "code": "\nmessage DeleteIPLibraryRequest {\n\tint64 ipLibraryId = 1;\n}",
      "doc": "删除IP库"
    },
    {
      "name": "LookupIPRegionRequest",
      "code": "\nmessage LookupIPRegionRequest {\n\tstring ip = 1;\n}",
      "doc": "查询某个IP信息"
    },
    {
      "name": "FindEnabledIPLibraryRequest",
      "code": "\nmessage FindEnabledIPLibraryRequest {\n\tint64 ipLibraryId = 1;\n}",
      "doc": "查找单个IP库"
    },
    {
      "name": "FindEnabledIPLibraryResponse",
      "code": "\n\nmessage FindEnabledIPLibraryResponse {\n\tIPLibrary ipLibrary = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledIPLibrariesWithTypeRequest",
      "code": "\nmessage FindAllEnabledIPLibrariesWithTypeRequest {\n\tstring type = 1;\n}",
      "doc": "列出某个类型的所有IP库"
    },
    {
      "name": "LookupIPRegionsRequest",
      "code": "\nmessage LookupIPRegionsRequest {\n\trepeated string ipList = 1;\n}",
      "doc": "查询一组IP信息"
    },
    {
      "name": "LookupIPRegionsResponse",
      "code": "\n\nmessage LookupIPRegionsResponse {\n\tmap\u003cstring, IPRegion\u003e ipRegionMap = 1;\n}",
      "doc": ""
    },
    {
      "name": "IPRegion",
      "code": "\nmessage IPRegion {\n\tstring country = 1;\n\tstring region = 2;\n\tstring province = 3;\n\tstring city = 4;\n\tstring isp = 5;\n\tint64 countryId = 6;\n\tint64 provinceId = 7;\n\tstring summary = 8; // 完整的地区组合\n}",
      "doc": "IP信息"
    },
    {
      "name": "CreateIPLibraryResponse",
      "code": "\n\nmessage CreateIPLibraryResponse {\n\tint64 ipLibraryId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindLatestIPLibraryWithTypeRequest",
      "code": "\nmessage FindLatestIPLibraryWithTypeRequest {\n\tstring type = 1;\n}",
      "doc": "查找最新的IP库"
    },
    {
      "name": "LookupIPRegionResponse",
      "code": "\n\nmessage LookupIPRegionResponse {\n\tIPRegion ipRegion = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateIPListRequest",
      "code": "\nmessage UpdateIPListRequest {\n\tint64 ipListId = 1;\n\tstring name = 2;\n\tstring code = 3;\n\tbytes timeoutJSON = 4;\n\tstring description = 5;\n}",
      "doc": "修改IP列表"
    },
    {
      "name": "FindEnabledIPListRequest",
      "code": "\nmessage FindEnabledIPListRequest {\n\tint64 ipListId = 1;\n}",
      "doc": "查找IP列表信息"
    },
    {
      "name": "ListEnabledIPListsRequest",
      "code": "\nmessage ListEnabledIPListsRequest {\n\tstring type = 1;\n\tbool isPublic = 2;\n\tstring keyword = 3;\n\tint64 offset = 4;\n\tint64 size = 5;\n}",
      "doc": "列出单页名单"
    },
    {
      "name": "DeleteIPListRequest",
      "code": "\nmessage DeleteIPListRequest {\n\tint64 ipListId = 1;\n}",
      "doc": "删除IP名单"
    },
    {
      "name": "CreateIPListRequest",
      "code": "\nmessage CreateIPListRequest {\n\tstring type = 1;\n\tstring name = 2;\n\tstring code = 3;\n\tbytes timeoutJSON = 4;\n\tbool isPublic = 5;\n\tstring description = 6;\n\tbool isGlobal = 7;\n\tint64 serverId = 8;\n}",
      "doc": "创建IP列表"
    },
    {
      "name": "CreateIPListResponse",
      "code": "\n\nmessage CreateIPListResponse {\n\tint64 ipListId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledIPListResponse",
      "code": "\n\nmessage FindEnabledIPListResponse {\n\tIPList ipList = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledIPListsRequest",
      "code": "\nmessage CountAllEnabledIPListsRequest {\n\tstring type = 1;\n\tbool isPublic = 2;\n\tstring keyword = 3;\n}",
      "doc": "计算名单数量"
    },
    {
      "name": "ListEnabledIPListsResponse",
      "code": "\n\nmessage ListEnabledIPListsResponse {\n\trepeated IPList ipLists = 1;\n}",
      "doc": ""
    },
    {
      "name": "ExistsEnabledIPListRequest",
      "code": "\nmessage ExistsEnabledIPListRequest {\n\tint64 ipListId = 1;\n}",
      "doc": "检查IPList是否存在"
    },
    {
      "name": "ExistsEnabledIPListResponse",
      "code": "\n\nmessage ExistsEnabledIPListResponse {\n\tbool exists = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledIPListContainsIPRequest",
      "code": "\nmessage FindEnabledIPListContainsIPRequest {\n\tstring ip = 1;\n}",
      "doc": "根据IP来搜索IP名单"
    },
    {
      "name": "FindEnabledIPListContainsIPResponse",
      "code": "\n\nmessage FindEnabledIPListContainsIPResponse {\n\trepeated IPList ipLists = 1;\n}",
      "doc": ""
    },
    {
      "name": "IncreaseLatestItemRequest",
      "code": "\nmessage IncreaseLatestItemRequest {\n\tstring itemType = 1;\n\tint64 itemId = 2;\n}",
      "doc": "记录最近使用的条目"
    },
    {
      "name": "CreateLogResponse",
      "code": "\n\nmessage CreateLogResponse {\n\n}",
      "doc": ""
    },
    {
      "name": "CountLogRequest",
      "code": "\nmessage CountLogRequest {\n\tstring dayFrom = 1;\n\tstring dayTo = 2;\n\tstring keyword = 3;\n\tstring userType = 4; // admin|user\n}",
      "doc": "计算日志数量"
    },
    {
      "name": "ListLogsResponse",
      "code": "\n\nmessage ListLogsResponse {\n\trepeated Log logs = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteLogsPermanentlyRequest",
      "code": "\nmessage DeleteLogsPermanentlyRequest {\n\trepeated int64 logIds = 1;\n}",
      "doc": "批量删除"
    },
    {
      "name": "SumLogsSizeRequest",
      "code": "\nmessage SumLogsSizeRequest {\n\n}",
      "doc": "计算日志容量大小"
    },
    {
      "name": "CreateLogRequest",
      "code": "\nmessage CreateLogRequest {\n\tstring level = 1;\n\tstring description = 2;\n\tstring action = 3;\n\tstring ip = 4;\n}",
      "doc": "创建日志"
    },
    {
      "name": "ListLogsRequest",
      "code": "\nmessage ListLogsRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n\tstring dayFrom = 3;\n\tstring dayTo = 4;\n\tstring keyword = 5;\n\tstring userType = 6;\n}",
      "doc": "列出单页日志"
    },
    {
      "name": "DeleteLogPermanentlyRequest",
      "code": "\nmessage DeleteLogPermanentlyRequest {\n\tint64 logId = 1;\n}",
      "doc": "删除单条"
    },
    {
      "name": "CleanLogsPermanentlyRequest",
      "code": "\nmessage CleanLogsPermanentlyRequest {\n\tint32 days = 1;\n\tbool clearAll = 2;\n}",
      "doc": "清理"
    },
    {
      "name": "SumLogsResponse",
      "code": "\n\nmessage SumLogsResponse {\n\tint64 sizeBytes = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledLoginRequest",
      "code": "\nmessage FindEnabledLoginRequest {\n\tint64 adminId = 1;\n\tstring type = 2;\n}",
      "doc": "查找认证"
    },
    {
      "name": "FindEnabledLoginResponse",
      "code": "\n\nmessage FindEnabledLoginResponse {\n\tLogin login = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateLoginRequest",
      "code": "\nmessage UpdateLoginRequest {\n\tLogin login = 1;\n}",
      "doc": "修改认证"
    },
    {
      "name": "UpdateAllMessagesReadRequest",
      "code": "\nmessage UpdateAllMessagesReadRequest {\n\n}",
      "doc": "设置所有消息为已读"
    },
    {
      "name": "CountUnreadMessagesRequest",
      "code": "\nmessage CountUnreadMessagesRequest {\n\n}",
      "doc": "计算未读消息数"
    },
    {
      "name": "ListUnreadMessagesRequest",
      "code": "\nmessage ListUnreadMessagesRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出单页未读消息"
    },
    {
      "name": "ListUnreadMessagesResponse",
      "code": "\n\nmessage ListUnreadMessagesResponse {\n\trepeated Message messages = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateMessageReadRequest",
      "code": "\nmessage UpdateMessageReadRequest {\n\tint64 messageId = 1;\n\tbool isRead = 2;\n}",
      "doc": "设置消息已读状态"
    },
    {
      "name": "UpdateMessagesReadRequest",
      "code": "\nmessage UpdateMessagesReadRequest {\n\trepeated int64 messageIds = 1;\n\tbool isRead = 2;\n}",
      "doc": "设置一组消息已读状态"
    },
    {
      "name": "FindAllMessageMediasRequest",
      "code": "\nmessage FindAllMessageMediasRequest {\n\n}",
      "doc": "获取所有支持的媒介"
    },
    {
      "name": "FindAllMessageMediasResponse",
      "code": "\n\nmessage FindAllMessageMediasResponse {\n\trepeated MessageMedia messageMedias = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateMessageMediasRequest",
      "code": "\nmessage UpdateMessageMediasRequest {\n\trepeated MessageMedia messageMedias = 2;\n}",
      "doc": "设置所有支持的媒介"
    },
    {
      "name": "FindEnabledMessageMediaInstanceRequest",
      "code": "\nmessage FindEnabledMessageMediaInstanceRequest {\n\tint64 messageMediaInstanceId = 1;\n}",
      "doc": "查找单个接收人信息"
    },
    {
      "name": "CountAllEnabledMessageMediaInstancesRequest",
      "code": "\nmessage CountAllEnabledMessageMediaInstancesRequest {\n\tstring mediaType = 1;\n\tstring keyword = 2;\n}",
      "doc": "计算接收人数量"
    },
    {
      "name": "ListEnabledMessageMediaInstancesResponse",
      "code": "\n\nmessage ListEnabledMessageMediaInstancesResponse {\n\trepeated MessageMediaInstance messageMediaInstances = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateMessageMediaInstanceRequest",
      "code": "\nmessage UpdateMessageMediaInstanceRequest {\n\tint64 messageMediaInstanceId = 1;\n\tstring name = 2;\n\tstring mediaType = 3;\n\tbytes paramsJSON = 4;\n\tstring description = 5;\n\tbytes rateJSON = 7;\n\tint32 hashLife = 8;\n\tbool isOn = 6;\n}",
      "doc": "修改接收人"
    },
    {
      "name": "DeleteMessageMediaInstanceRequest",
      "code": "\nmessage DeleteMessageMediaInstanceRequest {\n\tint64 messageMediaInstanceId = 1;\n}",
      "doc": "删除接收人"
    },
    {
      "name": "ListEnabledMessageMediaInstancesRequest",
      "code": "\nmessage ListEnabledMessageMediaInstancesRequest {\n\tstring mediaType = 1;\n\tstring keyword = 2;\n\tint64 offset = 3;\n\tint64 size = 4;\n}",
      "doc": "列出单页接收人"
    },
    {
      "name": "FindEnabledMessageMediaInstanceResponse",
      "code": "\n\nmessage FindEnabledMessageMediaInstanceResponse {\n\tMessageMediaInstance messageMediaInstance = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateMessageMediaInstanceRequest",
      "code": "\nmessage CreateMessageMediaInstanceRequest {\n\tstring name = 1;\n\tstring mediaType = 2;\n\tbytes paramsJSON = 3;\n\trepeated int64 groupIds = 4;\n\tstring description = 5;\n\tbytes rateJSON = 6;\n\tint32 hashLife = 7;\n}",
      "doc": "创建接收人"
    },
    {
      "name": "CreateMessageMediaInstanceResponse",
      "code": "\n\nmessage CreateMessageMediaInstanceResponse {\n\tint64 messageMediaInstanceId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateMessageReceiversRequest",
      "code": "\nmessage UpdateMessageReceiversRequest {\n\tstring role = 7;\n\tint64 nodeClusterId = 1;\n\tint64 nodeId = 2;\n\tint64 serverId = 3;\n\tbytes paramsJSON = 5;\n\tmap\u003cstring, RecipientOptions\u003e recipientOptions = 6; // type =\u003e options\n\n\n\tmessage RecipientOption {\n\t\tint64 messageRecipientId = 1;\n\t\tint64 messageRecipientGroupId = 2;\n\t}\n\n\n\tmessage RecipientOptions {\n\t\trepeated RecipientOption recipientOptions = 1;\n\t}\n}",
      "doc": "修改接收者"
    },
    {
      "name": "FindAllEnabledMessageReceiversRequest",
      "code": "\nmessage FindAllEnabledMessageReceiversRequest {\n\tstring role = 4;\n\tint64 nodeClusterId = 1;\n\tint64 nodeId = 2;\n\tint64 serverId = 3;\n}",
      "doc": "查找接收者"
    },
    {
      "name": "FindAllEnabledMessageReceiversResponse",
      "code": "\n\nmessage FindAllEnabledMessageReceiversResponse {\n\trepeated MessageReceiver messageReceivers = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteMessageReceiverRequest",
      "code": "\nmessage DeleteMessageReceiverRequest {\n\tint64 messageReceiverId = 1;\n}",
      "doc": "删除接收者"
    },
    {
      "name": "CountAllEnabledMessageReceiversRequest",
      "code": "\nmessage CountAllEnabledMessageReceiversRequest {\n\tstring role = 4;\n\tint64 nodeClusterId = 1;\n\tint64 nodeId = 2;\n\tint64 serverId = 3;\n}",
      "doc": "计算接收者数量"
    },
    {
      "name": "CreateMessageRecipientResponse",
      "code": "\n\nmessage CreateMessageRecipientResponse {\n\tint64 messageRecipientId = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteMessageRecipientRequest",
      "code": "\nmessage DeleteMessageRecipientRequest {\n\tint64 messageRecipientId = 1;\n}",
      "doc": "删除接收人"
    },
    {
      "name": "CountAllEnabledMessageRecipientsRequest",
      "code": "\nmessage CountAllEnabledMessageRecipientsRequest {\n\tint64 adminId = 1;\n\tstring mediaType = 2;\n\tint64 messageRecipientGroupId = 3;\n\tstring keyword = 4;\n}",
      "doc": "计算接收人数量"
    },
    {
      "name": "ListEnabledMessageRecipientsResponse",
      "code": "\n\nmessage ListEnabledMessageRecipientsResponse {\n\trepeated MessageRecipient messageRecipients = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledMessageRecipientRequest",
      "code": "\nmessage FindEnabledMessageRecipientRequest {\n\tint64 messageRecipientId = 1;\n}",
      "doc": "查找单个接收人信息"
    },
    {
      "name": "CreateMessageRecipientRequest",
      "code": "\nmessage CreateMessageRecipientRequest {\n\tint64 adminId = 1;\n\tint64 messageMediaInstanceId = 2;\n\trepeated int64 messageRecipientGroupIds = 3;\n\tstring description = 4;\n\tstring user = 5;\n\tstring timeFrom = 6;\n\tstring timeTo = 7;\n}",
      "doc": "创建接收人"
    },
    {
      "name": "UpdateMessageRecipientRequest",
      "code": "\nmessage UpdateMessageRecipientRequest {\n\tint64 messageRecipientId = 1;\n\tint64 adminId = 2;\n\tint64 messageMediaInstanceId = 3;\n\trepeated int64 messageRecipientGroupIds = 4;\n\tstring description = 5;\n\tbool isOn = 6;\n\tstring user = 7;\n\tstring timeFrom = 8;\n\tstring timeTo = 9;\n}",
      "doc": "修改接收人"
    },
    {
      "name": "ListEnabledMessageRecipientsRequest",
      "code": "\nmessage ListEnabledMessageRecipientsRequest {\n\tint64 adminId = 1;\n\tstring mediaType = 2;\n\tint64 messageRecipientGroupId = 3;\n\tstring keyword = 4;\n\tint64 offset = 5;\n\tint64 size = 6;\n}",
      "doc": "列出单页接收人"
    },
    {
      "name": "FindEnabledMessageRecipientResponse",
      "code": "\n\nmessage FindEnabledMessageRecipientResponse {\n\tMessageRecipient messageRecipient = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateMessageRecipientGroupResponse",
      "code": "\n\nmessage CreateMessageRecipientGroupResponse {\n\tint64 messageRecipientGroupId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateMessageRecipientGroupRequest",
      "code": "\nmessage UpdateMessageRecipientGroupRequest {\n\tint64 messageRecipientGroupId = 1;\n\tstring name = 2;\n\tbool isOn = 3;\n}",
      "doc": "修改分组"
    },
    {
      "name": "FindAllEnabledMessageRecipientGroupsRequest",
      "code": "\nmessage FindAllEnabledMessageRecipientGroupsRequest {\n\n}",
      "doc": "查找所有可用的分组"
    },
    {
      "name": "FindAllEnabledMessageRecipientGroupsResponse",
      "code": "\n\nmessage FindAllEnabledMessageRecipientGroupsResponse {\n\trepeated MessageRecipientGroup messageRecipientGroups = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteMessageRecipientGroupRequest",
      "code": "\nmessage DeleteMessageRecipientGroupRequest {\n\tint64 messageRecipientGroupId = 1;\n}",
      "doc": "删除分组"
    },
    {
      "name": "FindEnabledMessageRecipientGroupRequest",
      "code": "\nmessage FindEnabledMessageRecipientGroupRequest {\n\tint64 messageRecipientGroupId = 1;\n}",
      "doc": "查找单个分组信息"
    },
    {
      "name": "FindEnabledMessageRecipientGroupResponse",
      "code": "\n\nmessage FindEnabledMessageRecipientGroupResponse {\n\tMessageRecipientGroup messageRecipientGroup = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateMessageRecipientGroupRequest",
      "code": "\nmessage CreateMessageRecipientGroupRequest {\n\tstring name = 1;\n}",
      "doc": "创建分组"
    },
    {
      "name": "CreateMessageTaskRequest",
      "code": "\nmessage CreateMessageTaskRequest {\n\tint64 recipientId = 1;\n\tint64 instanceId = 2;\n\tstring user = 3;\n\tstring subject = 4;\n\tstring body = 5;\n\tbool isPrimary = 6;\n}",
      "doc": "创建消息任务"
    },
    {
      "name": "FindSendingMessageTasksRequest",
      "code": "\nmessage FindSendingMessageTasksRequest {\n\tint64 size = 1;\n}",
      "doc": "查找要发送的消息任务"
    },
    {
      "name": "FindSendingMessageTasksResponse",
      "code": "\n\nmessage FindSendingMessageTasksResponse {\n\trepeated MessageTask messageTasks = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateMessageTaskStatusRequest",
      "code": "\nmessage UpdateMessageTaskStatusRequest {\n\tint64 messageTaskId = 1;\n\tint32 status = 2;\n\tMessageTaskResult result = 3;\n}",
      "doc": "修改消息任务状态"
    },
    {
      "name": "DeleteMessageTaskRequest",
      "code": "\nmessage DeleteMessageTaskRequest {\n\tint64 messageTaskId = 1;\n}",
      "doc": "删除消息任务"
    },
    {
      "name": "CreateMessageTaskResponse",
      "code": "\n\nmessage CreateMessageTaskResponse {\n\tint64 messageTaskId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledMessageTaskRequest",
      "code": "\nmessage FindEnabledMessageTaskRequest {\n\tint64 messageTaskId = 1;\n}",
      "doc": "读取消息任务状态"
    },
    {
      "name": "FindEnabledMessageTaskResponse",
      "code": "\n\nmessage FindEnabledMessageTaskResponse {\n\tMessageTask messageTask = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListMessageTasksWithStatusResponse",
      "code": "\n\nmessage ListMessageTasksWithStatusResponse {\n\trepeated MessageTask messageTasks = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountMessageTaskLogsRequest",
      "code": "\nmessage CountMessageTaskLogsRequest {\n\n}",
      "doc": "计算日志数量"
    },
    {
      "name": "ListMessageTaskLogsRequest",
      "code": "\nmessage ListMessageTaskLogsRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出当页日志"
    },
    {
      "name": "ListMessageTaskLogsResponse",
      "code": "\n\nmessage ListMessageTaskLogsResponse {\n\trepeated MessageTaskLog messageTaskLogs = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListEnabledMetricChartsResponse",
      "code": "\n\nmessage ListEnabledMetricChartsResponse {\n\trepeated MetricChart metricCharts = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateMetricChartRequest",
      "code": "\nmessage UpdateMetricChartRequest {\n\tint64 metricChartId = 1;\n\tstring name = 2;\n\tstring type = 3;\n\tint32 widthDiv = 4;\n\tbytes paramsJSON = 5;\n\tbool isOn = 6;\n\tint32 maxItems = 7;\n\tbool ignoreEmptyKeys = 8;\n\trepeated string ignoredKeys = 9;\n}",
      "doc": "修改图表"
    },
    {
      "name": "CountEnabledMetricChartsRequest",
      "code": "\nmessage CountEnabledMetricChartsRequest {\n\tint64 metricItemId = 1;\n}",
      "doc": "计算图表数量"
    },
    {
      "name": "ListEnabledMetricChartsRequest",
      "code": "\nmessage ListEnabledMetricChartsRequest {\n\tint64 metricItemId = 1;\n\tint64 offset = 2;\n\tint64 size = 3;\n}",
      "doc": "列出单页图表"
    },
    {
      "name": "FindEnabledMetricChartResponse",
      "code": "\n\nmessage FindEnabledMetricChartResponse {\n\tMetricChart metricChart = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteMetricChartRequest",
      "code": "\nmessage DeleteMetricChartRequest {\n\tint64 metricChartId = 1;\n}",
      "doc": "删除图表"
    },
    {
      "name": "CreateMetricChartRequest",
      "code": "\nmessage CreateMetricChartRequest {\n\tint64 metricItemId = 1;\n\tstring name = 2;\n\tstring type = 3;\n\tint32 widthDiv = 4;\n\tbytes paramsJSON = 5;\n\tint32 maxItems = 6;\n\tbool ignoreEmptyKeys = 7;\n\trepeated string ignoredKeys = 8;\n}",
      "doc": "创建图表"
    },
    {
      "name": "CreateMetricChartResponse",
      "code": "\n\nmessage CreateMetricChartResponse {\n\tint64 metricChartId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledMetricChartRequest",
      "code": "\nmessage FindEnabledMetricChartRequest {\n\tint64 metricChartId = 1;\n}",
      "doc": "查找单个图表"
    },
    {
      "name": "ListEnabledMetricItemsRequest",
      "code": "\nmessage ListEnabledMetricItemsRequest {\n\tstring category = 1;\n\tint64 offset = 2;\n\tint64 size = 3;\n}",
      "doc": "列出单页指标"
    },
    {
      "name": "CreateMetricItemResponse",
      "code": "\n\nmessage CreateMetricItemResponse {\n\tint64 metricItemId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledMetricItemRequest",
      "code": "\nmessage FindEnabledMetricItemRequest {\n\tint64 metricItemId = 1;\n}",
      "doc": "查找单个指标信息"
    },
    {
      "name": "FindEnabledMetricItemResponse",
      "code": "\n\nmessage FindEnabledMetricItemResponse {\n\tMetricItem metricItem = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListEnabledMetricItemsResponse",
      "code": "\n\nmessage ListEnabledMetricItemsResponse {\n\trepeated MetricItem metricItems = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteMetricItemRequest",
      "code": "\nmessage DeleteMetricItemRequest {\n\tint64 metricItemId = 1;\n}",
      "doc": "删除指标"
    },
    {
      "name": "CreateMetricItemRequest",
      "code": "\nmessage CreateMetricItemRequest {\n\tstring code = 1;\n\tstring category = 2;\n\tstring name = 3;\n\trepeated string keys = 4;\n\tint32 period = 5;\n\tstring periodUnit = 6;\n\tint32 expiresPeriod = 9;\n\tstring value = 7;\n\tbool isPublic = 8;\n}",
      "doc": "创建指标"
    },
    {
      "name": "UpdateMetricItemRequest",
      "code": "\nmessage UpdateMetricItemRequest {\n\tint64 metricItemId = 1;\n\tstring name = 2;\n\trepeated string keys = 3;\n\tint32 period = 4;\n\tstring periodUnit = 5;\n\tint32 expiresPeriod = 9;\n\tstring value = 6;\n\tbool isOn = 7;\n\tbool isPublic = 8;\n}",
      "doc": "修改指标"
    },
    {
      "name": "CountAllEnabledMetricItemsRequest",
      "code": "\nmessage CountAllEnabledMetricItemsRequest {\n\tstring category = 1;\n}",
      "doc": "计算指标数量"
    },
    {
      "name": "UploadMetricStatsRequest",
      "code": "\nmessage UploadMetricStatsRequest {\n\tint64 serverId = 1;\n\tstring time = 2;\n\tint64 count = 3;\n\tfloat total = 4;\n\tint32 version = 5;\n\tint64 itemId = 6;\n\trepeated UploadingMetricStat metricStats = 7;\n}",
      "doc": "上传统计数据"
    },
    {
      "name": "CountMetricStatsRequest",
      "code": "\nmessage CountMetricStatsRequest {\n\tint64 metricItemId = 1;\n}",
      "doc": "计算指标数据数量"
    },
    {
      "name": "ListMetricStatsRequest",
      "code": "\nmessage ListMetricStatsRequest {\n\tint64 metricItemId = 1;\n\tint64 offset = 2;\n\tint64 size = 3;\n}",
      "doc": "读取单页指标数据"
    },
    {
      "name": "ListMetricStatsResponse",
      "code": "\n\nmessage ListMetricStatsResponse {\n\trepeated MetricStat metricStats = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateMonitorNodeResponse",
      "code": "\n\nmessage CreateMonitorNodeResponse {\n\tint64 monitorNodeId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledMonitorNodesResponse",
      "code": "\n\nmessage FindAllEnabledMonitorNodesResponse {\n\trepeated MonitorNode monitorNodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledMonitorNodeResponse",
      "code": "\n\nmessage FindEnabledMonitorNodeResponse {\n\tMonitorNode monitorNode = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindCurrentMonitorNodeRequest",
      "code": "\nmessage FindCurrentMonitorNodeRequest {\n\n}",
      "doc": "获取当前监控节点"
    },
    {
      "name": "FindCurrentMonitorNodeResponse",
      "code": "\n\nmessage FindCurrentMonitorNodeResponse {\n\tMonitorNode monitorNode = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledMonitorNodesRequest",
      "code": "\nmessage CountAllEnabledMonitorNodesRequest {\n\n}",
      "doc": "计算监控节点数量"
    },
    {
      "name": "FindEnabledMonitorNodeRequest",
      "code": "\nmessage FindEnabledMonitorNodeRequest {\n\tint64 monitorNodeId = 1;\n}",
      "doc": "根据ID查找节点"
    },
    {
      "name": "CreateMonitorNodeRequest",
      "code": "\nmessage CreateMonitorNodeRequest {\n\tstring name = 1;\n\tstring description = 2;\n\tbool isOn = 3;\n}",
      "doc": "创建监控节点"
    },
    {
      "name": "UpdateMonitorNodeRequest",
      "code": "\nmessage UpdateMonitorNodeRequest {\n\tint64 monitorNodeId = 1;\n\tstring name = 2;\n\tstring description = 3;\n\tbool isOn = 4;\n}",
      "doc": "修改监控节点"
    },
    {
      "name": "ListEnabledMonitorNodesResponse",
      "code": "\n\nmessage ListEnabledMonitorNodesResponse {\n\trepeated MonitorNode monitorNodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateMonitorNodeStatusRequest",
      "code": "\nmessage UpdateMonitorNodeStatusRequest {\n\tint64 monitorNodeId = 1;\n\tbytes statusJSON = 2;\n}",
      "doc": "更新监控状态"
    },
    {
      "name": "DeleteMonitorNodeRequest",
      "code": "\nmessage DeleteMonitorNodeRequest {\n\tint64 monitorNodeId = 1;\n}",
      "doc": "删除监控节点"
    },
    {
      "name": "FindAllEnabledMonitorNodesRequest",
      "code": "\nmessage FindAllEnabledMonitorNodesRequest {\n\n}",
      "doc": "列出所有可用监控节点"
    },
    {
      "name": "ListEnabledMonitorNodesRequest",
      "code": "\nmessage ListEnabledMonitorNodesRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出单页的监控节点"
    },
    {
      "name": "FindAllNotInstalledNodesWithNodeClusterIdResponse",
      "code": "\n\nmessage FindAllNotInstalledNodesWithNodeClusterIdResponse {\n\trepeated Node nodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeDNSResolverRequest",
      "code": "\nmessage UpdateNodeDNSResolverRequest {\n\tint64 nodeId = 1;\n\tbytes dnsResolverJSON = 2;\n}",
      "doc": "修改DNS Resolver"
    },
    {
      "name": "DeleteNodeFromNodeClusterRequest",
      "code": "\nmessage DeleteNodeFromNodeClusterRequest {\n\tint64 nodeId = 1;\n\tint64 nodeClusterId = 2;\n}",
      "doc": "从集群中删除节点"
    },
    {
      "name": "CountAllEnabledNodesMatchRequest",
      "code": "\nmessage CountAllEnabledNodesMatchRequest {\n\tint64 nodeClusterId = 1;\n\tint32 installState = 2;\n\tint32 activeState = 3;\n\tstring keyword = 4;\n\tint64 nodeGroupId = 5;\n\tint64 nodeRegionId = 6;\n\tint32 level = 7;\n}",
      "doc": "计算匹配的节点数量"
    },
    {
      "name": "FindNodeInstallStatusResponse",
      "code": "\n\nmessage FindNodeInstallStatusResponse {\n\tNodeInstallStatus installStatus = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindNodeLevelInfoResponse",
      "code": "\n\nmessage FindNodeLevelInfoResponse {\n\tint32 level = 1;\n\tbytes parentNodesMapJSON = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindNodeDDoSProtectionRequest",
      "code": "\nmessage FindNodeDDoSProtectionRequest {\n\tint64 nodeId = 1;\n}",
      "doc": "获取节点的DDoS设置"
    },
    {
      "name": "FindAllUpgradeNodesWithNodeClusterIdResponse",
      "code": "\n\nmessage FindAllUpgradeNodesWithNodeClusterIdResponse {\n\trepeated NodeUpgrade nodes = 1;\n\n\n\tmessage NodeUpgrade {\n\t\tNode node = 1;\n\t\tstring os = 2;\n\t\tstring arch = 3;\n\t\tstring oldVersion = 4;\n\t\tstring newVersion = 5;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "RegisterClusterNodeRequest",
      "code": "\nmessage RegisterClusterNodeRequest {\n\tstring name = 1;\n}",
      "doc": "注册集群节点"
    },
    {
      "name": "StartNodeResponse",
      "code": "\n\nmessage StartNodeResponse {\n\tbool isOk = 1;\n\tstring error = 2;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeIsInstalledRequest",
      "code": "\nmessage UpdateNodeIsInstalledRequest {\n\tint64 nodeId = 1;\n\tbool isInstalled = 2;\n}",
      "doc": "修改节点安装状态"
    },
    {
      "name": "InstallNodeResponse",
      "code": "\n\nmessage InstallNodeResponse {\n\n}",
      "doc": ""
    },
    {
      "name": "StartNodeRequest",
      "code": "\nmessage StartNodeRequest {\n\tint64 nodeId = 1;\n}",
      "doc": "启动节点"
    },
    {
      "name": "FindEnabledNodesWithIdsRequest",
      "code": "\nmessage FindEnabledNodesWithIdsRequest {\n\trepeated int64 nodeIds = 1;\n}",
      "doc": "根据一组ID获取节点信息"
    },
    {
      "name": "FindEnabledNodesWithIdsResponse",
      "code": "\n\nmessage FindEnabledNodesWithIdsResponse {\n\trepeated Node nodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeUpRequest",
      "code": "\nmessage UpdateNodeUpRequest {\n\tint64 nodeId = 1;\n\tbool isUp = 2;\n}",
      "doc": "设置节点上线状态"
    },
    {
      "name": "FindAllEnabledNodesWithNodeClusterIdRequest",
      "code": "\nmessage FindAllEnabledNodesWithNodeClusterIdRequest {\n\tint64 nodeClusterId = 1; // 集群ID\n\tbool includeSecondary = 2; // 是否检查节点的从集群，如果为false，则只检查主集群ID\n}",
      "doc": "根据集群查找所有节点"
    },
    {
      "name": "FindAllEnabledNodesWithNodeClusterIdResponse",
      "code": "\n\nmessage FindAllEnabledNodesWithNodeClusterIdResponse {\n\trepeated Node nodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpgradeNodeRequest",
      "code": "\nmessage UpgradeNodeRequest {\n\tint64 nodeId = 1;\n}",
      "doc": "升级节点"
    },
    {
      "name": "CreateNodeRequest",
      "code": "\nmessage CreateNodeRequest {\n\tstring name = 1;\n\tint64 nodeClusterId = 2;\n\tNodeLogin nodeLogin = 3;\n\tint64 nodeGroupId = 4;\n\tint64 dnsDomainId = 5 [deprecated = true];\n\trepeated string dnsRoutes = 6;\n\tint64 nodeRegionId = 7;\n}",
      "doc": "创建节点"
    },
    {
      "name": "CreateNodeResponse",
      "code": "\n\nmessage CreateNodeResponse {\n\tint64 nodeId = 1;\n}",
      "doc": ""
    },
    {
      "name": "NodeStreamMessage",
      "code": "\nmessage NodeStreamMessage {\n\tint64 nodeId = 1;\n\tint64 requestId = 2;\n\tint32 timeoutSeconds = 3;\n\tstring code = 4;\n\tbytes dataJSON = 5;\n\tbool isOk = 6;\n\tstring message = 7;\n}",
      "doc": "节点stream"
    },
    {
      "name": "UpdateNodeCacheRequest",
      "code": "\nmessage UpdateNodeCacheRequest {\n\tint64 nodeId = 1;\n\tSizeCapacity maxCacheDiskCapacity = 2;\n\tSizeCapacity maxCacheMemoryCapacity = 3;\n\tstring cacheDiskDir = 4;\n}",
      "doc": "修改节点缓存设置"
    },
    {
      "name": "CountAllUpgradeNodesWithNodeClusterIdRequest",
      "code": "\nmessage CountAllUpgradeNodesWithNodeClusterIdRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "计算需要升级的节点数量"
    },
    {
      "name": "CountAllEnabledNodesWithNodeRegionIdRequest",
      "code": "\nmessage CountAllEnabledNodesWithNodeRegionIdRequest {\n\tint64 nodeRegionId = 1;\n}",
      "doc": "计算某个区域下的节点数量"
    },
    {
      "name": "UpdateNodeSystemRequest",
      "code": "\nmessage UpdateNodeSystemRequest {\n\tint64 nodeId = 1;\n\tint32 maxCPU = 2;\n}",
      "doc": "修改节点系统信息"
    },
    {
      "name": "StopNodeRequest",
      "code": "\nmessage StopNodeRequest {\n\tint64 nodeId = 1;\n}",
      "doc": "停止节点"
    },
    {
      "name": "FindAllEnabledNodesWithNodeGrantIdRequest",
      "code": "\nmessage FindAllEnabledNodesWithNodeGrantIdRequest {\n\tint64 nodeGrantId = 1;\n}",
      "doc": "查找使用某个认证的所有节点"
    },
    {
      "name": "FindEnabledNodeDNSRequest",
      "code": "\nmessage FindEnabledNodeDNSRequest {\n\tint64 nodeId = 1;\n\tint64 nodeClusterId = 2;\n}",
      "doc": "查找单个节点的域名解析信息"
    },
    {
      "name": "FindEnabledNodeDNSResponse",
      "code": "\n\nmessage FindEnabledNodeDNSResponse {\n\tNodeDNSInfo node = 1;\n}",
      "doc": ""
    },
    {
      "name": "RegisterClusterNodeResponse",
      "code": "\n\nmessage RegisterClusterNodeResponse {\n\tstring uniqueId = 1;\n\tstring secret = 2;\n\trepeated string endpoints = 3;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledNodesWithNodeGrantIdRequest",
      "code": "\nmessage CountAllEnabledNodesWithNodeGrantIdRequest {\n\tint64 nodeGrantId = 1;\n}",
      "doc": "计算使用某个认证的节点数量"
    },
    {
      "name": "DownloadNodeInstallationFileRequest",
      "code": "\nmessage DownloadNodeInstallationFileRequest {\n\tstring os = 1;\n\tstring arch = 2;\n\tint64 chunkOffset = 3;\n}",
      "doc": "下载最新边缘节点安装文件"
    },
    {
      "name": "UpdateNodeConnectedAPINodesRequest",
      "code": "\nmessage UpdateNodeConnectedAPINodesRequest {\n\trepeated int64 apiNodeIds = 1;\n}",
      "doc": "更改节点连接的API节点信息"
    },
    {
      "name": "FindAllEnabledNodesDNSWithNodeClusterIdResponse",
      "code": "\n\nmessage FindAllEnabledNodesDNSWithNodeClusterIdResponse {\n\trepeated NodeDNSInfo nodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledBasicNodeRequest",
      "code": "\nmessage FindEnabledBasicNodeRequest {\n\tint64 nodeId = 1;\n}",
      "doc": "获取单个节点基本信息"
    },
    {
      "name": "CountAllNotInstalledNodesWithNodeClusterIdRequest",
      "code": "\nmessage CountAllNotInstalledNodesWithNodeClusterIdRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "计算未安装的节点数量"
    },
    {
      "name": "FindNodeDDoSProtectionResponse",
      "code": "\n\nmessage FindNodeDDoSProtectionResponse {\n\tbytes ddosProtectionJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledNodesRequest",
      "code": "\nmessage CountAllEnabledNodesRequest {\n\n}",
      "doc": "所有可用的节点数量"
    },
    {
      "name": "ListEnabledNodesMatchRequest",
      "code": "\nmessage ListEnabledNodesMatchRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n\tint64 nodeClusterId = 3;\n\tint32 installState = 4;\n\tint32 activeState = 5;\n\tstring keyword = 6;\n\tint64 nodeGroupId = 7;\n\tint64 nodeRegionId = 8;\n\tint32 level = 9;\n\n\tbool cpuAsc = 20;\n\tbool cpuDesc = 21;\n\tbool memoryAsc = 22;\n\tbool memoryDesc = 23;\n\tbool trafficInAsc = 24;\n\tbool trafficInDesc = 25;\n\tbool trafficOutAsc = 26;\n\tbool trafficOutDesc = 27;\n\tbool loadAsc = 28;\n\tbool loadDesc = 29;\n}",
      "doc": "列出单页节点"
    },
    {
      "name": "UpdateNodeStatusRequest",
      "code": "\nmessage UpdateNodeStatusRequest {\n\tint64 nodeId = 1;\n\tbytes statusJSON = 2;\n}",
      "doc": "更新节点状态"
    },
    {
      "name": "CountAllEnabledNodesWithNodeGroupIdRequest",
      "code": "\nmessage CountAllEnabledNodesWithNodeGroupIdRequest {\n\tint64 nodeGroupId = 1;\n}",
      "doc": "计算某个节点分组内的节点数量"
    },
    {
      "name": "NodeDNSInfo",
      "code": "\n\nmessage NodeDNSInfo {\n\tint64 id = 1;\n\tstring name = 2;\n\tstring ipAddr = 3;\n\trepeated DNSRoute routes = 4;\n\tint64 nodeClusterId = 5;\n\tint64 dnsDomainId = 6;\n\tstring dnsDomainName = 7;\n\tstring nodeClusterDNSName = 8;\n}",
      "doc": ""
    },
    {
      "name": "DownloadNodeInstallationFileResponse",
      "code": "\n\nmessage DownloadNodeInstallationFileResponse {\n\tbytes chunkData = 1;\n\tstring sum = 2; // 文件的md5sum\n\tint64 offset = 3;\n\tstring version = 4;\n\tstring filename = 5;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeDDoSProtectionRequest",
      "code": "\nmessage UpdateNodeDDoSProtectionRequest {\n\tint64 nodeId = 1;\n\tbytes ddosProtectionJSON = 2;\n}",
      "doc": "修改节点的DDOS设置"
    },
    {
      "name": "ListEnabledNodesMatchResponse",
      "code": "\n\nmessage ListEnabledNodesMatchResponse {\n\trepeated Node nodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledNodeRequest",
      "code": "\nmessage FindEnabledNodeRequest {\n\tint64 nodeId = 1;\n}",
      "doc": "获取单个节点信息"
    },
    {
      "name": "UpdateNodeDNSRequest",
      "code": "\nmessage UpdateNodeDNSRequest {\n\tint64 nodeId = 1;\n\tstring ipAddr = 2;\n\tint64 dnsDomainId = 3;\n\trepeated string routes = 4;\n}",
      "doc": "修改节点的DNS信息"
    },
    {
      "name": "CheckNodeLatestVersionResponse",
      "code": "\n\nmessage CheckNodeLatestVersionResponse {\n\tbool hasNewVersion = 1;\n\tstring newVersion = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledNodeConfigInfoResponse",
      "code": "\n\nmessage FindEnabledNodeConfigInfoResponse {\n\tbool hasDNSInfo = 1;\n\tbool  hasCacheInfo = 2;\n\tbool  hasThresholds = 3;\n\tbool  hasSSH = 4;\n\tbool  hasSystemSettings = 5;\n\tbool hasDDoSProtection = 6;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledBasicNodeResponse",
      "code": "\n\nmessage FindEnabledBasicNodeResponse {\n\tBasicNode node = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledNodesWithNodeGrantIdResponse",
      "code": "\n\nmessage FindAllEnabledNodesWithNodeGrantIdResponse {\n\trepeated Node nodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "CheckNodeLatestVersionRequest",
      "code": "\nmessage CheckNodeLatestVersionRequest {\n\tstring os = 1;\n\tstring arch = 2;\n\tstring currentVersion = 3;\n}",
      "doc": "检查新版本"
    },
    {
      "name": "FindNodeDNSResolverRequest",
      "code": "\nmessage FindNodeDNSResolverRequest{\n\tint64 nodeId = 1;\n}",
      "doc": "读取节点DNS Resolver"
    },
    {
      "name": "FindEnabledNodeConfigInfoRequest",
      "code": "\nmessage FindEnabledNodeConfigInfoRequest {\n\tint64 nodeId = 1;\n}",
      "doc": "取得节点的配置概要信息"
    },
    {
      "name": "UpdateNodeRequest",
      "code": "\nmessage UpdateNodeRequest {\n\tint64 nodeId = 1;\n\tstring name = 2;\n\tint64 nodeClusterId = 3;\n\trepeated int64 secondaryNodeClusterIds = 13;\n\tbool isOn = 6;\n\tint64 nodeGroupId = 7;\n\tint64 nodeRegionId = 10;\n\tint32 level = 14;\n}",
      "doc": "修改节点"
    },
    {
      "name": "FindCurrentNodeConfigRequest",
      "code": "\nmessage FindCurrentNodeConfigRequest {\n\t// 由于登录信息中已经包含了节点信息，所以这里不需要nodeId\n\tint64 version = 1;\n\tbool compress = 2; // 是否压缩\n\tint64 nodeTaskVersion = 3; // 通知任务版本\n}",
      "doc": "组合单个节点配置"
    },
    {
      "name": "FindNodeInstallStatusRequest",
      "code": "\nmessage FindNodeInstallStatusRequest {\n\tint64 nodeId = 1;\n}",
      "doc": "读取节点安装状态"
    },
    {
      "name": "InstallNodeRequest",
      "code": "\nmessage InstallNodeRequest {\n\tint64 nodeId = 1;\n}",
      "doc": "安装节点"
    },
    {
      "name": "StopNodeResponse",
      "code": "\n\nmessage StopNodeResponse {\n\tbool isOk = 1;\n\tstring error = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindCurrentNodeConfigResponse",
      "code": "\n\nmessage FindCurrentNodeConfigResponse {\n\tbytes nodeJSON = 1;\n\tbool isChanged = 2;\n\tbool isCompressed = 3;\n\tint64 dataSize = 4;\n\tint64 timestamp = 5;\n}",
      "doc": ""
    },
    {
      "name": "FindAllUpgradeNodesWithNodeClusterIdRequest",
      "code": "\nmessage FindAllUpgradeNodesWithNodeClusterIdRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "列出所有需要升级的节点"
    },
    {
      "name": "UpdateNodeLoginRequest",
      "code": "\nmessage UpdateNodeLoginRequest {\n\tint64 nodeId = 1;\n\tNodeLogin nodeLogin = 2;\n}",
      "doc": "修改节点登录信息"
    },
    {
      "name": "FindAllEnabledNodesDNSWithNodeClusterIdRequest",
      "code": "\nmessage FindAllEnabledNodesDNSWithNodeClusterIdRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "取得某个集群下的所有节点"
    },
    {
      "name": "FindNodeDNSResolverResponse",
      "code": "\n\nmessage FindNodeDNSResolverResponse {\n\tbytes dnsResolverJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteNodeRequest",
      "code": "\nmessage DeleteNodeRequest {\n\tint64 nodeId = 1;\n}",
      "doc": "删除节点"
    },
    {
      "name": "FindEnabledNodeResponse",
      "code": "\n\nmessage FindEnabledNodeResponse {\n\tNode node = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllNotInstalledNodesWithNodeClusterIdRequest",
      "code": "\nmessage FindAllNotInstalledNodesWithNodeClusterIdRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "列出所有未安装的节点"
    },
    {
      "name": "CheckPortIsUsingInNodeClusterRequest",
      "code": "\nmessage CheckPortIsUsingInNodeClusterRequest {\n\tint32 port = 1;\n\tint64 nodeClusterId = 2;\n\tint64 excludeServerId = 3;\n\tstring excludeProtocol = 4;\n\tstring protocolFamily = 5;\n}",
      "doc": "检查端口是否已经被使用"
    },
    {
      "name": "FindNodeClusterHealthCheckConfigRequest",
      "code": "\nmessage FindNodeClusterHealthCheckConfigRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "查找集群的健康检查配置"
    },
    {
      "name": "CheckNodeClusterDNSNameResponse",
      "code": "\n\nmessage CheckNodeClusterDNSNameResponse {\n\tbool isUsed = 1;\n}",
      "doc": ""
    },
    {
      "name": "CheckNodeClusterDNSChangesRequest",
      "code": "\nmessage CheckNodeClusterDNSChangesRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "检查集群的DNS是否有变化"
    },
    {
      "name": "UpdateNodeClusterSystemServiceRequest",
      "code": "\nmessage UpdateNodeClusterSystemServiceRequest {\n\tint64 nodeClusterId = 1;\n\tstring type = 2;\n\tbytes paramsJSON = 3;\n}",
      "doc": "修改集群的系统服务设置"
    },
    {
      "name": "UpdateNodeClusterPinnedRequest",
      "code": "\nmessage UpdateNodeClusterPinnedRequest {\n\tint64 nodeClusterId = 1;\n\tbool isPinned = 2;\n}",
      "doc": "设置集群是否置顶"
    },
    {
      "name": "UpdateNodeClusterDDoSProtectionRequest",
      "code": "\nmessage UpdateNodeClusterDDoSProtectionRequest {\n\tint64 nodeClusterId = 1;\n\tbytes ddosProtectionJSON = 2;\n}",
      "doc": "修改集群的DDOS设置"
    },
    {
      "name": "DeleteNodeClusterRequest",
      "code": "\nmessage DeleteNodeClusterRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "删除集群"
    },
    {
      "name": "FindAllEnabledNodeClustersWithHTTPCachePolicyIdResponse",
      "code": "\n\nmessage FindAllEnabledNodeClustersWithHTTPCachePolicyIdResponse {\n\trepeated NodeCluster nodeClusters = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledNodeClustersWithHTTPFirewallPolicyIdRequest",
      "code": "\nmessage CountAllEnabledNodeClustersWithHTTPFirewallPolicyIdRequest {\n\tint64 httpFirewallPolicyId = 1;\n}",
      "doc": "计算使用某个WAF策略的集群数量"
    },
    {
      "name": "FindEnabledNodeClusterConfigInfoRequest",
      "code": "\nmessage FindEnabledNodeClusterConfigInfoRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "取得集群的配置概要信息"
    },
    {
      "name": "ExecuteNodeClusterHealthCheckResponse",
      "code": "\n\nmessage ExecuteNodeClusterHealthCheckResponse {\n\trepeated Result results = 1;\n\n\n\tmessage Result {\n\t\tNode node = 1;\n\t\tstring nodeAddr = 2;\n\t\tbool isOk = 3;\n\t\tstring error = 4;\n\t\tfloat costMs = 5;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "FindNodeClusterHealthCheckConfigResponse",
      "code": "\n\nmessage FindNodeClusterHealthCheckConfigResponse {\n\tbytes healthCheckJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "CheckNodeClusterDNSNameRequest",
      "code": "\nmessage CheckNodeClusterDNSNameRequest {\n\tint64 nodeClusterId = 1;\n\tstring dnsName = 2;\n}",
      "doc": "检查集群域名是否已经被使用"
    },
    {
      "name": "UpdateNodeClusterHTTPFirewallPolicyIdRequest",
      "code": "\nmessage UpdateNodeClusterHTTPFirewallPolicyIdRequest {\n\tint64 nodeClusterId = 1;\n\tint64 httpFirewallPolicyId = 2;\n}",
      "doc": "修改集群的WAF策略"
    },
    {
      "name": "FindEnabledNodeClusterWebPPolicyResponse",
      "code": "\n\nmessage FindEnabledNodeClusterWebPPolicyResponse {\n\tbytes webpPolicyJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindNodeClusterSystemServiceResponse",
      "code": "\n\nmessage FindNodeClusterSystemServiceResponse {\n\tbytes paramsJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "ExecuteNodeClusterHealthCheckRequest",
      "code": "\nmessage ExecuteNodeClusterHealthCheckRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "执行健康检查"
    },
    {
      "name": "CountAllEnabledNodeClustersWithDNSDomainIdRequest",
      "code": "\nmessage CountAllEnabledNodeClustersWithDNSDomainIdRequest {\n\tint64 dnsDomainId = 1;\n}",
      "doc": "计算使用某个DNS域名的集群数量"
    },
    {
      "name": "FindAllEnabledNodeClustersWithDNSDomainIdRequest",
      "code": "\nmessage FindAllEnabledNodeClustersWithDNSDomainIdRequest {\n\tint64 dnsDomainId = 1;\n}",
      "doc": "查找使用某个域名的所有集群"
    },
    {
      "name": "FindNodeClusterSystemServiceRequest",
      "code": "\nmessage FindNodeClusterSystemServiceRequest {\n\tint64 nodeClusterId = 1;\n\tstring type = 2;\n}",
      "doc": "查找集群的系统服务设置"
    },
    {
      "name": "UpdateNodeClusterHealthCheckRequest",
      "code": "\nmessage UpdateNodeClusterHealthCheckRequest {\n\tint64 nodeClusterId = 1;\n\tbytes healthCheckJSON = 2;\n}",
      "doc": "修改集群健康检查设置"
    },
    {
      "name": "FindNodeClusterDDoSProtectionResponse",
      "code": "\n\nmessage FindNodeClusterDDoSProtectionResponse {\n\tbytes ddosProtectionJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledNodeClustersWithNodeGrantIdRequest",
      "code": "\nmessage FindAllEnabledNodeClustersWithNodeGrantIdRequest {\n\tint64 nodeGrantId = 1;\n}",
      "doc": "查找使用某个认证的所有集群"
    },
    {
      "name": "FindAllEnabledNodeClustersWithHTTPCachePolicyIdRequest",
      "code": "\nmessage FindAllEnabledNodeClustersWithHTTPCachePolicyIdRequest {\n\tint64 httpCachePolicyId = 1;\n}",
      "doc": "查找使用缓存策略的所有集群"
    },
    {
      "name": "CheckPortIsUsingInNodeClusterResponse",
      "code": "\n\nmessage CheckPortIsUsingInNodeClusterResponse {\n\tbool isUsing = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledNodeClustersResponse",
      "code": "\n\nmessage FindAllEnabledNodeClustersResponse {\n\trepeated NodeCluster nodeClusters = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledNodeClusterResponse",
      "code": "\n\nmessage FindEnabledNodeClusterResponse {\n\tNodeCluster nodeCluster = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledNodeClustersWithHTTPCachePolicyIdRequest",
      "code": "\nmessage CountAllEnabledNodeClustersWithHTTPCachePolicyIdRequest {\n\tint64 httpCachePolicyId = 1;\n}",
      "doc": "计算使用某个缓存策略的集群数量"
    },
    {
      "name": "FindAllEnabledNodeClustersWithHTTPFirewallPolicyIdRequest",
      "code": "\nmessage FindAllEnabledNodeClustersWithHTTPFirewallPolicyIdRequest {\n\tint64 httpFirewallPolicyId = 1;\n}",
      "doc": "查找使用某个WAF策略的所有集群"
    },
    {
      "name": "FindAllEnabledNodeClustersWithDNSDomainIdResponse",
      "code": "\n\nmessage FindAllEnabledNodeClustersWithDNSDomainIdResponse {\n\trepeated NodeCluster nodeClusters = 1;\n}",
      "doc": ""
    },
    {
      "name": "CheckNodeClusterDNSChangesResponse",
      "code": "\n\nmessage CheckNodeClusterDNSChangesResponse {\n\tbool isChanged = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledNodeClustersWithHTTPFirewallPolicyIdResponse",
      "code": "\n\nmessage FindAllEnabledNodeClustersWithHTTPFirewallPolicyIdResponse {\n\trepeated NodeCluster nodeClusters = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledNodeClustersRequest",
      "code": "\nmessage CountAllEnabledNodeClustersRequest {\n\tstring keyword = 1;\n}",
      "doc": "计算所有集群数量"
    },
    {
      "name": "ListEnabledNodeClustersRequest",
      "code": "\nmessage ListEnabledNodeClustersRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n\tstring keyword = 3;\n}",
      "doc": "列出单页集群"
    },
    {
      "name": "ListEnabledNodeClustersResponse",
      "code": "\n\nmessage ListEnabledNodeClustersResponse {\n\trepeated NodeCluster nodeClusters = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledNodeClusterDNSRequest",
      "code": "\nmessage FindEnabledNodeClusterDNSRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "查找集群的DNS配置"
    },
    {
      "name": "FindEnabledNodeClusterTOAResponse",
      "code": "\n\nmessage FindEnabledNodeClusterTOAResponse {\n\tbytes toaJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindFreePortInNodeClusterResponse",
      "code": "\n\nmessage FindFreePortInNodeClusterResponse {\n\tint32 port = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledNodeClustersRequest",
      "code": "\nmessage FindAllEnabledNodeClustersRequest {\n\n}",
      "doc": "获取所有集群的信息"
    },
    {
      "name": "UpdateNodeClusterRequest",
      "code": "\nmessage UpdateNodeClusterRequest {\n\tint64 nodeClusterId = 1;\n\tstring name = 2;\n\tint64 nodeGrantId = 3;\n\tstring installDir = 4;\n\tstring timeZone = 5;\n\tint32 nodeMaxThreads = 6;\n\n\tbool autoOpenPorts = 8;\n}",
      "doc": "修改集群"
    },
    {
      "name": "FindLatestNodeClustersResponse",
      "code": "\n\nmessage FindLatestNodeClustersResponse {\n\trepeated NodeCluster nodeClusters = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindNodeClusterDDoSProtectionRequest",
      "code": "\nmessage FindNodeClusterDDoSProtectionRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "获取集群的DDoS设置"
    },
    {
      "name": "FindAPINodesWithNodeClusterResponse",
      "code": "\n\nmessage FindAPINodesWithNodeClusterResponse {\n\tbool useAllAPINodes = 1;\n\trepeated APINode apiNodes = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindFreePortInNodeClusterRequest",
      "code": "\nmessage FindFreePortInNodeClusterRequest {\n\tint64 nodeClusterId = 1;\n\tstring protocolFamily = 2;\n}",
      "doc": "获取集群中可以使用的端口"
    },
    {
      "name": "FindAPINodesWithNodeClusterRequest",
      "code": "\nmessage FindAPINodesWithNodeClusterRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "查找集群的API节点信息"
    },
    {
      "name": "FindEnabledNodeClusterTOARequest",
      "code": "\nmessage FindEnabledNodeClusterTOARequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "查找集群的TOA配置"
    },
    {
      "name": "FindEnabledNodeClusterConfigInfoResponse",
      "code": "\n\nmessage FindEnabledNodeClusterConfigInfoResponse {\n\tbool healthCheckIsOn = 1;\n\tbool hasFirewallActions = 2;\n\tbool hasThresholds = 3;\n\tbool hasMessageReceivers = 4;\n\tbool isTOAEnabled = 5;\n\tbool hasMetricItems = 6;\n\tbool webpIsOn = 7;\n\tbool hasSystemServices = 8;\n\tbool hasDDoSProtection = 9;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeClusterDNSRequest",
      "code": "\nmessage UpdateNodeClusterDNSRequest {\n\tint64 nodeClusterId = 1;\n\tstring dnsName = 2;\n\tint64 dnsDomainId = 3;\n\tbool nodesAutoSync = 4;\n\tbool serversAutoSync = 5;\n\trepeated string cnameRecords = 6;\n\tint32 ttl = 7;\n}",
      "doc": "修改集群的域名设置"
    },
    {
      "name": "UpdateNodeClusterHTTPCachePolicyIdRequest",
      "code": "\nmessage UpdateNodeClusterHTTPCachePolicyIdRequest {\n\tint64 nodeClusterId = 1;\n\tint64 httpCachePolicyId = 2;\n}",
      "doc": "修改集群的缓存策略"
    },
    {
      "name": "CreateNodeClusterRequest",
      "code": "\nmessage CreateNodeClusterRequest {\n\tstring name = 1;\n\tint64 nodeGrantId = 2;\n\tstring installDir = 3;\n\tint64 dnsDomainId = 4;\n\tstring dnsName = 5;\n\tint64 httpCachePolicyId = 6;\n\tint64 httpFirewallPolicyId = 7;\n\tbytes systemServicesJSON = 8; // 系统服务设置\n}",
      "doc": "创建集群"
    },
    {
      "name": "CountAllEnabledNodeClustersWithNodeGrantIdRequest",
      "code": "\nmessage CountAllEnabledNodeClustersWithNodeGrantIdRequest {\n\tint64 nodeGrantId = 1;\n}",
      "doc": "计算使用某个认证的集群数量"
    },
    {
      "name": "FindEnabledNodeClusterDNSResponse",
      "code": "\n\nmessage FindEnabledNodeClusterDNSResponse {\n\tstring name = 1;\n\tDNSDomain domain = 2;\n\tDNSProvider provider = 3;\n\tstring defaultRoute = 6;\n\tbool nodesAutoSync = 4;\n\tbool serversAutoSync = 5;\n\trepeated string cnameRecords = 7;\n\tint32 ttl = 8;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledNodeClustersWithDNSProviderIdRequest",
      "code": "\nmessage CountAllEnabledNodeClustersWithDNSProviderIdRequest {\n\tint64 dnsProviderId = 1;\n}",
      "doc": "计算使用某个DNS服务商的集群数量"
    },
    {
      "name": "CreateNodeClusterResponse",
      "code": "\n\nmessage CreateNodeClusterResponse {\n\tint64 nodeClusterId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledNodeClustersWithNodeGrantIdResponse",
      "code": "\n\nmessage FindAllEnabledNodeClustersWithNodeGrantIdResponse {\n\trepeated NodeCluster nodeClusters = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeClusterWebPPolicyRequest",
      "code": "\nmessage UpdateNodeClusterWebPPolicyRequest {\n\tint64 nodeClusterId = 1;\n\tbytes webpPolicyJSON = 2;\n}",
      "doc": "设置集群WebP策略"
    },
    {
      "name": "FindEnabledNodeClusterRequest",
      "code": "\nmessage FindEnabledNodeClusterRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "查找单个集群信息"
    },
    {
      "name": "UpdateNodeClusterTOARequest",
      "code": "\nmessage UpdateNodeClusterTOARequest {\n\tint64 nodeClusterId = 1;\n\tbytes toaJSON = 2;\n}",
      "doc": "修改集群的TOA设置"
    },
    {
      "name": "FindLatestNodeClustersRequest",
      "code": "\nmessage FindLatestNodeClustersRequest {\n\tint64 size = 1;\n}",
      "doc": "查找最近访问的集群"
    },
    {
      "name": "FindEnabledNodeClusterWebPPolicyRequest",
      "code": "\nmessage FindEnabledNodeClusterWebPPolicyRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "读取集群WebP策略"
    },
    {
      "name": "CreateNodeClusterFirewallActionRequest",
      "code": "\nmessage CreateNodeClusterFirewallActionRequest {\n\tint64 nodeClusterId = 1;\n\tstring name = 2;\n\tstring eventLevel = 3;\n\tstring type = 4;\n\tbytes paramsJSON = 5;\n}",
      "doc": "创建动作"
    },
    {
      "name": "NodeClusterFirewallActionResponse",
      "code": "\n\nmessage NodeClusterFirewallActionResponse {\n\tint64 nodeClusterFirewallActionId = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteNodeClusterFirewallActionRequest",
      "code": "\nmessage DeleteNodeClusterFirewallActionRequest {\n\tint64 nodeClusterFirewallActionId = 1;\n}",
      "doc": "删除动作"
    },
    {
      "name": "FindAllEnabledNodeClusterFirewallActionsRequest",
      "code": "\nmessage FindAllEnabledNodeClusterFirewallActionsRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "查询集群的所有动作"
    },
    {
      "name": "FindAllEnabledNodeClusterFirewallActionsResponse",
      "code": "\n\nmessage FindAllEnabledNodeClusterFirewallActionsResponse {\n\trepeated NodeClusterFirewallAction nodeClusterFirewallActions = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledNodeClusterFirewallActionRequest",
      "code": "\nmessage FindEnabledNodeClusterFirewallActionRequest {\n\tint64 nodeClusterFirewallActionId = 1;\n}",
      "doc": "查询单个动作"
    },
    {
      "name": "CountAllEnabledNodeClusterFirewallActionsRequest",
      "code": "\nmessage CountAllEnabledNodeClusterFirewallActionsRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "计算动作数量"
    },
    {
      "name": "UpdateNodeClusterFirewallActionRequest",
      "code": "\nmessage UpdateNodeClusterFirewallActionRequest {\n\tint64 nodeClusterFirewallActionId = 1;\n\tstring name = 2;\n\tstring eventLevel = 3;\n\tstring type = 4;\n\tbytes paramsJSON = 5;\n}",
      "doc": "修改动作"
    },
    {
      "name": "FindEnabledNodeClusterFirewallActionResponse",
      "code": "\n\nmessage FindEnabledNodeClusterFirewallActionResponse {\n\tNodeClusterFirewallAction nodeClusterFirewallAction = 1;\n}",
      "doc": ""
    },
    {
      "name": "EnableNodeClusterMetricItemRequest",
      "code": "\nmessage EnableNodeClusterMetricItemRequest {\n\tint64 nodeClusterId = 1;\n\tint64 metricItemId = 2;\n}",
      "doc": "启用某个指标"
    },
    {
      "name": "DisableNodeClusterMetricItemRequest",
      "code": "\nmessage DisableNodeClusterMetricItemRequest {\n\tint64 nodeClusterId = 1;\n\tint64 metricItemId = 2;\n}",
      "doc": "禁用某个指标"
    },
    {
      "name": "FindAllNodeClusterMetricItemsRequest",
      "code": "\nmessage FindAllNodeClusterMetricItemsRequest {\n\tint64 nodeClusterId = 1;\n\tstring category = 2;\n}",
      "doc": "查找集群中所有指标"
    },
    {
      "name": "FindAllNodeClusterMetricItemsResponse",
      "code": "\n\nmessage FindAllNodeClusterMetricItemsResponse {\n\trepeated MetricItem metricItems = 1;\n}",
      "doc": ""
    },
    {
      "name": "ExistsNodeClusterMetricItemRequest",
      "code": "\nmessage ExistsNodeClusterMetricItemRequest {\n\tint64 nodeClusterId = 1;\n\tint64 metricItemId = 2;\n}",
      "doc": "检查是否已添加某个指标"
    },
    {
      "name": "FindAllNodeClustersWithMetricItemIdRequest",
      "code": "\nmessage FindAllNodeClustersWithMetricItemIdRequest {\n\tint64 metricItemId = 1;\n}",
      "doc": "查找使用指标的集群"
    },
    {
      "name": "FindAllNodeClustersWithMetricItemIdResponse",
      "code": "\n\nmessage FindAllNodeClustersWithMetricItemIdResponse {\n\trepeated NodeCluster nodeClusters = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNodeGrantRequest",
      "code": "\nmessage CreateNodeGrantRequest {\n\tstring name = 1;\n\tstring method = 2;\n\tstring username = 3;\n\tstring password = 4;\n\tstring privateKey = 5;\n\tstring passphrase = 8;\n\tstring description = 6;\n\tint64 nodeId = 7;\n\tbool su = 9;\n}",
      "doc": "创建节点认证"
    },
    {
      "name": "DisableNodeGrantRequest",
      "code": "\nmessage DisableNodeGrantRequest {\n\tint64 nodeGrantId = 1;\n}",
      "doc": "禁用节点认证"
    },
    {
      "name": "FindSuggestNodeGrantsRequest",
      "code": "\nmessage FindSuggestNodeGrantsRequest {\n\tint64 nodeClusterId = 1; // 边缘节点集群\n\tint64 nsClusterId = 2; // NS节点集群\n}",
      "doc": "查找集群推荐的认证"
    },
    {
      "name": "FindEnabledNodeGrantResponse",
      "code": "\n\nmessage FindEnabledNodeGrantResponse {\n\tNodeGrant nodeGrant = 1;\n}",
      "doc": ""
    },
    {
      "name": "TestNodeGrantRequest",
      "code": "\nmessage TestNodeGrantRequest {\n\tint64 nodeGrantId = 1;\n\tstring host = 2;\n\tint32 port = 3;\n}",
      "doc": "测试连接"
    },
    {
      "name": "FindSuggestNodeGrantsResponse",
      "code": "\n\nmessage FindSuggestNodeGrantsResponse {\n\trepeated NodeGrant nodeGrants = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeGrantRequest",
      "code": "\nmessage UpdateNodeGrantRequest {\n\tint64 nodeGrantId = 8;\n\tstring name = 1;\n\tstring method = 2;\n\tstring username = 3;\n\tstring password = 4;\n\tstring privateKey = 5;\n\tstring passphrase = 9;\n\tstring description = 6;\n\tint64 nodeId = 7;\n\tbool su = 10;\n}",
      "doc": "修改节点认证"
    },
    {
      "name": "DisableNodeGrantResponse",
      "code": "\n\nmessage DisableNodeGrantResponse {\n\n}",
      "doc": ""
    },
    {
      "name": "ListEnabledNodeGrantsResponse",
      "code": "\n\nmessage ListEnabledNodeGrantsResponse {\n\trepeated NodeGrant nodeGrants = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledNodeGrantsRequest",
      "code": "\nmessage FindAllEnabledNodeGrantsRequest {\n\n}",
      "doc": "获取所有认证信息"
    },
    {
      "name": "FindAllEnabledNodeGrantsResponse",
      "code": "\n\nmessage FindAllEnabledNodeGrantsResponse {\n\trepeated NodeGrant nodeGrants = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNodeGrantResponse",
      "code": "\n\nmessage CreateNodeGrantResponse {\n\tint64 nodeGrantId = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledNodeGrantsRequest",
      "code": "\nmessage CountAllEnabledNodeGrantsRequest {\n\tstring keyword = 1;\n}",
      "doc": "计算节点认证数量"
    },
    {
      "name": "ListEnabledNodeGrantsRequest",
      "code": "\nmessage ListEnabledNodeGrantsRequest {\n\tstring keyword = 3;\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出单页认证"
    },
    {
      "name": "FindEnabledNodeGrantRequest",
      "code": "\nmessage FindEnabledNodeGrantRequest {\n\tint64 nodeGrantId = 1;\n}",
      "doc": "获取认证信息"
    },
    {
      "name": "TestNodeGrantResponse",
      "code": "\n\nmessage TestNodeGrantResponse {\n\tbool isOk = 1;\n\tstring error = 2;\n}",
      "doc": ""
    },
    {
      "name": "CreateNodeGroupResponse",
      "code": "\n\nmessage CreateNodeGroupResponse {\n\tint64 nodeGroupId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeGroupRequest",
      "code": "\nmessage UpdateNodeGroupRequest {\n\tint64 nodeGroupId = 1;\n\tstring name = 2;\n}",
      "doc": "修改分组"
    },
    {
      "name": "DeleteNodeGroupRequest",
      "code": "\nmessage DeleteNodeGroupRequest {\n\tint64 nodeGroupId = 1;\n}",
      "doc": "删除分组"
    },
    {
      "name": "FindAllEnabledNodeGroupsWithNodeClusterIdResponse",
      "code": "\n\nmessage FindAllEnabledNodeGroupsWithNodeClusterIdResponse {\n\trepeated NodeGroup nodeGroups = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeGroupOrdersRequest",
      "code": "\nmessage UpdateNodeGroupOrdersRequest {\n\trepeated int64 nodeGroupIds = 1;\n}",
      "doc": "修改分组排序"
    },
    {
      "name": "FindEnabledNodeGroupRequest",
      "code": "\nmessage FindEnabledNodeGroupRequest {\n\tint64 nodeGroupId = 1;\n}",
      "doc": "查找单个分组信息"
    },
    {
      "name": "FindEnabledNodeGroupResponse",
      "code": "\n\nmessage FindEnabledNodeGroupResponse {\n\tNodeGroup nodeGroup = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNodeGroupRequest",
      "code": "\nmessage CreateNodeGroupRequest {\n\tint64 nodeClusterId = 1;\n\tstring name = 2;\n}",
      "doc": "创建分组"
    },
    {
      "name": "FindAllEnabledNodeGroupsWithNodeClusterIdRequest",
      "code": "\nmessage FindAllEnabledNodeGroupsWithNodeClusterIdRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "查询所有分组"
    },
    {
      "name": "CountAllEnabledNodeIPAddressesRequest",
      "code": "\nmessage CountAllEnabledNodeIPAddressesRequest {\n\tint64 nodeClusterId = 1;\n\tstring role = 2;\n\tint32 upState = 3;\n\tstring keyword = 4;\n}",
      "doc": "计算IP地址数量"
    },
    {
      "name": "CreateNodeIPAddressRequest",
      "code": "\nmessage CreateNodeIPAddressRequest {\n\tint64 nodeId = 1;\n\tstring role = 2;\n\tstring name = 3;\n\tstring ip = 4;\n\tbool canAccess = 5;\n\tbool isUp = 6;\n}",
      "doc": "创建IP地址"
    },
    {
      "name": "CreateNodeIPAddressesRequest",
      "code": "\nmessage CreateNodeIPAddressesRequest {\n\tint64 nodeId = 1;\n\tstring role = 2;\n\tstring name = 3;\n\trepeated string ipList = 4;\n\tbool canAccess = 5;\n\tbool isUp = 6;\n\tstring groupValue = 7;\n}",
      "doc": "批量创建IP地址"
    },
    {
      "name": "CreateNodeIPAddressesResponse",
      "code": "\n\nmessage CreateNodeIPAddressesResponse {\n\trepeated int64 nodeIPAddressIds = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeIPAddressNodeIdRequest",
      "code": "\nmessage UpdateNodeIPAddressNodeIdRequest {\n\tint64 nodeIPAddressId = 1;\n\tint64 nodeId = 2;\n}",
      "doc": "修改IP地址所属节点"
    },
    {
      "name": "DisableNodeIPAddressResponse",
      "code": "\n\nmessage DisableNodeIPAddressResponse {\n\n}",
      "doc": ""
    },
    {
      "name": "DisableAllNodeIPAddressesWithNodeIdResponse",
      "code": "\n\nmessage DisableAllNodeIPAddressesWithNodeIdResponse {\n\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledNodeIPAddressesWithNodeIdRequest",
      "code": "\nmessage FindAllEnabledNodeIPAddressesWithNodeIdRequest {\n\tint64 nodeId = 1;\n\tstring role = 2;\n}",
      "doc": "查找节点的所有地址"
    },
    {
      "name": "ListEnabledNodeIPAddressesRequest",
      "code": "\nmessage ListEnabledNodeIPAddressesRequest {\n\tint64 nodeClusterId = 1;\n\tstring role = 2;\n\tint32 upState = 3;\n\tstring keyword = 4;\n\tint64 offset = 5;\n\tint64 size = 6;\n}",
      "doc": "列出单页IP地址"
    },
    {
      "name": "ListEnabledNodeIPAddressesResponse",
      "code": "\n\nmessage ListEnabledNodeIPAddressesResponse {\n\trepeated NodeIPAddress nodeIPAddresses = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeIPAddressIsUpRequest",
      "code": "\nmessage UpdateNodeIPAddressIsUpRequest {\n\tint64 nodeIPAddressId = 1;\n\tbool isUp = 2;\n}",
      "doc": "设置上下线状态"
    },
    {
      "name": "RestoreNodeIPAddressBackupIPRequest",
      "code": "\nmessage RestoreNodeIPAddressBackupIPRequest {\n\tint64 nodeIPAddressId = 1;\n}",
      "doc": "还原备用IP状态"
    },
    {
      "name": "CreateNodeIPAddressResponse",
      "code": "\n\nmessage CreateNodeIPAddressResponse {\n\tint64 nodeIPAddressId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeIPAddressRequest",
      "code": "\nmessage UpdateNodeIPAddressRequest {\n\tint64 nodeIPAddressId = 1;\n\tstring name = 2;\n\tstring ip = 3;\n\tbool canAccess = 4;\n\tbool isOn = 5;\n\tbool isUp = 6;\n}",
      "doc": "修改IP地址"
    },
    {
      "name": "DisableNodeIPAddressRequest",
      "code": "\nmessage DisableNodeIPAddressRequest {\n\tint64 nodeIPAddressId = 1;\n}",
      "doc": "禁用单个IP地址"
    },
    {
      "name": "FindAllEnabledNodeIPAddressesWithNodeIdResponse",
      "code": "\n\nmessage FindAllEnabledNodeIPAddressesWithNodeIdResponse {\n\trepeated NodeIPAddress nodeIPAddresses = 1;\n}",
      "doc": ""
    },
    {
      "name": "DisableAllNodeIPAddressesWithNodeIdRequest",
      "code": "\nmessage DisableAllNodeIPAddressesWithNodeIdRequest {\n\tint64 nodeId = 1;\n\tstring role = 2;\n}",
      "doc": "禁用节点的所有IP地址"
    },
    {
      "name": "FindEnabledNodeIPAddressRequest",
      "code": "\nmessage FindEnabledNodeIPAddressRequest {\n\tint64 nodeIPAddressId = 1;\n}",
      "doc": "查找单个IP地址"
    },
    {
      "name": "FindEnabledNodeIPAddressResponse",
      "code": "\n\nmessage FindEnabledNodeIPAddressResponse {\n\tNodeIPAddress nodeIPAddress = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllNodeIPAddressLogsRequest",
      "code": "\nmessage CountAllNodeIPAddressLogsRequest {\n\tint64 nodeIPAddressId = 1;\n}",
      "doc": "计算日志数量"
    },
    {
      "name": "ListNodeIPAddressLogsRequest",
      "code": "\nmessage ListNodeIPAddressLogsRequest {\n\tint64 nodeIPAddressId = 1;\n\tint64 offset = 2;\n\tint64 size = 3;\n}",
      "doc": "列出单页日志"
    },
    {
      "name": "ListNodeIPAddressLogsResponse",
      "code": "\n\nmessage ListNodeIPAddressLogsResponse {\n\trepeated NodeIPAddressLog nodeIPAddressLogs = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNodeIPAddressThresholdResponse",
      "code": "\n\nmessage CreateNodeIPAddressThresholdResponse {\n\tint64 nodeIPAddressThresholdId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeIPAddressThresholdRequest",
      "code": "\nmessage UpdateNodeIPAddressThresholdRequest {\n\tint64 nodeIPAddressThresholdId = 1;\n\tbytes itemsJSON = 2;\n\tbytes actionsJSON = 3;\n}",
      "doc": "修改阈值"
    },
    {
      "name": "DeleteNodeIPAddressThresholdRequest",
      "code": "\nmessage DeleteNodeIPAddressThresholdRequest {\n\tint64 nodeIPAddressThresholdId = 1;\n}",
      "doc": "删除阈值"
    },
    {
      "name": "FindAllEnabledNodeIPAddressThresholdsRequest",
      "code": "\nmessage FindAllEnabledNodeIPAddressThresholdsRequest {\n\tint64 nodeIPAddressId = 1;\n}",
      "doc": "查找IP的所有阈值"
    },
    {
      "name": "FindAllEnabledNodeIPAddressThresholdsResponse",
      "code": "\n\nmessage FindAllEnabledNodeIPAddressThresholdsResponse {\n\trepeated NodeIPAddressThreshold nodeIPAddressThresholds = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledNodeIPAddressThresholdsRequest",
      "code": "\nmessage CountAllEnabledNodeIPAddressThresholdsRequest {\n\tint64 nodeIPAddressId = 1;\n}",
      "doc": "计算IP阈值的数量"
    },
    {
      "name": "UpdateAllNodeIPAddressThresholdsRequest",
      "code": "\nmessage UpdateAllNodeIPAddressThresholdsRequest {\n\tint64 nodeIPAddressId = 1;\n\tbytes nodeIPAddressThresholdsJSON = 2;\n}",
      "doc": "批量更新阈值"
    },
    {
      "name": "CreateNodeIPAddressThresholdRequest",
      "code": "\nmessage CreateNodeIPAddressThresholdRequest{\n\tint64 nodeIPAddressId = 1;\n\tbytes itemsJSON = 2;\n\tbytes actionsJSON = 3;\n}",
      "doc": "创建阈值"
    },
    {
      "name": "FixNodeLogsRequest",
      "code": "\nmessage FixNodeLogsRequest {\n\trepeated int64 nodeLogIds = 1;\n}",
      "doc": "设置日志为已修复"
    },
    {
      "name": "FixAllNodeLogsRequest",
      "code": "\nmessage FixAllNodeLogsRequest {\n\n}",
      "doc": "设置所有日志为已修复"
    },
    {
      "name": "UpdateNodeLogsReadRequest",
      "code": "\nmessage UpdateNodeLogsReadRequest {\n\trepeated int64 nodeLogIds = 1;\n}",
      "doc": "设置日志为已读"
    },
    {
      "name": "CreateNodeLogsResponse",
      "code": "\n\nmessage CreateNodeLogsResponse {\n\n}",
      "doc": ""
    },
    {
      "name": "CountNodeLogsRequest",
      "code": "\nmessage CountNodeLogsRequest {\n\tint64 nodeClusterId = 11;\n\tint64 nodeId = 1;\n\tstring role = 2;\n\tstring dayFrom = 3;\n\tstring dayTo = 4;\n\tstring keyword = 5;\n\tstring level = 6;\n\tint64 serverId = 7;\n\tint64 originId = 8;\n\tbool isUnread = 9;\n\tstring tag = 10;\n\tint32 fixedState = 12;\n\tbool allServers = 13; // 是否获取所有服务相关的日志\n}",
      "doc": "查询日志数量"
    },
    {
      "name": "ListNodeLogsRequest",
      "code": "\nmessage ListNodeLogsRequest {\n\tint64 nodeClusterId = 15;\n\tint64 nodeId = 1;\n\tstring role = 2;\n\tint64 offset = 3;\n\tint64 size = 4;\n\n\tstring dayFrom = 5;\n\tstring dayTo = 6;\n\tstring keyword = 7;\n\tstring level = 8;\n\tint64 serverId = 9;\n\tint32 fixedState = 10;\n\tbool allServers = 11; // 是否获取所有服务相关的日志\n\tint64 originId = 12;\n\tbool isUnread = 13;\n\tstring tag = 14;\n}",
      "doc": "列出单页日志"
    },
    {
      "name": "ListNodeLogsResponse",
      "code": "\n\nmessage ListNodeLogsResponse {\n\trepeated NodeLog nodeLogs = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNodeLogsRequest",
      "code": "\nmessage CreateNodeLogsRequest {\n\trepeated NodeLog nodeLogs = 1;\n}",
      "doc": "创建日志"
    },
    {
      "name": "UpdateAllNodeLogsReadRequest",
      "code": "\nmessage UpdateAllNodeLogsReadRequest {\n\n}",
      "doc": "设置所有日志未已读"
    },
    {
      "name": "FindNodeLoginSuggestPortsResponse",
      "code": "\n\nmessage FindNodeLoginSuggestPortsResponse {\n\trepeated int32 ports = 1;\n\trepeated int32 availablePorts = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindNodeLoginSuggestPortsRequest",
      "code": "\nmessage FindNodeLoginSuggestPortsRequest {\n\tstring host = 1;\n}",
      "doc": "读取建议的端口"
    },
    {
      "name": "CreateNodePriceItemResponse",
      "code": "\n\nmessage CreateNodePriceItemResponse {\n\tint64 NodePriceItemId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodePriceItemRequest",
      "code": "\nmessage UpdateNodePriceItemRequest {\n\tint64 NodePriceItemId = 1;\n\tstring name = 2;\n\tbool isOn = 3;\n\tint64 bitsFrom = 4;\n\tint64 bitsTo = 5;\n}",
      "doc": "修改区域价格"
    },
    {
      "name": "DeleteNodePriceItemRequest",
      "code": "\nmessage DeleteNodePriceItemRequest {\n\tint64 NodePriceItemId = 1;\n}",
      "doc": "删除区域价格"
    },
    {
      "name": "FindAllEnabledNodePriceItemsResponse",
      "code": "\n\nmessage FindAllEnabledNodePriceItemsResponse {\n\trepeated NodePriceItem NodePriceItems = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNodePriceItemRequest",
      "code": "\nmessage CreateNodePriceItemRequest {\n\tstring name = 1;\n\tstring type = 2;\n\tint64 bitsFrom = 3;\n\tint64 bitsTo = 4;\n}",
      "doc": "创建区域价格"
    },
    {
      "name": "FindAllEnabledNodePriceItemsRequest",
      "code": "\nmessage FindAllEnabledNodePriceItemsRequest {\n\tstring type = 1;\n}",
      "doc": "查找所有区域价格"
    },
    {
      "name": "FindAllEnabledAndOnNodePriceItemsRequest",
      "code": "\nmessage FindAllEnabledAndOnNodePriceItemsRequest {\n\tstring type = 1;\n}",
      "doc": "查找所有启用的区域价格"
    },
    {
      "name": "FindAllEnabledAndOnNodePriceItemsResponse",
      "code": "\n\nmessage FindAllEnabledAndOnNodePriceItemsResponse {\n\trepeated NodePriceItem NodePriceItems = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledNodePriceItemRequest",
      "code": "\nmessage FindEnabledNodePriceItemRequest {\n\tint64 NodePriceItemId = 1;\n}",
      "doc": "查找单个区域价格信息"
    },
    {
      "name": "FindEnabledNodePriceItemResponse",
      "code": "\n\nmessage FindEnabledNodePriceItemResponse {\n\tNodePriceItem NodePriceItem = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNodeRegionRequest",
      "code": "\nmessage CreateNodeRegionRequest {\n\tstring name = 1;\n\tstring description = 2;\n}",
      "doc": "创建区域"
    },
    {
      "name": "UpdateNodeRegionRequest",
      "code": "\nmessage UpdateNodeRegionRequest {\n\tint64 nodeRegionId = 1;\n\tstring name = 2;\n\tstring description = 3;\n\tbool isOn = 4;\n}",
      "doc": "修改区域"
    },
    {
      "name": "FindAllEnabledAndOnNodeRegionsRequest",
      "code": "\nmessage FindAllEnabledAndOnNodeRegionsRequest {\n\n}",
      "doc": "查找所有启用的区域"
    },
    {
      "name": "FindAllEnabledAndOnNodeRegionsResponse",
      "code": "\n\nmessage FindAllEnabledAndOnNodeRegionsResponse {\n\trepeated NodeRegion nodeRegions = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeRegionPriceRequest",
      "code": "\nmessage UpdateNodeRegionPriceRequest {\n\tint64 nodeRegionId = 1;\n\tint64 nodeItemId = 2;\n\tfloat price = 3;\n}",
      "doc": "修改价格项价格"
    },
    {
      "name": "FindEnabledNodeRegionRequest",
      "code": "\nmessage FindEnabledNodeRegionRequest {\n\tint64 nodeRegionId = 1;\n}",
      "doc": "查找单个区域信息"
    },
    {
      "name": "FindEnabledNodeRegionResponse",
      "code": "\n\nmessage FindEnabledNodeRegionResponse {\n\tNodeRegion nodeRegion = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNodeRegionResponse",
      "code": "\n\nmessage CreateNodeRegionResponse {\n\tint64 nodeRegionId = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteNodeRegionRequest",
      "code": "\nmessage DeleteNodeRegionRequest {\n\tint64 nodeRegionId = 1;\n}",
      "doc": "删除区域"
    },
    {
      "name": "FindAllEnabledNodeRegionsRequest",
      "code": "\nmessage FindAllEnabledNodeRegionsRequest {\n\n}",
      "doc": "查找所有区域"
    },
    {
      "name": "FindAllEnabledNodeRegionsResponse",
      "code": "\n\nmessage FindAllEnabledNodeRegionsResponse {\n\trepeated NodeRegion nodeRegions = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeRegionOrdersRequest",
      "code": "\nmessage UpdateNodeRegionOrdersRequest {\n\trepeated int64 nodeRegionIds = 1;\n}",
      "doc": "排序"
    },
    {
      "name": "FindNodeClusterTasksResponse",
      "code": "\n\nmessage FindNodeClusterTasksResponse {\n\trepeated ClusterTask clusterTasks = 1;\n}",
      "doc": ""
    },
    {
      "name": "ExistsNodeTasksRequest",
      "code": "\nmessage ExistsNodeTasksRequest {\n\trepeated string excludeTypes = 1;\n}",
      "doc": "检查是否有正在执行的任务"
    },
    {
      "name": "DeleteNodeTasksRequest",
      "code": "\nmessage DeleteNodeTasksRequest {\n\trepeated int64 nodeTaskIds = 1;\n}",
      "doc": "批量删除任务"
    },
    {
      "name": "CountDoingNodeTasksRequest",
      "code": "\nmessage CountDoingNodeTasksRequest {\n\n}",
      "doc": "计算正在执行的任务数量"
    },
    {
      "name": "FindNotifyingNodeTasksResponse",
      "code": "\n\nmessage FindNotifyingNodeTasksResponse {\n\trepeated NodeTask nodeTasks = 1;\n}",
      "doc": ""
    },
    {
      "name": "ReportNodeTaskDoneRequest",
      "code": "\nmessage ReportNodeTaskDoneRequest {\n\tint64 nodeTaskId = 1;\n\tbool isOk = 2;\n\tstring error = 3;\n}",
      "doc": "报告同步任务结果"
    },
    {
      "name": "DeleteNodeTaskRequest",
      "code": "\nmessage DeleteNodeTaskRequest {\n\tint64 nodeTaskId = 1;\n}",
      "doc": "删除任务"
    },
    {
      "name": "FindNodeTasksRequest",
      "code": "\nmessage FindNodeTasksRequest {\n\n}",
      "doc": "获取单节点同步任务"
    },
    {
      "name": "FindNodeTasksResponse",
      "code": "\n\nmessage FindNodeTasksResponse {\n\trepeated NodeTask nodeTasks = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindNodeClusterTasksRequest",
      "code": "\nmessage FindNodeClusterTasksRequest {\n\n}",
      "doc": "获取所有正在同步的集群信息"
    },
    {
      "name": "ClusterTask",
      "code": "\n\nmessage ClusterTask {\n\tint64 clusterId = 1;\n\tstring clusterName = 2;\n\trepeated NodeTask nodeTasks = 3;\n}",
      "doc": ""
    },
    {
      "name": "ExistsNodeTasksResponse",
      "code": "\n\nmessage ExistsNodeTasksResponse {\n\tbool existTasks = 1;\n\tbool existError = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindNotifyingNodeTasksRequest",
      "code": "\nmessage FindNotifyingNodeTasksRequest {\n\tint64 size = 1;\n}",
      "doc": "查找需要通知的任务"
    },
    {
      "name": "UpdateNodeTasksNotifiedRequest",
      "code": "\nmessage UpdateNodeTasksNotifiedRequest {\n\trepeated int64 nodeTaskIds = 1;\n}",
      "doc": "设置任务已通知"
    },
    {
      "name": "CountAllEnabledNodeThresholdsRequest",
      "code": "\nmessage CountAllEnabledNodeThresholdsRequest {\n\tstring role = 1;\n\tint64 nodeClusterId = 2;\n\tint64 nodeId = 3;\n}",
      "doc": "计算阈值数量"
    },
    {
      "name": "FindEnabledNodeThresholdRequest",
      "code": "\nmessage FindEnabledNodeThresholdRequest {\n\tint64 nodeThresholdId = 1;\n}",
      "doc": "查询单个阈值详情"
    },
    {
      "name": "FindEnabledNodeThresholdResponse",
      "code": "\n\nmessage FindEnabledNodeThresholdResponse {\n\tNodeThreshold nodeThreshold = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNodeThresholdRequest",
      "code": "\nmessage CreateNodeThresholdRequest {\n\tstring role = 1;\n\tint64 nodeClusterId = 2;\n\tint64 nodeId = 3;\n\tstring item = 4;\n\tstring param = 5;\n\tstring operator = 6;\n\tbytes valueJSON = 7;\n\tstring message = 8;\n\tint32 duration = 9;\n\tstring durationUnit = 10;\n\tstring sumMethod = 11;\n\tint32 notifyDuration = 12;\n}",
      "doc": "创建阈值"
    },
    {
      "name": "CreateNodeThresholdResponse",
      "code": "\n\nmessage CreateNodeThresholdResponse {\n\tint64 nodeThresholdId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledNodeThresholdsResponse",
      "code": "\n\nmessage FindAllEnabledNodeThresholdsResponse {\n\trepeated NodeThreshold nodeThresholds = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNodeThresholdRequest",
      "code": "\nmessage UpdateNodeThresholdRequest {\n\tint64 nodeThresholdId = 1;\n\tstring item = 2;\n\tstring param = 3;\n\tstring operator = 4;\n\tbytes valueJSON = 5;\n\tstring message = 6;\n\tint32 duration = 7;\n\tstring durationUnit = 8;\n\tstring sumMethod = 9;\n\tbool isOn = 10;\n\tint32 notifyDuration = 11;\n}",
      "doc": "修改阈值"
    },
    {
      "name": "DeleteNodeThresholdRequest",
      "code": "\nmessage DeleteNodeThresholdRequest {\n\tint64 nodeThresholdId = 1;\n}",
      "doc": "删除阈值"
    },
    {
      "name": "FindAllEnabledNodeThresholdsRequest",
      "code": "\nmessage FindAllEnabledNodeThresholdsRequest {\n\tstring role = 1;\n\tint64 nodeClusterId = 2;\n\tint64 nodeId = 3;\n}",
      "doc": "查询阈值"
    },
    {
      "name": "ListNodeValuesResponse",
      "code": "\n\nmessage ListNodeValuesResponse {\n\trepeated NodeValue nodeValues = 1;\n}",
      "doc": ""
    },
    {
      "name": "SumAllNodeValueStatsRequest",
      "code": "\nmessage SumAllNodeValueStatsRequest {\n\n}",
      "doc": "读取所有节点的最新数据"
    },
    {
      "name": "SumAllNodeValueStatsResponse",
      "code": "\n\nmessage SumAllNodeValueStatsResponse {\n\tint64 totalTrafficBytesPerSecond = 1;\n\tfloat avgCPUUsage = 2;\n\tfloat maxCPUUsage = 3;\n\tint32 totalCPUCores = 4;\n\tfloat avgMemoryUsage = 5;\n\tfloat maxMemoryUsage = 6;\n\tint64 totalMemoryBytes = 7;\n\tfloat avgLoad1min = 8;\n\tfloat maxLoad1min = 9;\n\tfloat avgLoad5min = 10;\n}",
      "doc": ""
    },
    {
      "name": "CreateNodeValueRequest",
      "code": "\nmessage CreateNodeValueRequest {\n\tstring item = 1;\n\tbytes valueJSON = 2;\n\tint64 createdAt = 3;\n}",
      "doc": "记录数据"
    },
    {
      "name": "ListNodeValuesRequest",
      "code": "\nmessage ListNodeValuesRequest {\n\tstring role = 1;\n\tint64 nodeId = 2;\n\tstring item = 3;\n\n\tstring range = 10;\n}",
      "doc": "读取数据"
    },
    {
      "name": "ComposeNSBoardRequest",
      "code": "\nmessage ComposeNSBoardRequest {\n\n}",
      "doc": "组合看板数据"
    },
    {
      "name": "ComposeNSBoardResponse",
      "code": "\n\nmessage ComposeNSBoardResponse {\n\tint64 countNSDomains = 1;\n\tint64 countNSRecords = 2;\n\tint64 countNSClusters = 3;\n\tint64 countNSNodes = 4;\n\tint64 countOfflineNSNodes = 5;\n\n\trepeated DailyTrafficStat dailyTrafficStats = 30;\n\trepeated HourlyTrafficStat hourlyTrafficStats = 31;\n\trepeated NodeStat topNSNodeStats = 32;\n\trepeated DomainStat topNSDomainStats = 33;\n\trepeated NodeValue cpuNodeValues = 34;\n\trepeated NodeValue memoryNodeValues = 35;\n\trepeated NodeValue loadNodeValues = 36;\n\n\n\tmessage DailyTrafficStat {\n\t\tstring day = 1;\n\t\tint64 bytes = 2;\n\t\tint64 countRequests = 3;\n\t}\n\n\n\tmessage HourlyTrafficStat {\n\t\tstring hour = 1;\n\t\tint64 bytes = 2;\n\t\tint64 countRequests = 3;\n\t}\n\n\n\tmessage NodeStat {\n\t\tint64 nsClusterId = 1;\n\t\tint64 nsNodeId = 2;\n\t\tstring nsNodeName = 3;\n\t\tint64 countRequests = 4;\n\t\tint64 bytes = 5;\n\t}\n\n\n\tmessage DomainStat {\n\t\tint64 nsDomainId = 1;\n\t\tstring nsDomainName = 2;\n\t\tint64 countRequests = 3;\n\t\tint64 bytes = 4;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "ListNSAccessLogsResponse",
      "code": "\n\nmessage ListNSAccessLogsResponse {\n\trepeated NSAccessLog nsAccessLogs = 1;\n\tstring requestId = 2;\n\tbool hasMore = 3;\n}",
      "doc": ""
    },
    {
      "name": "FindNSAccessLogRequest",
      "code": "\nmessage FindNSAccessLogRequest {\n\tstring requestId = 1;\n}",
      "doc": "查找单个日志"
    },
    {
      "name": "FindNSAccessLogResponse",
      "code": "\n\nmessage FindNSAccessLogResponse {\n\tNSAccessLog nsAccessLog = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNSAccessLogsRequest",
      "code": "\nmessage CreateNSAccessLogsRequest {\n\trepeated NSAccessLog nsAccessLogs = 1;\n}",
      "doc": "创建访问日志"
    },
    {
      "name": "CreateNSAccessLogsResponse",
      "code": "\n\nmessage CreateNSAccessLogsResponse {\n\n}",
      "doc": ""
    },
    {
      "name": "ListNSAccessLogsRequest",
      "code": "\nmessage ListNSAccessLogsRequest {\n\tstring requestId = 1; // 上一页请求ID，可选\n\tint64 nsNodeId = 2; // 节点ID\n\tint64 nsDomainId = 3; // 域名ID\n\tint64 nsRecordId = 4; // 记录ID\n\tint64 size = 5; // 单页条数\n\tstring day = 6; // 日期，格式YYYYMMDD\n\tbool reverse = 7; // 是否反向查找，可选\n\tstring keyword = 8;\n}",
      "doc": "列出往前的单页访问日志"
    },
    {
      "name": "ListEnabledNSClustersResponse",
      "code": "\n\nmessage ListEnabledNSClustersResponse {\n\trepeated NSCluster nsClusters = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNSClusterResponse",
      "code": "\n\nmessage CreateNSClusterResponse {\n\tint64 nsClusterId = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteNSCluster",
      "code": "\nmessage DeleteNSCluster {\n\tint64 nsClusterId = 1;\n}",
      "doc": "删除集群"
    },
    {
      "name": "FindEnabledNSClusterRequest",
      "code": "\nmessage FindEnabledNSClusterRequest {\n\tint64 nsClusterId = 1;\n}",
      "doc": "查找单个可用集群信息"
    },
    {
      "name": "FindNSClusterRecursionConfigRequest",
      "code": "\nmessage FindNSClusterRecursionConfigRequest {\n\tint64 nsClusterId = 1;\n}",
      "doc": "读取递归DNS配置"
    },
    {
      "name": "FindNSClusterAccessLogResponse",
      "code": "\n\nmessage FindNSClusterAccessLogResponse {\n\tbytes AccessLogJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNSClusterAccessLogRequest",
      "code": "\nmessage UpdateNSClusterAccessLogRequest {\n\tint64 nsClusterId = 1;\n\tbytes accessLogJSON = 2;\n}",
      "doc": "修改集群访问日志配置"
    },
    {
      "name": "FindEnabledNSClusterResponse",
      "code": "\n\nmessage FindEnabledNSClusterResponse {\n\tNSCluster nsCluster = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledNSClustersRequest",
      "code": "\nmessage FindAllEnabledNSClustersRequest {\n\n}",
      "doc": "查找所有可用集群"
    },
    {
      "name": "FindAllEnabledNSClustersResponse",
      "code": "\n\nmessage FindAllEnabledNSClustersResponse {\n\trepeated NSCluster nsClusters = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindNSClusterRecursionConfigResponse",
      "code": "\n\nmessage FindNSClusterRecursionConfigResponse {\n\tbytes recursionJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNSClusterRequest",
      "code": "\nmessage CreateNSClusterRequest {\n\tstring name = 1;\n\tbytes accessLogJSON = 2;\n}",
      "doc": "创建集群"
    },
    {
      "name": "FindNSClusterAccessLogRequest",
      "code": "\nmessage FindNSClusterAccessLogRequest {\n\tint64 nsClusterId = 1;\n}",
      "doc": "查找集群访问日志配置"
    },
    {
      "name": "UpdateNSClusterRecursionConfigRequest",
      "code": "\nmessage UpdateNSClusterRecursionConfigRequest {\n\tint64 nsClusterId = 1;\n\tbytes recursionJSON = 2;\n}",
      "doc": "设置递归DNS配置"
    },
    {
      "name": "UpdateNSClusterRequest",
      "code": "\nmessage UpdateNSClusterRequest {\n\tint64 nsClusterId = 1;\n\tstring name = 2;\n\tbool isOn = 3;\n}",
      "doc": "修改集群"
    },
    {
      "name": "ListEnabledNSClustersRequest",
      "code": "\nmessage ListEnabledNSClustersRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出单页可用集群"
    },
    {
      "name": "UpdateNSDomainRequest",
      "code": "\nmessage UpdateNSDomainRequest {\n\tint64 nsDomainId = 1;\n\tint64 nsClusterId = 2;\n\tint64 userId = 3;\n\tbool isOn = 4;\n}",
      "doc": "修改域名\n注意：名称不能修改"
    },
    {
      "name": "FindEnabledNSDomainRequest",
      "code": "\nmessage FindEnabledNSDomainRequest {\n\tint64 nsDomainId = 1;\n}",
      "doc": "查找单个域名"
    },
    {
      "name": "FindEnabledNSDomainResponse",
      "code": "\n\nmessage FindEnabledNSDomainResponse {\n\tNSDomain nsDomain = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledNSDomainsRequest",
      "code": "\nmessage CountAllEnabledNSDomainsRequest {\n\tint64 userId = 1;\n\tint64 nsClusterId = 2;\n\tstring keyword = 3;\n}",
      "doc": "计算域名数量"
    },
    {
      "name": "ListEnabledNSDomainsResponse",
      "code": "\n\nmessage ListEnabledNSDomainsResponse {\n\trepeated NSDomain nsDomains = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledNSDomainTSIGResponse",
      "code": "\n\nmessage FindEnabledNSDomainTSIGResponse {\n\tbytes tsigJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNSDomainRequest",
      "code": "\nmessage CreateNSDomainRequest {\n\tint64 nsClusterId = 1;\n\tint64 userId = 2;\n\tstring name = 3;\n}",
      "doc": "创建域名"
    },
    {
      "name": "DeleteNSDomainRequest",
      "code": "\nmessage DeleteNSDomainRequest {\n\tint64 nsDomainId = 1;\n}",
      "doc": "删除域名"
    },
    {
      "name": "ListNSDomainsAfterVersionRequest",
      "code": "\nmessage ListNSDomainsAfterVersionRequest {\n\tint64 version = 1;\n\tint64 size = 2;\n}",
      "doc": "根据版本列出一组域名"
    },
    {
      "name": "ListNSDomainsAfterVersionResponse",
      "code": "\n\nmessage ListNSDomainsAfterVersionResponse {\n\trepeated NSDomain nsDomains = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNSDomainResponse",
      "code": "\n\nmessage CreateNSDomainResponse {\n\tint64 nsDomainId = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListEnabledNSDomainsRequest",
      "code": "\nmessage ListEnabledNSDomainsRequest {\n\tint64 userId = 1;\n\tint64 nsClusterId = 2;\n\tstring keyword = 3;\n\tint64 offset = 4;\n\tint64 size = 5;\n}",
      "doc": "列出单页域名"
    },
    {
      "name": "FindEnabledNSDomainTSIGRequest",
      "code": "\nmessage FindEnabledNSDomainTSIGRequest {\n\tint64 nsDomainId = 1;\n}",
      "doc": "查找TSIG配置"
    },
    {
      "name": "UpdateNSDomainTSIGRequest",
      "code": "\nmessage UpdateNSDomainTSIGRequest {\n\tint64 nsDomainId = 1;\n\tbytes tsigJSON = 2;\n}",
      "doc": "修改TSIG配置"
    },
    {
      "name": "ListNSKeysAfterVersionRequest",
      "code": "\nmessage ListNSKeysAfterVersionRequest {\n\tint64 version = 1;\n\tint64 size = 2;\n}",
      "doc": "根据版本列出一组密钥"
    },
    {
      "name": "ListNSKeysAfterVersionResponse",
      "code": "\n\nmessage ListNSKeysAfterVersionResponse {\n\trepeated NSKey nsKeys = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNSKeyRequest",
      "code": "\nmessage CreateNSKeyRequest {\n\tint64 nsDomainId = 1;\n\tint64 nsZoneId = 2;\n\tstring name = 3;\n\tstring algo = 4;\n\tstring secret = 5;\n\tstring secretType = 6;\n}",
      "doc": "创建密钥"
    },
    {
      "name": "UpdateNSKeyRequest",
      "code": "\nmessage UpdateNSKeyRequest {\n\tint64 nsKeyId = 1;\n\tstring name = 2;\n\tstring algo = 3;\n\tstring secret = 4;\n\tstring secretType = 5;\n\tbool isOn = 6;\n}",
      "doc": "修改密钥"
    },
    {
      "name": "DeleteNSKeyRequest",
      "code": "\nmessage DeleteNSKeyRequest {\n\tint64 nsKeyId = 1;\n}",
      "doc": "删除密钥"
    },
    {
      "name": "ListEnabledNSKeysResponse",
      "code": "\n\nmessage ListEnabledNSKeysResponse {\n\trepeated NSKey nsKeys = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListEnabledNSKeysRequest",
      "code": "\nmessage ListEnabledNSKeysRequest {\n\tint64 nsDomainId = 1;\n\tint64 nsZoneId = 2;\n\tint64 offset = 3;\n\tint64 size = 4;\n}",
      "doc": "列出单页密钥"
    },
    {
      "name": "CreateNSKeyResponse",
      "code": "\n\nmessage CreateNSKeyResponse {\n\tint64 nsKeyId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledNSKeyRequest",
      "code": "\nmessage FindEnabledNSKeyRequest {\n\tint64 nsKeyId = 1;\n}",
      "doc": "查找单个密钥"
    },
    {
      "name": "FindEnabledNSKeyResponse",
      "code": "\n\nmessage FindEnabledNSKeyResponse {\n\tNSKey nsKey = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledNSKeysRequest",
      "code": "\nmessage CountAllEnabledNSKeysRequest {\n\tint64 nsDomainId = 1;\n\tint64 nsZoneId = 2;\n}",
      "doc": "计算密钥数量"
    },
    {
      "name": "DeleteNSNodeRequest",
      "code": "\nmessage DeleteNSNodeRequest {\n\tint64 nsNodeId = 1;\n}",
      "doc": "删除节点"
    },
    {
      "name": "UpdateNSNodeRequest",
      "code": "\nmessage UpdateNSNodeRequest {\n\tint64 nsNodeId = 1;\n\tstring name = 2;\n\tint64 nsClusterId = 3;\n\tNodeLogin nodeLogin = 4;\n\tbool isOn = 6;\n}",
      "doc": "修改节点"
    },
    {
      "name": "UpdateNSNodeIsInstalledRequest",
      "code": "\nmessage UpdateNSNodeIsInstalledRequest {\n\tint64 nsNodeId = 1;\n\tbool isInstalled = 2;\n}",
      "doc": "修改节点安装状态"
    },
    {
      "name": "FindCurrentNSNodeConfigRequest",
      "code": "\nmessage FindCurrentNSNodeConfigRequest {\n\n}",
      "doc": "获取当前节点信息"
    },
    {
      "name": "DownloadNSNodeInstallationFileResponse",
      "code": "\n\nmessage DownloadNSNodeInstallationFileResponse {\n\tbytes chunkData = 1;\n\tstring sum = 2; // 文件的md5sum\n\tint64 offset = 3;\n\tstring version = 4;\n\tstring filename = 5;\n}",
      "doc": ""
    },
    {
      "name": "StopNSNodeRequest",
      "code": "\nmessage StopNSNodeRequest {\n\tint64 nsNodeId = 1;\n}",
      "doc": "停止节点"
    },
    {
      "name": "StopNSNodeResponse",
      "code": "\n\nmessage StopNSNodeResponse {\n\tbool isOk = 1;\n\tstring error = 2;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledNSNodesMatchRequest",
      "code": "\nmessage CountAllEnabledNSNodesMatchRequest {\n\tint64 nsClusterId = 1;\n\tint32 installState = 2;\n\tint32 activeState = 3;\n\tstring keyword = 4;\n\t//int64 nodeGroupId = 5;\n\t//int64 nodeRegionId = 6;\n}",
      "doc": "计算匹配的节点数量"
    },
    {
      "name": "InstallNSNodeRequest",
      "code": "\nmessage InstallNSNodeRequest {\n\tint64 nsNodeId = 1;\n}",
      "doc": "安装节点"
    },
    {
      "name": "UpdateNSNodeStatusRequest",
      "code": "\nmessage UpdateNSNodeStatusRequest {\n\tint64 nodeId = 1;\n\tbytes statusJSON = 2;\n}",
      "doc": "更新节点状态"
    },
    {
      "name": "CountAllUpgradeNSNodesWithNSClusterIdRequest",
      "code": "\nmessage CountAllUpgradeNSNodesWithNSClusterIdRequest {\n\tint64 nsClusterId = 1;\n}",
      "doc": "计算需要升级的节点数量"
    },
    {
      "name": "CheckNSNodeLatestVersionResponse",
      "code": "\n\nmessage CheckNSNodeLatestVersionResponse {\n\tbool hasNewVersion = 1;\n\tstring newVersion = 2;\n}",
      "doc": ""
    },
    {
      "name": "DownloadNSNodeInstallationFileRequest",
      "code": "\nmessage DownloadNSNodeInstallationFileRequest {\n\tstring os = 1;\n\tstring arch = 2;\n\tint64 chunkOffset = 3;\n}",
      "doc": "下载最新DNS节点安装文件"
    },
    {
      "name": "StartNSNodeResponse",
      "code": "\n\nmessage StartNSNodeResponse {\n\tbool isOk = 1;\n\tstring error = 2;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledNSNodesRequest",
      "code": "\nmessage CountAllEnabledNSNodesRequest {\n\n}",
      "doc": "所有可用的节点数量"
    },
    {
      "name": "InstallNSNodeResponse",
      "code": "\n\nmessage InstallNSNodeResponse {\n\n}",
      "doc": ""
    },
    {
      "name": "UpdateNSNodeConnectedAPINodesRequest",
      "code": "\nmessage UpdateNSNodeConnectedAPINodesRequest {\n\trepeated int64 apiNodeIds = 1;\n}",
      "doc": "更改节点连接的API节点信息"
    },
    {
      "name": "CreateNSNodeResponse",
      "code": "\n\nmessage CreateNSNodeResponse {\n\tint64 nsNodeId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledNSNodesWithNSClusterIdResponse",
      "code": "\n\nmessage FindAllEnabledNSNodesWithNSClusterIdResponse {\n\trepeated NSNode nsNodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListEnabledNSNodesMatchRequest",
      "code": "\nmessage ListEnabledNSNodesMatchRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n\tint64 nsClusterId = 3;\n\tint32 installState = 4;\n\tint32 activeState = 5;\n\tstring keyword = 6;\n\t//int64 nodeGroupId = 7;\n\t//int64 nodeRegionId = 8;\n}",
      "doc": "列出单页节点"
    },
    {
      "name": "FindEnabledNSNodeResponse",
      "code": "\n\nmessage FindEnabledNSNodeResponse {\n\tNSNode nsNode = 1;\n}",
      "doc": ""
    },
    {
      "name": "CheckNSNodeLatestVersionRequest",
      "code": "\nmessage CheckNSNodeLatestVersionRequest {\n\tstring os = 1;\n\tstring arch = 2;\n\tstring currentVersion = 3;\n}",
      "doc": "检查新版本"
    },
    {
      "name": "UpdateNSNodeLoginRequest",
      "code": "\nmessage UpdateNSNodeLoginRequest {\n\tint64 nsNodeId = 1;\n\tNodeLogin nodeLogin = 2;\n}",
      "doc": "修改节点登录信息"
    },
    {
      "name": "FindAllEnabledNSNodesWithNSClusterIdRequest",
      "code": "\nmessage FindAllEnabledNSNodesWithNSClusterIdRequest {\n\tint64 nsClusterId = 1;\n}",
      "doc": "根据集群查找所有节点"
    },
    {
      "name": "StartNSNodeRequest",
      "code": "\nmessage StartNSNodeRequest {\n\tint64 nsNodeId = 1;\n}",
      "doc": "启动节点"
    },
    {
      "name": "CreateNSNodeRequest",
      "code": "\nmessage CreateNSNodeRequest {\n\tstring name = 1;\n\tint64 nodeClusterId = 2;\n\tNodeLogin nodeLogin = 3;\n}",
      "doc": "创建节点"
    },
    {
      "name": "FindEnabledNSNodeRequest",
      "code": "\nmessage FindEnabledNSNodeRequest {\n\tint64 nsNodeId = 1;\n}",
      "doc": "获取单个节点信息"
    },
    {
      "name": "FindNSNodeInstallStatusRequest",
      "code": "\nmessage FindNSNodeInstallStatusRequest {\n\tint64 nsNodeId = 1;\n}",
      "doc": "读取节点安装状态"
    },
    {
      "name": "ListEnabledNSNodesMatchResponse",
      "code": "\n\nmessage ListEnabledNSNodesMatchResponse {\n\trepeated NSNode nsNodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindCurrentNSNodeConfigResponse",
      "code": "\n\nmessage FindCurrentNSNodeConfigResponse {\n\tbytes nsNodeJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "NSNodeStreamMessage",
      "code": "\nmessage NSNodeStreamMessage {\n\tint64 nsNodeId = 1;\n\tint64 requestId = 2;\n\tint32 timeoutSeconds = 3;\n\tstring code = 4;\n\tbytes dataJSON = 5;\n\tbool isOk = 6;\n\tstring message = 7;\n}",
      "doc": "节点stream"
    },
    {
      "name": "FindNSNodeInstallStatusResponse",
      "code": "\n\nmessage FindNSNodeInstallStatusResponse {\n\tNodeInstallStatus installStatus = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNSQuestionOptionRequest",
      "code": "\nmessage CreateNSQuestionOptionRequest {\n\tstring name = 1;\n\tbytes valuesJSON = 2;\n}",
      "doc": "创建选项"
    },
    {
      "name": "CreateNSQuestionOptionResponse",
      "code": "\n\nmessage CreateNSQuestionOptionResponse {\n\tint64 nsQuestionOptionId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindNSQuestionOptionRequest",
      "code": "\nmessage FindNSQuestionOptionRequest {\n\tint64 nsQuestionOptionId = 1;\n}",
      "doc": "读取选项"
    },
    {
      "name": "FindNSQuestionOptionResponse",
      "code": "\n\nmessage FindNSQuestionOptionResponse {\n\tNSQuestionOption nsQuestionOption = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteNSQuestionOptionRequest",
      "code": "\nmessage DeleteNSQuestionOptionRequest {\n\tint64 nsQuestionOptionId = 1;\n}",
      "doc": "删除选项"
    },
    {
      "name": "ListEnabledNSRecordsRequest",
      "code": "\nmessage ListEnabledNSRecordsRequest {\n\tint64 nsDomainId = 1;\n\tstring type = 2;\n\tint64 nsRouteId = 3 [deprecated = true]; // 使用nsRouteCode代替\n\tstring nsRouteCode = 7;\n\tstring keyword = 4;\n\tint64 offset = 5;\n\tint64 size = 6;\n}",
      "doc": "读取单页记录"
    },
    {
      "name": "ListEnabledNSRecordsResponse",
      "code": "\n\nmessage ListEnabledNSRecordsResponse {\n\trepeated NSRecord nsRecords = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledNSRecordRequest",
      "code": "\nmessage FindEnabledNSRecordRequest {\n\tint64 nsRecordId = 1;\n}",
      "doc": "查询单个记录信息"
    },
    {
      "name": "ListNSRecordsAfterVersionRequest",
      "code": "\nmessage ListNSRecordsAfterVersionRequest {\n\tint64 version = 1;\n\tint64 size = 2;\n}",
      "doc": "根据版本列出一组记录"
    },
    {
      "name": "ListNSRecordsAfterVersionResponse",
      "code": "\n\nmessage ListNSRecordsAfterVersionResponse {\n\trepeated NSRecord nsRecords = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNSRecordRequest",
      "code": "\nmessage UpdateNSRecordRequest {\n\tint64 nsRecordId = 1;\n\tstring description = 2;\n\tstring name = 3;\n\tstring type = 4;\n\tstring value = 5;\n\tint32 ttl = 6;\n\trepeated int64 nsRouteIds = 7 [deprecated = true];\n\tbool isOn = 8;\n\trepeated string nsRouteCodes = 9; // 路线代号\n}",
      "doc": "修改记录"
    },
    {
      "name": "DeleteNSRecordRequest",
      "code": "\nmessage DeleteNSRecordRequest {\n\tint64 nsRecordId = 1;\n}",
      "doc": "删除记录"
    },
    {
      "name": "CountAllEnabledNSRecordsRequest",
      "code": "\nmessage CountAllEnabledNSRecordsRequest {\n\tint64 nsDomainId = 1;\n\tstring type = 2;\n\tint64 nsRouteId = 3 [deprecated = true]; // 使用nsRouteCode代替\n\tstring nsRouteCode = 5;\n\tstring keyword = 4;\n}",
      "doc": "计算记录数量"
    },
    {
      "name": "FindEnabledNSRecordResponse",
      "code": "\n\nmessage FindEnabledNSRecordResponse {\n\tNSRecord nsRecord = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNSRecordRequest",
      "code": "\nmessage CreateNSRecordRequest {\n\tint64 nsDomainId = 1;\n\tstring description = 2;\n\tstring name = 3;\n\tstring type = 4;\n\tstring value = 5;\n\tint32 ttl = 6;\n\trepeated int64 nsRouteIds = 7 [deprecated = true];\n\trepeated string nsRouteCodes = 8; // 路线代号\n}",
      "doc": "创建记录"
    },
    {
      "name": "CreateNSRecordResponse",
      "code": "\n\nmessage CreateNSRecordResponse {\n\tint64 nsRecordId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UploadNSRecordHourlyStatsRequest",
      "code": "\nmessage UploadNSRecordHourlyStatsRequest {\n\trepeated NSRecordHourlyStat stats = 1;\n}",
      "doc": "上传统计"
    },
    {
      "name": "UpdateNSRouteRequest",
      "code": "\nmessage UpdateNSRouteRequest {\n\tint64 nsRouteId = 1;\n\tstring name = 2;\n\tbytes rangesJSON = 3;\n}",
      "doc": "修改线路"
    },
    {
      "name": "FindEnabledNSRouteRequest",
      "code": "\nmessage FindEnabledNSRouteRequest {\n\tint64 nsRouteId = 1;\n}",
      "doc": "获取单个路线信息"
    },
    {
      "name": "FindEnabledNSRouteResponse",
      "code": "\n\nmessage FindEnabledNSRouteResponse {\n\tNSRoute nsRoute = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledNSRoutesResponse",
      "code": "\n\nmessage FindAllEnabledNSRoutesResponse {\n\trepeated NSRoute nsRoutes = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateNSRouteOrdersRequest",
      "code": "\nmessage UpdateNSRouteOrdersRequest {\n\trepeated int64 nsRouteIds = 1;\n}",
      "doc": "设置线路排序"
    },
    {
      "name": "CreateNSRouteRequest",
      "code": "\nmessage CreateNSRouteRequest {\n\tint64 nsClusterId = 1;\n\tint64 nsDomainId = 2;\n\tint64 userId = 3;\n\tstring name = 4;\n\tbytes rangesJSON = 5;\n}",
      "doc": "创建线路"
    },
    {
      "name": "DeleteNSRouteRequest",
      "code": "\nmessage DeleteNSRouteRequest {\n\tint64 nsRouteId = 1;\n}",
      "doc": "删除线路"
    },
    {
      "name": "FindAllEnabledNSRoutesRequest",
      "code": "\nmessage FindAllEnabledNSRoutesRequest {\n\tint64 nsClusterId = 1;\n\tint64 nsDomainId = 2;\n\tint64 userId = 3;\n}",
      "doc": "读取所有线路"
    },
    {
      "name": "ListNSRoutesAfterVersionRequest",
      "code": "\nmessage ListNSRoutesAfterVersionRequest {\n\tint64 version = 1;\n\tint64 size = 2;\n}",
      "doc": "根据版本列出一组线路"
    },
    {
      "name": "ListNSRoutesAfterVersionResponse",
      "code": "\n\nmessage ListNSRoutesAfterVersionResponse {\n\trepeated NSRoute nsRoutes = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateNSRouteResponse",
      "code": "\n\nmessage CreateNSRouteResponse {\n\tint64 nsRouteId = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateOriginResponse",
      "code": "\n\nmessage CreateOriginResponse {\n\tint64 originId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateOriginRequest",
      "code": "\nmessage UpdateOriginRequest {\n\tint64 originId = 1;\n\tstring name = 2;\n\tNetworkAddress addr = 3;\n\tstring description = 4;\n\tint32 weight = 5;\n\tbool isOn = 6;\n\tbytes connTimeoutJSON = 7;\n\tbytes readTimeoutJSON = 8;\n\tbytes idleTimeoutJSON = 9;\n\tint32 maxConns = 10;\n\tint32 maxIdleConns = 11;\n\trepeated string domains = 12;\n\tbytes certRefJSON = 13;\n\tstring host = 14;\n}",
      "doc": "修改源站"
    },
    {
      "name": "FindEnabledOriginRequest",
      "code": "\nmessage FindEnabledOriginRequest {\n\tint64 originId = 1;\n}",
      "doc": "查找单个源站信息"
    },
    {
      "name": "FindEnabledOriginResponse",
      "code": "\n\nmessage FindEnabledOriginResponse {\n\tOrigin Origin = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledOriginConfigRequest",
      "code": "\nmessage FindEnabledOriginConfigRequest {\n\tint64 originId = 1;\n}",
      "doc": "查找源站配置"
    },
    {
      "name": "FindEnabledOriginConfigResponse",
      "code": "\n\nmessage FindEnabledOriginConfigResponse {\n\tbytes originJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateOriginRequest",
      "code": "\nmessage CreateOriginRequest {\n\tstring name = 1;\n\tNetworkAddress addr = 2;\n\tstring description = 3;\n\tint32 weight = 4;\n\tbool isOn = 5;\n\tbytes connTimeoutJSON = 6;\n\tbytes readTimeoutJSON = 7;\n\tbytes idleTimeoutJSON = 8;\n\tint32 maxConns = 9;\n\tint32 maxIdleConns = 10;\n\trepeated string domains = 11;\n\tbytes certRefJSON = 12;\n\tstring host = 13;\n}",
      "doc": "创建源站"
    },
    {
      "name": "SortPlansRequest",
      "code": "\nmessage SortPlansRequest {\n\trepeated int64 planIds = 1;\n}",
      "doc": "对套餐进行排序"
    },
    {
      "name": "UpdatePlanRequest",
      "code": "\nmessage UpdatePlanRequest {\n\tint64 planId = 1;\n\tstring name = 2;\n\tbool isOn = 3;\n\tint64 clusterId = 4;\n\tbytes trafficLimitJSON = 5;\n\tbytes featuresJSON = 6;\n\tstring priceType = 7;\n\tbytes trafficPriceJSON = 8;\n\tbytes bandwidthPriceJSON = 12;\n\tfloat monthlyPrice = 9;\n\tfloat seasonallyPrice = 10;\n\tfloat yearlyPrice = 11;\n}",
      "doc": "修改套餐"
    },
    {
      "name": "DeletePlanRequest",
      "code": "\nmessage DeletePlanRequest {\n\tint64 planId = 1;\n}",
      "doc": "删除套餐"
    },
    {
      "name": "FindEnabledPlanRequest",
      "code": "\nmessage FindEnabledPlanRequest {\n\tint64 planId = 1;\n}",
      "doc": "查找单个套餐"
    },
    {
      "name": "ListEnabledPlansRequest",
      "code": "\nmessage ListEnabledPlansRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出单页套餐"
    },
    {
      "name": "ListEnabledPlansResponse",
      "code": "\n\nmessage ListEnabledPlansResponse {\n\trepeated Plan plans = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreatePlanRequest",
      "code": "\nmessage CreatePlanRequest {\n\tstring name = 1;\n\tint64 clusterId = 2;\n\tbytes trafficLimitJSON = 3;\n\tbytes featuresJSON = 4;\n\tstring priceType = 5;\n\tbytes trafficPriceJSON = 6;\n\tbytes bandwidthPriceJSON = 10;\n\tfloat monthlyPrice = 7;\n\tfloat seasonallyPrice = 8;\n\tfloat yearlyPrice = 9;\n}",
      "doc": "创建套餐"
    },
    {
      "name": "CreatePlanResponse",
      "code": "\n\nmessage CreatePlanResponse {\n\tint64 planId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledPlanResponse",
      "code": "\n\nmessage FindEnabledPlanResponse {\n\tPlan plan = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledPlansRequest",
      "code": "\nmessage CountAllEnabledPlansRequest {\n\n}",
      "doc": "计算套餐数量"
    },
    {
      "name": "FindAllEnabledRegionCitiesResponse",
      "code": "\n\nmessage FindAllEnabledRegionCitiesResponse {\n\trepeated RegionCity regionCities = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledRegionCityRequest",
      "code": "\nmessage FindEnabledRegionCityRequest {\n\tint64 regionCityId = 1;\n}",
      "doc": "查找单个城市信息"
    },
    {
      "name": "FindEnabledRegionCityResponse",
      "code": "\n\nmessage FindEnabledRegionCityResponse {\n\tRegionCity regionCity = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledRegionCitiesRequest",
      "code": "\nmessage FindAllEnabledRegionCitiesRequest {\n\tbool includeRegionProvince = 1;\n}",
      "doc": "查找所有城市"
    },
    {
      "name": "FindEnabledRegionCountryRequest",
      "code": "\nmessage FindEnabledRegionCountryRequest {\n\tint64 regionCountryId = 1;\n}",
      "doc": "查找单个国家信息"
    },
    {
      "name": "FindEnabledRegionCountryResponse",
      "code": "\n\nmessage FindEnabledRegionCountryResponse {\n\tRegionCountry regionCountry = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledRegionCountriesRequest",
      "code": "\nmessage FindAllEnabledRegionCountriesRequest {\n\n}",
      "doc": "查找所有的国家列表"
    },
    {
      "name": "FindAllEnabledRegionCountriesResponse",
      "code": "\n\nmessage FindAllEnabledRegionCountriesResponse {\n\trepeated RegionCountry regionCountries = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledRegionProviderRequest",
      "code": "\nmessage FindEnabledRegionProviderRequest {\n\tint64 regionProviderId = 1;\n}",
      "doc": "查找单个ISP信息"
    },
    {
      "name": "FindEnabledRegionProviderResponse",
      "code": "\n\nmessage FindEnabledRegionProviderResponse {\n\tRegionProvider regionProvider = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledRegionProvidersRequest",
      "code": "\nmessage FindAllEnabledRegionProvidersRequest {\n\n}",
      "doc": "查找所有ISP"
    },
    {
      "name": "FindAllEnabledRegionProvidersResponse",
      "code": "\n\nmessage FindAllEnabledRegionProvidersResponse {\n\trepeated RegionProvider regionProviders = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledRegionProvincesWithCountryIdRequest",
      "code": "\nmessage FindAllEnabledRegionProvincesWithCountryIdRequest {\n\tint64 regionCountryId = 1;\n}",
      "doc": "查找所有省份"
    },
    {
      "name": "FindAllEnabledRegionProvincesWithCountryIdResponse",
      "code": "\n\nmessage FindAllEnabledRegionProvincesWithCountryIdResponse {\n\trepeated RegionProvince regionProvinces = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledRegionProvinceRequest",
      "code": "\nmessage FindEnabledRegionProvinceRequest {\n\tint64 regionProvinceId = 1;\n}",
      "doc": "查找单个省份信息"
    },
    {
      "name": "FindEnabledRegionProvinceResponse",
      "code": "\n\nmessage FindEnabledRegionProvinceResponse {\n\tRegionProvince regionProvince = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteReportNodeRequest",
      "code": "\nmessage DeleteReportNodeRequest {\n\tint64 reportNodeId = 1;\n}",
      "doc": "删除终端"
    },
    {
      "name": "CountAllEnabledReportNodesRequest",
      "code": "\nmessage CountAllEnabledReportNodesRequest {\n\tstring keyword = 1;\n\tint64 reportNodeGroupId = 2;\n}",
      "doc": "计算终端数量"
    },
    {
      "name": "CountAllReportNodeTasksRequest",
      "code": "\nmessage CountAllReportNodeTasksRequest {\n\tstring role = 1;\n\tint64 nodeClusterId = 2;\n\tstring type = 3;\n}",
      "doc": "计算任务数量"
    },
    {
      "name": "ListReportNodeTasksRequest",
      "code": "\nmessage ListReportNodeTasksRequest {\n\tstring role = 1;\n\tint64 nodeClusterId = 2;\n\tstring type = 3;\n\tint64 offset = 4;\n\tint64 size = 5;\n}",
      "doc": "列出单页任务"
    },
    {
      "name": "UpdateReportNodeGlobalSetting",
      "code": "\nmessage UpdateReportNodeGlobalSetting {\n\tbytes settingJSON = 1;\n}",
      "doc": "修改全局设置"
    },
    {
      "name": "ListEnabledReportNodesResponse",
      "code": "\n\nmessage ListEnabledReportNodesResponse {\n\trepeated ReportNode reportNodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindReportNodeTasksResponse",
      "code": "\n\nmessage FindReportNodeTasksResponse {\n\tbytes ipAddrTasksJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindLatestReportNodeVersionRequest",
      "code": "\nmessage FindLatestReportNodeVersionRequest {\n\n}",
      "doc": "取得最新的版本号"
    },
    {
      "name": "FindLatestReportNodeVersionResponse",
      "code": "\n\nmessage FindLatestReportNodeVersionResponse {\n\tstring version = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListReportNodeTasksResponse",
      "code": "\n\nmessage ListReportNodeTasksResponse {\n\trepeated IPAddrReportTask ipAddrReportTasks = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledReportNodeRequest",
      "code": "\nmessage FindEnabledReportNodeRequest{\n\tint64 reportNodeId = 1;\n}",
      "doc": "查找单个终端"
    },
    {
      "name": "FindEnabledReportNodeResponse",
      "code": "\n\nmessage FindEnabledReportNodeResponse {\n\tReportNode reportNode = 1;\n}",
      "doc": ""
    },
    {
      "name": "ReportNodeStreamMessage",
      "code": "\nmessage ReportNodeStreamMessage {\n\tint64 reportNodeId = 1;\n\tint64 requestId = 2;\n\tint32 timeoutSeconds = 3;\n\tstring code = 4;\n\tbytes dataJSON = 5;\n\tbool isOk = 6;\n\tstring message = 7;\n}",
      "doc": "终端stream"
    },
    {
      "name": "FindCurrentReportNodeConfigRequest",
      "code": "\nmessage FindCurrentReportNodeConfigRequest {\n\n}",
      "doc": "获取当前节点信息"
    },
    {
      "name": "ReadReportNodeGlobalSettingResponse",
      "code": "\n\nmessage ReadReportNodeGlobalSettingResponse {\n\tbytes settingJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindCurrentReportNodeConfigResponse",
      "code": "\n\nmessage FindCurrentReportNodeConfigResponse {\n\tbytes reportNodeJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindReportNodeTasksRequest",
      "code": "\nmessage FindReportNodeTasksRequest {\n\n}",
      "doc": "读取任务"
    },
    {
      "name": "CreateReportNodeRequest",
      "code": "\nmessage CreateReportNodeRequest {\n\tstring name = 1;\n\tstring location = 2;\n\tstring isp = 3;\n\trepeated string allowIPs = 4;\n\trepeated int64 reportNodeGroupIds = 5;\n}",
      "doc": "添加终端"
    },
    {
      "name": "CreateReportNodeResponse",
      "code": "\n\nmessage CreateReportNodeResponse {\n\tint64 reportNodeId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateReportNodeRequest",
      "code": "\nmessage UpdateReportNodeRequest{\n\tint64 reportNodeId = 1;\n\tstring name = 2;\n\tstring location = 3;\n\tstring isp = 4;\n\trepeated string allowIPs = 5;\n\tbool isOn = 6;\n\trepeated int64 reportNodeGroupIds = 7;\n}",
      "doc": "修改终端"
    },
    {
      "name": "ListEnabledReportNodesRequest",
      "code": "\nmessage ListEnabledReportNodesRequest {\n\tstring keyword = 1;\n\tint64 reportNodeGroupId = 4;\n\tint64 offset = 2;\n\tint64 size = 3;\n}",
      "doc": "列出单页终端"
    },
    {
      "name": "UpdateReportNodeStatusRequest",
      "code": "\nmessage UpdateReportNodeStatusRequest {\n\tbytes statusJSON = 1;\n}",
      "doc": "更新节点状态"
    },
    {
      "name": "FindAllEnabledReportNodeGroupsResponse",
      "code": "\n\nmessage FindAllEnabledReportNodeGroupsResponse {\n\trepeated ReportNodeGroup reportNodeGroups = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledReportNodeGroupRequest",
      "code": "\nmessage FindEnabledReportNodeGroupRequest {\n\tint64 reportNodeGroupId = 1;\n}",
      "doc": "查找单个分组"
    },
    {
      "name": "CreateReportNodeGroupRequest",
      "code": "\nmessage CreateReportNodeGroupRequest {\n\tstring name = 1;\n}",
      "doc": "创建分组"
    },
    {
      "name": "CreateReportNodeGroupResponse",
      "code": "\n\nmessage CreateReportNodeGroupResponse {\n\tint64 reportNodeGroupId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledReportNodeGroupsRequest",
      "code": "\nmessage FindAllEnabledReportNodeGroupsRequest {\n\n}",
      "doc": "查找所有分组"
    },
    {
      "name": "FindEnabledReportNodeGroupResponse",
      "code": "\n\nmessage FindEnabledReportNodeGroupResponse {\n\tReportNodeGroup reportNodeGroup = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledReportNodeGroupsRequest",
      "code": "\nmessage CountAllEnabledReportNodeGroupsRequest {\n\n}",
      "doc": "计算所有分组数量"
    },
    {
      "name": "UpdateReportNodeGroupRequest",
      "code": "\nmessage UpdateReportNodeGroupRequest {\n\tint64 reportNodeGroupId = 1;\n\tstring name = 2;\n}",
      "doc": "修改分组"
    },
    {
      "name": "DeleteReportNodeGroupRequest",
      "code": "\nmessage DeleteReportNodeGroupRequest {\n\tint64 reportNodeGroupId = 1;\n}",
      "doc": "删除分组"
    },
    {
      "name": "CountAllReportResultsRequest",
      "code": "\nmessage CountAllReportResultsRequest {\n\tint64 reportNodeId = 1;\n\tint32 okState = 2;\n\tstring level = 3;\n}",
      "doc": "计算监控结果数量"
    },
    {
      "name": "ListReportResultsRequest",
      "code": "\nmessage ListReportResultsRequest {\n\tint64 reportNodeId = 1;\n\tint32 okState = 2;\n\tstring level = 3;\n\tint64 offset = 4;\n\tint64 size = 5;\n}",
      "doc": "列出单页监控结果"
    },
    {
      "name": "ListReportResultsResponse",
      "code": "\n\nmessage ListReportResultsResponse {\n\trepeated ReportResult reportResults = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateReportResultsRequest",
      "code": "\nmessage UpdateReportResultsRequest {\n\trepeated ReportResult reportResults = 1;\n}",
      "doc": "上传报告结果"
    },
    {
      "name": "FindAllReportResultsRequest",
      "code": "\nmessage FindAllReportResultsRequest {\n\tstring type = 1;\n\tint64 targetId = 2;\n}",
      "doc": "查询某个对象的监控结果"
    },
    {
      "name": "FindAllReportResultsResponse",
      "code": "\n\nmessage FindAllReportResultsResponse {\n\trepeated ReportResult reportResults = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateReverseProxySchedulingRequest",
      "code": "\nmessage UpdateReverseProxySchedulingRequest {\n\tint64 reverseProxyId = 1;\n\tbytes schedulingJSON = 2;\n}",
      "doc": "修改反向代理调度算法"
    },
    {
      "name": "UpdateReverseProxyPrimaryOriginsRequest",
      "code": "\nmessage UpdateReverseProxyPrimaryOriginsRequest {\n\tint64 reverseProxyId = 1;\n\tbytes originsJSON = 2;\n}",
      "doc": "修改主要源站信息"
    },
    {
      "name": "FindEnabledReverseProxyRequest",
      "code": "\nmessage FindEnabledReverseProxyRequest {\n\tint64 reverseProxyId = 1;\n}",
      "doc": "查找反向代理"
    },
    {
      "name": "FindEnabledReverseProxyResponse",
      "code": "\n\nmessage FindEnabledReverseProxyResponse {\n\tReverseProxy reverseProxy = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledReverseProxyConfigRequest",
      "code": "\nmessage FindEnabledReverseProxyConfigRequest {\n\tint64 reverseProxyId = 1;\n}",
      "doc": "查找反向代理配置"
    },
    {
      "name": "FindEnabledReverseProxyConfigResponse",
      "code": "\n\nmessage FindEnabledReverseProxyConfigResponse {\n\tbytes reverseProxyJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateReverseProxyBackupOriginsRequest",
      "code": "\nmessage UpdateReverseProxyBackupOriginsRequest {\n\tint64 reverseProxyId = 1;\n\tbytes originsJSON = 2;\n}",
      "doc": "修改备用源站信息"
    },
    {
      "name": "UpdateReverseProxyRequest",
      "code": "\nmessage UpdateReverseProxyRequest {\n\tint64 reverseProxyId = 1;\n\tint32 requestHostType = 6;\n\tstring requestHost = 2;\n\tstring requestURI = 3;\n\tstring stripPrefix = 4;\n\tbool autoFlush = 5;\n\trepeated string addHeaders = 7;\n\tbytes connTimeoutJSON = 8;\n\tbytes readTimeoutJSON = 9;\n\tbytes idleTimeoutJSON = 10;\n\tint32 maxConns = 11;\n\tint32 maxIdleConns = 12;\n\tbytes proxyProtocolJSON = 13;\n\tbool followRedirects = 14;\n}",
      "doc": "修改反向代理设置"
    },
    {
      "name": "CreateReverseProxyRequest",
      "code": "\nmessage CreateReverseProxyRequest {\n\tbytes schedulingJSON = 1;\n\tbytes primaryOriginsJSON = 2;\n\tbytes backupOriginsJSON = 3;\n}",
      "doc": "创建反向代理"
    },
    {
      "name": "CreateReverseProxyResponse",
      "code": "\n\nmessage CreateReverseProxyResponse {\n\tint64 reverseProxyId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledScriptResponse",
      "code": "\n\nmessage FindEnabledScriptResponse {\n\tScript script = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateScriptRequest",
      "code": "\nmessage CreateScriptRequest {\n\tstring name = 1;\n\tstring filename = 2;\n\tstring code = 3;\n}",
      "doc": "添加脚本"
    },
    {
      "name": "ListEnabledScriptsRequest",
      "code": "\nmessage ListEnabledScriptsRequest {\n\tint64 userId = 1;\n\tint64 offset = 2;\n\tint64 size = 3;\n}",
      "doc": "列出单页脚本"
    },
    {
      "name": "PublishScriptsRequest",
      "code": "\nmessage PublishScriptsRequest {\n\tint64  userId = 1;\n}",
      "doc": "发布脚本"
    },
    {
      "name": "ListEnabledScriptsResponse",
      "code": "\n\nmessage ListEnabledScriptsResponse {\n\trepeated Script scripts = 1;\n}",
      "doc": ""
    },
    {
      "name": "CheckScriptUpdatesResponse",
      "code": "\n\nmessage CheckScriptUpdatesResponse {\n\tbool hasUpdates = 1;\n\tint64 version = 2;\n}",
      "doc": ""
    },
    {
      "name": "UpdateScriptRequest",
      "code": "\nmessage UpdateScriptRequest {\n\tint64 scriptId = 1;\n\tstring name = 2;\n\tstring filename = 3;\n\tstring code = 4;\n\tbool isOn = 5;\n}",
      "doc": "修改脚本"
    },
    {
      "name": "CountAllEnabledScriptsRequest",
      "code": "\nmessage CountAllEnabledScriptsRequest {\n\tint64 userId = 1;\n}",
      "doc": "计算脚本数量"
    },
    {
      "name": "FindEnabledScriptRequest",
      "code": "\nmessage FindEnabledScriptRequest {\n\tint64 scriptId = 1;\n}",
      "doc": "查找单个脚本"
    },
    {
      "name": "ComposeScriptConfigsRequest",
      "code": "\nmessage ComposeScriptConfigsRequest {\n\n}",
      "doc": "组合脚本配置"
    },
    {
      "name": "ComposeScriptConfigsResponse",
      "code": "\n\nmessage ComposeScriptConfigsResponse {\n\tbytes scriptConfigsJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateScriptResponse",
      "code": "\n\nmessage CreateScriptResponse {\n\tint64 scriptId = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteScriptRequest",
      "code": "\nmessage DeleteScriptRequest {\n\tint64 scriptId = 1;\n}",
      "doc": "删除脚本"
    },
    {
      "name": "CheckScriptUpdatesRequest",
      "code": "\nmessage CheckScriptUpdatesRequest {\n\tint64  userId = 1;\n}",
      "doc": "检查脚本是否需要有更新"
    },
    {
      "name": "UpdateServerNamesRequest",
      "code": "\nmessage UpdateServerNamesRequest {\n\tint64 serverId = 1;\n\tbytes serverNamesJSON = 2;\n}",
      "doc": "修改服务的域名设置"
    },
    {
      "name": "FindAllEnabledServersWithSSLCertIdResponse",
      "code": "\n\nmessage FindAllEnabledServersWithSSLCertIdResponse {\n\trepeated Server servers = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledServersWithServerGroupIdRequest",
      "code": "\nmessage CountAllEnabledServersWithServerGroupIdRequest {\n\tint64 serverGroupId = 1;\n}",
      "doc": "计算使用某个分组的服务数量"
    },
    {
      "name": "CheckServerNameDuplicationInNodeClusterRequest",
      "code": "\nmessage CheckServerNameDuplicationInNodeClusterRequest {\n\tint64 nodeClusterId = 1;\n\trepeated string serverNames = 2; // 可以同时检查一批域名\n\tint64 excludeServerId = 3; // 要排除的服务ID\n}",
      "doc": "检查域名是否已经存在"
    },
    {
      "name": "FindLatestServersRequest",
      "code": "\nmessage FindLatestServersRequest {\n\tint64 size = 1;\n}",
      "doc": "查找最近访问的服务"
    },
    {
      "name": "FindServerUserPlanRequest",
      "code": "\nmessage FindServerUserPlanRequest {\n\tint64 serverId = 1;\n}",
      "doc": "获取服务套餐信息"
    },
    {
      "name": "UpdateServerNamesAuditingRequest",
      "code": "\nmessage UpdateServerNamesAuditingRequest {\n\tint64 serverId = 1;\n\tServerNameAuditingResult auditingResult = 2;\n}",
      "doc": "审核服务的域名设置"
    },
    {
      "name": "FindEnabledServerTypeRequest",
      "code": "\nmessage FindEnabledServerTypeRequest {\n\tint64 serverId = 1;\n}",
      "doc": "查找服务的服务类型"
    },
    {
      "name": "UpdateServerTCPRequest",
      "code": "\n\nmessage UpdateServerTCPRequest {\n\tint64 serverId = 1;\n\tbytes tcpJSON = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindNearbyServersRequest",
      "code": "\nmessage FindNearbyServersRequest {\n\tint64 serverId = 1;\n}",
      "doc": "查找某个服务附近的服务"
    },
    {
      "name": "FindAllEnabledServersDNSWithNodeClusterIdResponse",
      "code": "\n\nmessage FindAllEnabledServersDNSWithNodeClusterIdResponse {\n\trepeated ServerDNSInfo servers = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledServerNamesWithUserIdResponse",
      "code": "\n\nmessage FindAllEnabledServerNamesWithUserIdResponse {\n\trepeated string serverNames = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateServerHTTPSRequest",
      "code": "\n\nmessage UpdateServerHTTPSRequest {\n\tint64 serverId = 1;\n\tbytes httpsJSON = 2;\n}",
      "doc": ""
    },
    {
      "name": "UpdateServerUnixRequest",
      "code": "\n\nmessage UpdateServerUnixRequest {\n\tint64 serverId = 1;\n\tbytes unixJSON = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindServerNamesResponse",
      "code": "\n\nmessage FindServerNamesResponse {\n\tbytes serverNamesJSON = 1;\n\tbool isAuditing = 2;\n\tint64 auditingAt = 5;\n\tbytes auditingServerNamesJSON = 3;\n\tServerNameAuditingResult auditingResult = 4;\n}",
      "doc": ""
    },
    {
      "name": "FindAndInitServerReverseProxyConfigRequest",
      "code": "\nmessage FindAndInitServerReverseProxyConfigRequest {\n\tint64 serverId = 1;\n}",
      "doc": "查找反向代理设置"
    },
    {
      "name": "FindAndInitServerReverseProxyConfigResponse",
      "code": "\n\nmessage FindAndInitServerReverseProxyConfigResponse {\n\tbytes reverseProxyJSON = 1;\n\tbytes reverseProxyRefJSON = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindAndInitServerWebConfigResponse",
      "code": "\n\nmessage FindAndInitServerWebConfigResponse {\n\tbytes webJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateEnabledUserServerBasicRequest",
      "code": "\nmessage UpdateEnabledUserServerBasicRequest {\n\tint64 serverId = 1;\n\tstring name = 2;\n}",
      "doc": "修改用户服务基本信息"
    },
    {
      "name": "UploadServerHTTPRequestStatRequest",
      "code": "\nmessage UploadServerHTTPRequestStatRequest {\n\tstring month = 1;\n\tstring day = 2;\n\trepeated RegionCity regionCities = 3;\n\trepeated RegionProvider regionProviders = 4;\n\trepeated System systems = 5;\n\trepeated Browser browsers = 6;\n\trepeated HTTPFirewallRuleGroup httpFirewallRuleGroups = 7;\n\n\n\tmessage RegionCity {\n\t\tint64 serverId = 1;\n\t\tstring countryName = 2;\n\t\tstring provinceName = 3;\n\t\tstring cityName = 4;\n\t\tint64 countRequests = 5;\n\t\tint64 bytes = 6;\n\t\tint64 countAttackRequests = 7;\n\t\tint64 attackBytes = 8;\n\t}\n\n\n\tmessage RegionProvider {\n\t\tint64 serverId = 1;\n\t\tstring name = 2;\n\t\tint64 count = 3;\n\t}\n\n\n\tmessage System {\n\t\tint64 serverId = 1;\n\t\tstring name = 2;\n\t\tstring version = 3;\n\t\tint64 count = 4;\n\t}\n\n\n\tmessage Browser {\n\t\tint64 serverId = 1;\n\t\tstring name = 2;\n\t\tstring version = 3;\n\t\tint64 count = 4;\n\t}\n\n\n\tmessage HTTPFirewallRuleGroup {\n\t\tint64 serverId = 1;\n\t\tint64 httpFirewallRuleGroupId = 2;\n\t\tstring action = 3;\n\t\tint64 count = 4;\n\t}\n}",
      "doc": "上传HTTP请求待统计数据"
    },
    {
      "name": "CheckServerNameDuplicationInNodeClusterResponse",
      "code": "\n\nmessage CheckServerNameDuplicationInNodeClusterResponse {\n\trepeated string duplicatedServerNames = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledServerUAMResponse",
      "code": "\n\nmessage FindEnabledServerUAMResponse {\n\tbytes uamJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateServerBasicRequest",
      "code": "\nmessage UpdateServerBasicRequest {\n\tint64 serverId = 1;\n\tstring name = 2;\n\tstring description = 3;\n\tint64 nodeClusterId = 4;\n\tbool keepOldConfigs = 7; // 是否在老节点上保留一段时间配置\n\tbool isOn = 5;\n\trepeated int64 serverGroupIds = 6;\n}",
      "doc": "修改服务基本信息"
    },
    {
      "name": "DeleteServerRequest",
      "code": "\nmessage DeleteServerRequest {\n\tint64 serverId = 1;\n}",
      "doc": "禁用服务"
    },
    {
      "name": "PurgeServerCacheResponse",
      "code": "\n\nmessage PurgeServerCacheResponse {\n\tbool isOk = 1;\n\tstring message = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledServerTrafficLimitRequest",
      "code": "\nmessage FindEnabledServerTrafficLimitRequest {\n\tint64 serverId = 1;\n}",
      "doc": "查找流量限制"
    },
    {
      "name": "UpdateServerUserPlanRequest",
      "code": "\nmessage UpdateServerUserPlanRequest {\n\tint64 serverId = 1;\n\tint64 userPlanId = 2;\n}",
      "doc": "修改服务套餐"
    },
    {
      "name": "CheckUserServerRequest",
      "code": "\nmessage CheckUserServerRequest {\n\tint64 serverId = 1;\n}",
      "doc": "检查服务是否属于某个用户"
    },
    {
      "name": "ComposeServerConfigResponse",
      "code": "\n\nmessage ComposeServerConfigResponse {\n\tbytes serverConfigJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateServerWebRequest",
      "code": "\n\nmessage UpdateServerWebRequest {\n\tint64 serverId = 1;\n\tint64 webId = 2;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledServersMatchRequest",
      "code": "\nmessage CountAllEnabledServersMatchRequest {\n\tint64 serverGroupId = 1; // 服务分组ID，如果为-1表示查找未分组\n\tstring keyword = 2;\n\tint64 userId = 3;\n\tint64 nodeClusterId = 4;\n\tint32 auditingFlag = 5;\n\tstring protocolFamily = 6;\n}",
      "doc": "计算服务数量"
    },
    {
      "name": "FindEnabledServerResponse",
      "code": "\n\nmessage FindEnabledServerResponse {\n\tServer server = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledServerTypeResponse",
      "code": "\n\nmessage FindEnabledServerTypeResponse {\n\tstring type = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledServersWithNodeClusterIdRequest",
      "code": "\nmessage CountAllEnabledServersWithNodeClusterIdRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "计算运行在某个集群上的所有服务数量"
    },
    {
      "name": "FindAllEnabledServersDNSWithNodeClusterIdRequest",
      "code": "\nmessage FindAllEnabledServersDNSWithNodeClusterIdRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "取得某个集群下的所有服务相关的DNS"
    },
    {
      "name": "UpdateServerUAMRequest",
      "code": "\nmessage UpdateServerUAMRequest {\n\tint64 serverId = 1;\n\tbytes uamJSON = 2;\n}",
      "doc": "修改服务UAM设置"
    },
    {
      "name": "CreateServerRequest",
      "code": "\nmessage CreateServerRequest {\n\tint64 userId = 1;\n\tint64 adminId = 2;\n\tstring type = 3;\n\tstring name = 4;\n\tstring description = 5;\n\n\t// 配置相关\n\tbytes serverNamesJON = 8;\n\tbytes httpJSON = 9;\n\tbytes httpsJSON = 10;\n\tbytes tcpJSON = 11;\n\tbytes tlsJSON = 12;\n\tbytes unixJSON = 13;\n\tbytes udpJSON = 14;\n\tint64 webId = 15;\n\tbytes reverseProxyJSON = 16;\n\trepeated int64 serverGroupIds = 17;\n\tint64 userPlanId = 18;\n\n\tint64 nodeClusterId = 30;\n\tbytes includeNodesJSON = 31;\n\tbytes excludeNodesJSON = 32;\n}",
      "doc": "创建服务"
    },
    {
      "name": "CreateServerResponse",
      "code": "\n\nmessage CreateServerResponse {\n\tint64 serverId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateServerReverseProxyRequest",
      "code": "\nmessage UpdateServerReverseProxyRequest {\n\tint64 serverId = 1;\n\tbytes reverseProxyJSON = 2;\n}",
      "doc": "修改服务的反向代理设置"
    },
    {
      "name": "UpdateServerDNSRequest",
      "code": "\nmessage UpdateServerDNSRequest {\n\tint64 serverId = 1;\n\tbool supportCNAME = 2;\n}",
      "doc": "修改服务的DNS相关设置"
    },
    {
      "name": "NotifyServersChangeRequest",
      "code": "\nmessage NotifyServersChangeRequest {\n\n}",
      "doc": "通知更新"
    },
    {
      "name": "UpdateServerTrafficLimitRequest",
      "code": "\nmessage UpdateServerTrafficLimitRequest {\n\tint64 serverId = 1;\n\tbytes trafficLimitJSON = 2;\n}",
      "doc": "设置流量限制"
    },
    {
      "name": "FindNearbyServersResponse",
      "code": "\n\nmessage FindNearbyServersResponse {\n\tstring scope = 1; // 范围 cluster|group\n\trepeated GroupInfo groups = 2;\n\n\n\tmessage GroupInfo {\n\t\tstring name = 1;\n\t\trepeated Server servers = 2;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "UpdateServerTLSRequest",
      "code": "\n\nmessage UpdateServerTLSRequest {\n\tint64 serverId = 1;\n\tbytes tlsJSON = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledServerRequest",
      "code": "\nmessage FindEnabledServerRequest {\n\tint64 serverId = 1;\n}",
      "doc": "查找单个服务"
    },
    {
      "name": "FindAllEnabledServersWithSSLCertIdRequest",
      "code": "\nmessage FindAllEnabledServersWithSSLCertIdRequest {\n\tint64 sslCertId = 1;\n}",
      "doc": "查找使用某个SSL证书的所有服务"
    },
    {
      "name": "FindEnabledServerTrafficLimitResponse",
      "code": "\n\nmessage FindEnabledServerTrafficLimitResponse {\n\tbytes trafficLimitJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindServerNamesRequest",
      "code": "\nmessage FindServerNamesRequest {\n\tint64 serverId = 1;\n}",
      "doc": "查找服务的域名设置"
    },
    {
      "name": "FindEnabledServerDNSRequest",
      "code": "\nmessage FindEnabledServerDNSRequest {\n\tint64 serverId = 1;\n}",
      "doc": "查找单个服务的DNS信息"
    },
    {
      "name": "FindServerUserPlanResponse",
      "code": "\n\nmessage FindServerUserPlanResponse {\n\tUserPlan userPlan = 1;\n}",
      "doc": ""
    },
    {
      "name": "ComposeServerConfigRequest",
      "code": "\nmessage ComposeServerConfigRequest {\n\tint64 serverId = 1;\n}",
      "doc": "获取服务配置"
    },
    {
      "name": "ListEnabledServersMatchRequest",
      "code": "\nmessage ListEnabledServersMatchRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n\tint64 serverGroupId = 3;  // 服务分组ID，如果为-1表示查找未分组\n\tstring keyword = 4;\n\tint64 userId = 5;\n\tint64 nodeClusterId = 6;\n\tint32 auditingFlag = 7;\n\tstring protocolFamily = 8;\n\tbool trafficOutAsc = 9;\n\tbool trafficOutDesc = 10;\n}",
      "doc": "列出单页服务"
    },
    {
      "name": "FindEnabledUserServerBasicRequest",
      "code": "\nmessage FindEnabledUserServerBasicRequest {\n\tint64 serverId = 1;\n}",
      "doc": "查找用户服务基本信息"
    },
    {
      "name": "FindEnabledUserServerBasicResponse",
      "code": "\n\nmessage FindEnabledUserServerBasicResponse {\n\tServer server = 1;\n}",
      "doc": ""
    },
    {
      "name": "PurgeServerCacheRequest",
      "code": "\nmessage PurgeServerCacheRequest {\n\trepeated string keys = 2;\n\trepeated string prefixes = 3;\n\tstring description = 4; // 任务描述\n}",
      "doc": "清除缓存"
    },
    {
      "name": "FindEnabledServerUAMRequest",
      "code": "\nmessage FindEnabledServerUAMRequest {\n\tint64 serverId = 1;\n}",
      "doc": "查找服务UAM设置"
    },
    {
      "name": "UpdateServerIsOnRequest",
      "code": "\nmessage UpdateServerIsOnRequest {\n\tint64 serverId = 1;\n\tbool isOn = 2;\n}",
      "doc": "修改服务启是否启用"
    },
    {
      "name": "NotifyServersChangeResponse",
      "code": "\n\nmessage NotifyServersChangeResponse {\n\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledServerDNSResponse",
      "code": "\n\nmessage FindEnabledServerDNSResponse {\n\tstring dnsName = 1;\n\tDNSDomain domain = 2;\n\tbool supportCNAME = 3;\n}",
      "doc": ""
    },
    {
      "name": "UpdateServerHTTPRequest",
      "code": "\nmessage UpdateServerHTTPRequest {\n\tint64 serverId = 1;\n\tbytes httpJSON = 2;\n}",
      "doc": "修改服务的HTTP等设置"
    },
    {
      "name": "ListEnabledServersMatchResponse",
      "code": "\n\nmessage ListEnabledServersMatchResponse {\n\trepeated Server servers = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledServersWithSSLCertIdRequest",
      "code": "\nmessage CountAllEnabledServersWithSSLCertIdRequest {\n\tint64 sslCertId = 1;\n}",
      "doc": "计算使用某个SSL证书的服务数量"
    },
    {
      "name": "FindLatestServersResponse",
      "code": "\n\nmessage FindLatestServersResponse {\n\trepeated Server servers = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledServerNamesWithUserIdRequest",
      "code": "\nmessage FindAllEnabledServerNamesWithUserIdRequest {\n\tint64 userId = 1;\n}",
      "doc": "查找一个用户下的所有域名列表"
    },
    {
      "name": "UpdateServerUDPRequest",
      "code": "\n\nmessage UpdateServerUDPRequest {\n\tint64 serverId = 1;\n\tbytes udpJSON = 2;\n}",
      "doc": ""
    },
    {
      "name": "RegenerateServerCNAMERequest",
      "code": "\nmessage RegenerateServerCNAMERequest {\n\tint64 serverId = 1;\n}",
      "doc": "重新生成CNAME"
    },
    {
      "name": "FindEnabledServerConfigRequest",
      "code": "\nmessage FindEnabledServerConfigRequest {\n\tint64 serverId = 1;\n}",
      "doc": "查找服务配置"
    },
    {
      "name": "FindEnabledServerConfigResponse",
      "code": "\n\nmessage FindEnabledServerConfigResponse {\n\tbytes serverJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAndInitServerWebConfigRequest",
      "code": "\nmessage FindAndInitServerWebConfigRequest {\n\tint64 serverId = 1;\n}",
      "doc": "初始化Web设置"
    },
    {
      "name": "ServerDNSInfo",
      "code": "\n\nmessage ServerDNSInfo {\n\tint64 id = 1;\n\tstring name = 2;\n\tstring dnsName = 3;\n}",
      "doc": ""
    },
    {
      "name": "CountAllServerBillsRequest",
      "code": "\nmessage CountAllServerBillsRequest {\n\tint64 userId = 1;\n\tstring month = 2;\n}",
      "doc": "查询服务账单数量"
    },
    {
      "name": "ListServerBillsRequest",
      "code": "\nmessage ListServerBillsRequest {\n\tint64 userId = 1;\n\tstring month = 2;\n\tint64 offset = 3;\n\tint64 size = 4;\n}",
      "doc": "查询服务账单列表"
    },
    {
      "name": "ListServerBillsResponse",
      "code": "\n\nmessage ListServerBillsResponse {\n\trepeated ServerBill serverBills = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindTopServerClientBrowserMonthlyStatsRequest",
      "code": "\nmessage FindTopServerClientBrowserMonthlyStatsRequest {\n\tint64 serverId = 1;\n\tstring month = 2;\n\tint64 offset = 3;\n\tint64 size = 4;\n}",
      "doc": "查找前N个浏览器"
    },
    {
      "name": "FindTopServerClientBrowserMonthlyStatsResponse",
      "code": "\n\nmessage FindTopServerClientBrowserMonthlyStatsResponse {\n\trepeated Stat stats = 1;\n\n\n\tmessage Stat {\n\t\tClientBrowser clientBrowser = 1;\n\t\tstring version = 2;\n\t\tint64 count = 3;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "FindTopServerClientSystemMonthlyStatsRequest",
      "code": "\nmessage FindTopServerClientSystemMonthlyStatsRequest {\n\tint64 serverId = 1;\n\tstring month = 2;\n\tint64 offset = 3;\n\tint64 size = 4;\n}",
      "doc": "查找前N个操作系统"
    },
    {
      "name": "FindTopServerClientSystemMonthlyStatsResponse",
      "code": "\n\nmessage FindTopServerClientSystemMonthlyStatsResponse {\n\trepeated Stat stats = 1;\n\n\n\tmessage Stat {\n\t\tClientSystem clientSystem = 1;\n\t\tstring version = 2;\n\t\tint64 count = 3;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "FindLatestServerHourlyStatsResponse",
      "code": "\n\nmessage FindLatestServerHourlyStatsResponse {\n\trepeated HourlyStat stats = 1;\n\n\n\tmessage HourlyStat {\n\t\tstring hour = 1;\n\t\tint64 bytes = 2;\n\t\tint64 cachedBytes = 3;\n\t\tint64 countRequests = 4;\n\t\tint64 countCachedRequests = 5;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "FindLatestServerDailyStatsRequest",
      "code": "\nmessage FindLatestServerDailyStatsRequest {\n\tint64 serverId = 1;\n\tint32 days = 2;\n}",
      "doc": "按日读取统计数据"
    },
    {
      "name": "SumCurrentServerDailyStatsRequest",
      "code": "\nmessage SumCurrentServerDailyStatsRequest {\n\tint64 serverId = 1;\n}",
      "doc": "查找单个服务当前时刻（N分钟内）统计数据"
    },
    {
      "name": "SumServerDailyStatsRequest",
      "code": "\nmessage SumServerDailyStatsRequest {\n\tint64 serverId = 1;\n\tstring day = 2; // YYYYMMDD\n}",
      "doc": "计算单个服务的日统计"
    },
    {
      "name": "FindLatestServerMinutelyStatsResponse",
      "code": "\n\nmessage FindLatestServerMinutelyStatsResponse {\n\trepeated MinutelyStat stats = 1;\n\n\n\tmessage MinutelyStat {\n\t\tstring minute = 1;\n\t\tint64 bytes = 2;\n\t\tint64 cachedBytes = 3;\n\t\tint64 countRequests = 4;\n\t\tint64 countCachedRequests = 5;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "FindLatestServerDailyStatsResponse",
      "code": "\n\nmessage FindLatestServerDailyStatsResponse {\n\trepeated DailyStat stats = 1;\n\n\n\tmessage DailyStat {\n\t\tstring day = 1;\n\t\tint64 bytes = 2;\n\t\tint64 cachedBytes = 3;\n\t\tint64 countRequests = 4;\n\t\tint64 countCachedRequests = 5;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "FindLatestServerHourlyStatsRequest",
      "code": "\nmessage FindLatestServerHourlyStatsRequest {\n\tint64 serverId = 1;\n\tint32 hours = 2;\n}",
      "doc": "按小时读取统计数据"
    },
    {
      "name": "FindLatestServerMinutelyStatsRequest",
      "code": "\nmessage FindLatestServerMinutelyStatsRequest {\n\tint64 serverId = 1;\n\tint32 minutes = 2;\n}",
      "doc": "按分钟读取统计数据"
    },
    {
      "name": "SumCurrentServerDailyStatsResponse",
      "code": "\n\nmessage SumCurrentServerDailyStatsResponse {\n\tServerDailyStat serverDailyStat = 1;\n}",
      "doc": ""
    },
    {
      "name": "SumServerDailyStatsResponse",
      "code": "\n\nmessage SumServerDailyStatsResponse {\n\tServerDailyStat serverDailyStat = 1;\n}",
      "doc": ""
    },
    {
      "name": "SumServerMonthlyStatsRequest",
      "code": "\nmessage SumServerMonthlyStatsRequest {\n\tint64 serverId = 1;\n\tstring month = 2; // YYYYMM\n}",
      "doc": "计算单个服务的月统计"
    },
    {
      "name": "SumServerMonthlyStatsResponse",
      "code": "\n\nmessage SumServerMonthlyStatsResponse {\n\tServerDailyStat serverMonthlyStat = 1;\n}",
      "doc": ""
    },
    {
      "name": "UploadServerDailyStatsRequest",
      "code": "\nmessage UploadServerDailyStatsRequest {\n\trepeated ServerDailyStat stats = 1;\n\trepeated DomainStat domainStats = 2;\n\n\n\tmessage DomainStat {\n\t\tint64 serverId = 1;\n\t\tstring domain = 2;\n\t\tint64 bytes = 3;\n\t\tint64 cachedBytes = 4;\n\t\tint64 countRequests = 5;\n\t\tint64 countCachedRequests = 6;\n\t\tint64 countAttackRequests = 8;\n\t\tint64 attackBytes = 9;\n\t\tint64 createdAt = 7;\n\t}\n}",
      "doc": "上传统计"
    },
    {
      "name": "ListTopServerDomainStatsWithServerIdResponse",
      "code": "\n\nmessage ListTopServerDomainStatsWithServerIdResponse {\n\trepeated ServerDomainHourlyStat  domainStats = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListTopServerDomainStatsWithServerIdRequest",
      "code": "\nmessage ListTopServerDomainStatsWithServerIdRequest{\n\tint64 nodeClusterId = 1;\n\tint64 nodeId = 2;\n\tint64 serverId = 3;\n\tstring hourFrom = 4;\n\tstring hourTo = 5;\n\tint64 size = 6;\n}",
      "doc": "读取域名排行"
    },
    {
      "name": "FindEnabledServerGroupRequest",
      "code": "\nmessage FindEnabledServerGroupRequest {\n\tint64 serverGroupId = 1;\n}",
      "doc": "查找单个分组信息"
    },
    {
      "name": "UpdateServerGroupUDPReverseProxyRequest",
      "code": "\nmessage UpdateServerGroupUDPReverseProxyRequest {\n\tint64 serverGroupId = 1;\n\tbytes reverseProxyJSON = 2;\n}",
      "doc": "修改分组的UDP反向代理设置"
    },
    {
      "name": "FindAndInitServerGroupWebConfigRequest",
      "code": "\nmessage FindAndInitServerGroupWebConfigRequest {\n\tint64 serverGroupId = 1;\n}",
      "doc": "初始化Web设置"
    },
    {
      "name": "CreateServerGroupRequest",
      "code": "\nmessage CreateServerGroupRequest {\n\tstring name = 1;\n}",
      "doc": "创建分组"
    },
    {
      "name": "CreateServerGroupResponse",
      "code": "\n\nmessage CreateServerGroupResponse {\n\tint64 serverGroupId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAndInitServerGroupTCPReverseProxyConfigResponse",
      "code": "\n\nmessage FindAndInitServerGroupTCPReverseProxyConfigResponse {\n\tbytes reverseProxyJSON = 1;\n\tbytes reverseProxyRefJSON = 2;\n}",
      "doc": ""
    },
    {
      "name": "UpdateServerGroupHTTPReverseProxyRequest",
      "code": "\nmessage UpdateServerGroupHTTPReverseProxyRequest {\n\tint64 serverGroupId = 1;\n\tbytes reverseProxyJSON = 2;\n}",
      "doc": "修改分组的HTTP反向代理设置"
    },
    {
      "name": "DeleteServerGroupRequest",
      "code": "\nmessage DeleteServerGroupRequest {\n\tint64 serverGroupId = 1;\n}",
      "doc": "删除分组"
    },
    {
      "name": "FindAndInitServerGroupHTTPReverseProxyConfigResponse",
      "code": "\n\nmessage FindAndInitServerGroupHTTPReverseProxyConfigResponse {\n\tbytes reverseProxyJSON = 1;\n\tbytes reverseProxyRefJSON = 2;\n}",
      "doc": ""
    },
    {
      "name": "FindAndInitServerGroupTCPReverseProxyConfigRequest",
      "code": "\nmessage FindAndInitServerGroupTCPReverseProxyConfigRequest {\n\tint64 serverGroupId = 1;\n}",
      "doc": "查找TCP反向代理设置"
    },
    {
      "name": "FindAndInitServerGroupUDPReverseProxyConfigRequest",
      "code": "\nmessage FindAndInitServerGroupUDPReverseProxyConfigRequest {\n\tint64 serverGroupId = 1;\n}",
      "doc": "查找UDP反向代理设置"
    },
    {
      "name": "FindAndInitServerGroupWebConfigResponse",
      "code": "\n\nmessage FindAndInitServerGroupWebConfigResponse {\n\tbytes webJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateServerGroupRequest",
      "code": "\nmessage UpdateServerGroupRequest {\n\tint64 serverGroupId = 1;\n\tstring name = 2;\n}",
      "doc": "修改分组"
    },
    {
      "name": "UpdateServerGroupOrdersRequest",
      "code": "\nmessage UpdateServerGroupOrdersRequest {\n\trepeated int64 serverGroupIds = 1;\n}",
      "doc": "修改分组排序"
    },
    {
      "name": "FindAndInitServerGroupHTTPReverseProxyConfigRequest",
      "code": "\nmessage FindAndInitServerGroupHTTPReverseProxyConfigRequest {\n\tint64 serverGroupId = 1;\n}",
      "doc": "查找HTTP反向代理设置"
    },
    {
      "name": "FindAndInitServerGroupUDPReverseProxyConfigResponse",
      "code": "\n\nmessage FindAndInitServerGroupUDPReverseProxyConfigResponse {\n\tbytes reverseProxyJSON = 1;\n\tbytes reverseProxyRefJSON = 2;\n}",
      "doc": ""
    },
    {
      "name": "UpdateServerGroupTCPReverseProxyRequest",
      "code": "\nmessage UpdateServerGroupTCPReverseProxyRequest {\n\tint64 serverGroupId = 1;\n\tbytes reverseProxyJSON = 2;\n}",
      "doc": "修改分组的TCP反向代理设置"
    },
    {
      "name": "FindEnabledServerGroupConfigInfoRequest",
      "code": "\nmessage FindEnabledServerGroupConfigInfoRequest {\n\tint64 serverGroupId = 1;\n\tint64 serverId = 2;\n}",
      "doc": "取得分组的配置概要信息"
    },
    {
      "name": "FindEnabledServerGroupConfigInfoResponse",
      "code": "\n\nmessage FindEnabledServerGroupConfigInfoResponse {\n\tbool hasHTTPReverseProxy = 1;\n\tbool hasTCPReverseProxy = 2;\n\tbool hasUDPReverseProxy = 3;\n\tint64 serverGroupId = 4;\n\tbool hasRootConfig = 5;\n\tbool hasWAFConfig = 6;\n\tbool hasCacheConfig = 7;\n\tbool hasCharsetConfig = 8;\n\tbool hasStatConfig = 9;\n\tbool hasCompressionConfig = 10;\n\tbool hasRequestHeadersConfig = 11;\n\tbool hasResponseHeadersConfig = 12;\n\tbool hasWebsocketConfig = 13;\n\tbool hasWebPConfig = 14;\n\tbool hasAccessLogConfig = 15;\n\tbool hasRemoteAddrConfig = 16;\n\tbool hasPagesConfig = 17;\n\tbool hasRequestLimitConfig = 18;\n\tbool hasRequestScriptsConfig = 19;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledServerGroupsResponse",
      "code": "\n\nmessage FindAllEnabledServerGroupsResponse {\n\trepeated ServerGroup serverGroups = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledServerGroupResponse",
      "code": "\n\nmessage FindEnabledServerGroupResponse {\n\tServerGroup serverGroup = 1;\n}",
      "doc": ""
    },
    {
      "name": "ComposeServerHTTPFirewallDashboardRequest",
      "code": "\nmessage ComposeServerHTTPFirewallDashboardRequest {\n\tstring day = 1;\n\tint64 userId = 2;\n\tint64 serverId = 3;\n}",
      "doc": "组合服务的Dashboard"
    },
    {
      "name": "ComposeServerHTTPFirewallDashboardResponse",
      "code": "\n\nmessage ComposeServerHTTPFirewallDashboardResponse {\n\tint64 countDailyLog = 1;\n\tint64 countDailyBlock = 2;\n\tint64 countDailyCaptcha = 3;\n\tint64 countWeeklyBlock = 4;\n\tint64 countMonthlyBlock = 5;\n\n\trepeated HTTPFirewallRuleGroupStat httpFirewallRuleGroups = 30;\n\trepeated DailyStat logDailyStats = 31;\n\trepeated DailyStat blockDailyStats = 32;\n\trepeated DailyStat captchaDailyStats = 33;\n\n\n\tmessage HTTPFirewallRuleGroupStat {\n\t\tHTTPFirewallRuleGroup httpFirewallRuleGroup = 1;\n\t\tint64 count = 2;\n\t}\n\n\n\tmessage DailyStat {\n\t\tstring day = 1;\n\t\tint64 count = 2;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "FindTopServerRegionCityMonthlyStatsRequest",
      "code": "\nmessage FindTopServerRegionCityMonthlyStatsRequest {\n\tstring month = 1; // YYYYMM\n\tint64 serverId = 2;\n\tint64 countryId = 3;\n\tint64 provinceId = 4;\n\tint64 offset = 5;\n\tint64 size = 6;\n}",
      "doc": "查找前N个城市"
    },
    {
      "name": "FindTopServerRegionCityMonthlyStatsResponse",
      "code": "\n\nmessage FindTopServerRegionCityMonthlyStatsResponse {\n\trepeated Stat stats = 1;\n\n\n\tmessage Stat {\n\t\tRegionCountry regionCountry = 1;\n\t\tRegionProvince regionProvince = 2;\n\t\tRegionCity regionCity = 3;\n\t\tint64 count = 4;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "FindTopServerRegionCountryMonthlyStatsResponse",
      "code": "\n\nmessage FindTopServerRegionCountryMonthlyStatsResponse {\n\trepeated Stat stats = 1;\n\n\n\tmessage Stat {\n\t\tRegionCountry regionCountry = 1;\n\t\tint64 count = 2;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "FindTopServerRegionCountryMonthlyStatsRequest",
      "code": "\nmessage FindTopServerRegionCountryMonthlyStatsRequest {\n\tstring month = 1; // YYYYMM\n\tint64 serverId = 2;\n\tint64 offset = 3;\n\tint64 size = 4;\n}",
      "doc": "查找前N个城市"
    },
    {
      "name": "FindTopServerRegionProviderMonthlyStatsRequest",
      "code": "\nmessage FindTopServerRegionProviderMonthlyStatsRequest {\n\tstring month = 1; // YYYYMM\n\tint64 serverId = 2;\n\tint64 offset = 3;\n\tint64 size = 4;\n}",
      "doc": "查找前N个城市"
    },
    {
      "name": "FindTopServerRegionProviderMonthlyStatsResponse",
      "code": "\n\nmessage FindTopServerRegionProviderMonthlyStatsResponse {\n\trepeated Stat stats = 1;\n\n\n\tmessage Stat {\n\t\tRegionProvider regionProvider = 1;\n\t\tint64 count = 2;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "FindTopServerRegionProvinceMonthlyStatsRequest",
      "code": "\nmessage FindTopServerRegionProvinceMonthlyStatsRequest {\n\tstring month = 1; // YYYYMM\n\tint64 serverId = 2;\n\tint64 countryId = 3;\n\tint64 offset = 4;\n\tint64 size = 5;\n}",
      "doc": "查找前N个城市"
    },
    {
      "name": "FindTopServerRegionProvinceMonthlyStatsResponse",
      "code": "\n\nmessage FindTopServerRegionProvinceMonthlyStatsResponse {\n\trepeated Stat stats = 1;\n\n\n\tmessage Stat {\n\t\tRegionCountry regionCountry = 1;\n\t\tRegionProvince regionProvince = 2;\n\t\tint64 count = 3;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledServerStatBoardsResponse",
      "code": "\n\nmessage FindAllEnabledServerStatBoardsResponse {\n\trepeated ServerStatBoard serverStatBoards = 1;\n}",
      "doc": ""
    },
    {
      "name": "ComposeServerStatNodeBoardResponse",
      "code": "\n\nmessage ComposeServerStatNodeBoardResponse {\n\tbool isActive = 1;\n\tint64 trafficInBytes = 2;\n\tint64 trafficOutBytes = 3;\n\tint64 countRequests = 4;\n\tint64 countAttackRequests = 5;\n\tint64 countConnections = 6;\n\tint64 cacheDiskSize = 7;\n\tint64 cacheMemorySize = 8;\n\tfloat cpuUsage = 9;\n\tfloat memoryUsage = 10;\n\tint64 memoryTotalSize = 11;\n\tfloat load = 12;\n\n\trepeated DailyTrafficStat dailyTrafficStats = 31;\n\trepeated HourlyTrafficStat hourlyTrafficStats = 32;\n\n\trepeated NodeValue cpuNodeValues = 34;\n\trepeated NodeValue memoryNodeValues = 35;\n\trepeated NodeValue loadNodeValues = 36;\n\trepeated NodeValue cacheDirsValues = 38;\n\n\trepeated MetricDataChart metricDataCharts = 37;\n\n\n\tmessage DailyTrafficStat {\n\t\tstring day = 1;\n\t\tint64 bytes = 2;\n\t\tint64 cachedBytes = 3;\n\t\tint64 countRequests = 4;\n\t\tint64 countCachedRequests = 5;\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n\n\n\tmessage HourlyTrafficStat {\n\t\tstring hour = 1;\n\t\tint64 bytes = 2;\n\t\tint64 cachedBytes = 3;\n\t\tint64 countRequests = 4;\n\t\tint64 countCachedRequests = 5;\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "ComposeServerStatBoardResponse",
      "code": "\n\nmessage ComposeServerStatBoardResponse {\n\trepeated DailyTrafficStat dailyTrafficStats = 30;\n\trepeated HourlyTrafficStat hourlyTrafficStats = 31;\n\trepeated NodeStat topNodeStats = 32;\n\trepeated CountryStat topCountryStats = 35;\n\n\trepeated MetricDataChart metricDataCharts = 34;\n\n\n\tmessage DailyTrafficStat {\n\t\tstring day = 1;\n\t\tint64 bytes = 2;\n\t\tint64 cachedBytes = 3;\n\t\tint64 countRequests = 4;\n\t\tint64 countCachedRequests = 5;\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n\n\n\tmessage HourlyTrafficStat {\n\t\tstring hour = 1;\n\t\tint64 bytes = 2;\n\t\tint64 cachedBytes = 3;\n\t\tint64 countRequests = 4;\n\t\tint64 countCachedRequests = 5;\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n\n\n\tmessage NodeStat {\n\t\tint64 nodeId = 1;\n\t\tstring nodeName = 2;\n\t\tint64 countRequests = 3;\n\t\tint64 bytes = 4;\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n\n\n\tmessage CountryStat {\n\t\tstring countryName = 1;\n\t\tint64 bytes = 2;\n\t\tint64 countRequests = 3;\n\t\tfloat percent = 4; // 流量占比\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "ComposeServerStatBoardRequest",
      "code": "\nmessage ComposeServerStatBoardRequest {\n\tint64 serverId = 1;\n}",
      "doc": "组合服务看板数据"
    },
    {
      "name": "ComposeServerStatNodeClusterBoardResponse",
      "code": "\n\nmessage ComposeServerStatNodeClusterBoardResponse {\n\tint64 countActiveNodes = 1;\n\tint64 countInactiveNodes = 2;\n\tint64 countServers = 3;\n\tint64 countUsers = 4;\n\n\trepeated DailyTrafficStat dailyTrafficStats = 30;\n\trepeated HourlyTrafficStat hourlyTrafficStats = 31;\n\trepeated NodeStat topNodeStats = 32;\n\n\trepeated NodeValue cpuNodeValues = 34;\n\trepeated NodeValue memoryNodeValues = 35;\n\trepeated NodeValue loadNodeValues = 36;\n\n\trepeated MetricDataChart metricDataCharts = 37;\n\n\n\tmessage DailyTrafficStat {\n\t\tstring day = 1;\n\t\tint64 bytes = 2;\n\t\tint64 cachedBytes = 3;\n\t\tint64 countRequests = 4;\n\t\tint64 countCachedRequests = 5;\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n\n\n\tmessage HourlyTrafficStat {\n\t\tstring hour = 1;\n\t\tint64 bytes = 2;\n\t\tint64 cachedBytes = 3;\n\t\tint64 countRequests = 4;\n\t\tint64 countCachedRequests = 5;\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n\n\n\tmessage NodeStat {\n\t\tint64 nodeId = 1;\n\t\tstring nodeName = 2;\n\t\tint64 countRequests = 3;\n\t\tint64 bytes = 4;\n\t\tint64 countAttackRequests = 6;\n\t\tint64 attackBytes = 7;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "MetricDataChart",
      "code": "\nmessage MetricDataChart {\n\tMetricChart metricChart = 1;\n\trepeated MetricStat metricStats = 2;\n}",
      "doc": "矩阵数据"
    },
    {
      "name": "FindAllEnabledServerStatBoardsRequest",
      "code": "\nmessage FindAllEnabledServerStatBoardsRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "读取所有看板"
    },
    {
      "name": "ComposeServerStatNodeClusterBoardRequest",
      "code": "\nmessage ComposeServerStatNodeClusterBoardRequest {\n\tint64 nodeClusterId = 1;\n}",
      "doc": "组合集群看板数据"
    },
    {
      "name": "ComposeServerStatNodeBoardRequest",
      "code": "\nmessage ComposeServerStatNodeBoardRequest {\n\tint64 nodeId = 1;\n}",
      "doc": "组合节点看板数据"
    },
    {
      "name": "EnableServerStatBoardChartRequest",
      "code": "\nmessage EnableServerStatBoardChartRequest {\n\tint64 serverStatBoardId = 1;\n\tint64 metricChartId = 2;\n}",
      "doc": "添加图表"
    },
    {
      "name": "DisableServerStatBoardChartRequest",
      "code": "\nmessage DisableServerStatBoardChartRequest {\n\tint64 serverStatBoardId = 1;\n\tint64 metricChartId = 2;\n}",
      "doc": "取消图表"
    },
    {
      "name": "FindAllEnabledServerStatBoardChartsRequest",
      "code": "\nmessage FindAllEnabledServerStatBoardChartsRequest {\n\tint64 serverStatBoardId = 1;\n}",
      "doc": "读取看板中的图表"
    },
    {
      "name": "FindAllEnabledServerStatBoardChartsResponse",
      "code": "\n\nmessage FindAllEnabledServerStatBoardChartsResponse {\n\trepeated ServerStatBoardChart serverStatBoardCharts = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountSSLCertRequest",
      "code": "\nmessage CountSSLCertRequest {\n\tbool isCA = 1;\n\tbool isAvailable = 2;\n\tbool isExpired = 3;\n\tint32 expiringDays = 4;\n\tstring keyword = 5;\n\tint64 userId = 6;\n}",
      "doc": "计算匹配的Cert数量"
    },
    {
      "name": "ListSSLCertsWithOCSPErrorRequest",
      "code": "\nmessage ListSSLCertsWithOCSPErrorRequest {\n\tstring keyword = 1;\n\tint64 offset = 2;\n\tint64 size = 3;\n}",
      "doc": "列出有OCSP错误的证书"
    },
    {
      "name": "IgnoreSSLCertsWithOCSPErrorRequest",
      "code": "\nmessage IgnoreSSLCertsWithOCSPErrorRequest {\n\trepeated int64 sslCertIds = 1;\n}",
      "doc": "忽略一组OCSP证书错误"
    },
    {
      "name": "ResetSSLCertsWithOCSPErrorRequest",
      "code": "\nmessage ResetSSLCertsWithOCSPErrorRequest {\n\trepeated int64 sslCertIds = 1;\n}",
      "doc": "重置一组证书OCSP错误状态"
    },
    {
      "name": "ResetAllSSLCertsWithOCSPErrorRequest",
      "code": "\nmessage ResetAllSSLCertsWithOCSPErrorRequest {\n\n}",
      "doc": "重置所有证书OCSP错误状态"
    },
    {
      "name": "CreateSSLCertRequest",
      "code": "\nmessage CreateSSLCertRequest {\n\tbool isOn = 1;\n\tstring name = 2;\n\tstring description = 3;\n\tstring serverName = 4;\n\tbool isCA = 5;\n\tbytes certData = 6;\n\tbytes keyData = 7;\n\tint64 timeBeginAt = 8;\n\tint64 timeEndAt = 9;\n\trepeated string dnsNames = 10;\n\trepeated string commonNames = 11;\n}",
      "doc": "创建Cert"
    },
    {
      "name": "UpdateSSLCertRequest",
      "code": "\nmessage UpdateSSLCertRequest {\n\tint64 sslCertId = 1;\n\tbool isOn = 2;\n\tstring name = 3;\n\tstring description = 4;\n\tstring serverName = 5;\n\tbool isCA = 6;\n\tbytes certData = 7;\n\tbytes keyData = 8;\n\tint64 timeBeginAt = 9;\n\tint64 timeEndAt = 10;\n\trepeated string dnsNames = 11;\n\trepeated string commonNames = 12;\n}",
      "doc": "修改Cert"
    },
    {
      "name": "FindEnabledSSLCertConfigResponse",
      "code": "\n\nmessage FindEnabledSSLCertConfigResponse {\n\tbytes sslCertJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListUpdatedSSLCertOCSPResponse",
      "code": "\n\nmessage ListUpdatedSSLCertOCSPResponse {\n\trepeated SSLCertOCSP sslCertOCSP = 1;\n\n\n\tmessage SSLCertOCSP {\n\t\tint64 sslCertId = 1;\n\t\tbytes data = 2;\n\t\tint64 version = 3;\n\t\tint64 expiresAt = 4;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "ListUpdatedSSLCertOCSPRequest",
      "code": "\nmessage ListUpdatedSSLCertOCSPRequest {\n\tint64 version = 1;\n\tint32 size = 2;\n}",
      "doc": "读取证书的OCSP"
    },
    {
      "name": "DeleteSSLCertRequest",
      "code": "\nmessage DeleteSSLCertRequest {\n\tint64 sslCertId = 1;\n}",
      "doc": "删除证书"
    },
    {
      "name": "ListSSLCertsResponse",
      "code": "\n\nmessage ListSSLCertsResponse {\n\tbytes sslCertsJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListSSLCertsWithOCSPErrorResponse",
      "code": "\n\nmessage ListSSLCertsWithOCSPErrorResponse {\n\trepeated SSLCert sslCerts = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListSSLCertsRequest",
      "code": "\nmessage ListSSLCertsRequest {\n\tbool isCA = 1;\n\tbool isAvailable = 2;\n\tbool isExpired = 3;\n\tint32 expiringDays = 4;\n\tstring keyword = 5;\n\tint64 offset = 6;\n\tint64 size = 7;\n\tint64 userId = 8;\n}",
      "doc": "列出单页匹配的Cert"
    },
    {
      "name": "CountAllSSLCertsWithOCSPErrorRequest",
      "code": "\nmessage CountAllSSLCertsWithOCSPErrorRequest {\n\tstring keyword = 1;\n}",
      "doc": "计算有OCSP错误的证书数量"
    },
    {
      "name": "CreateSSLCertResponse",
      "code": "\n\nmessage CreateSSLCertResponse {\n\tint64 sslCertId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledSSLCertConfigRequest",
      "code": "\nmessage FindEnabledSSLCertConfigRequest {\n\tint64 sslCertId = 1;\n}",
      "doc": "查找证书配置"
    },
    {
      "name": "CreateSSLPolicyRequest",
      "code": "\nmessage CreateSSLPolicyRequest {\n\tbool http2Enabled = 1;\n\tstring minVersion = 2;\n\tbytes sslCertsJSON = 3;\n\tbytes hstsJSON = 4;\n\tint32 clientAuthType = 5;\n\tbytes clientCACertsJSON = 6;\n\trepeated string cipherSuites = 7;\n\tbool cipherSuitesIsOn = 8;\n\tbool ocspIsOn = 9;\n}",
      "doc": "创建Policy"
    },
    {
      "name": "CreateSSLPolicyResponse",
      "code": "\n\nmessage CreateSSLPolicyResponse {\n\tint64 sslPolicyId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateSSLPolicyRequest",
      "code": "\nmessage UpdateSSLPolicyRequest {\n\tint64 sslPolicyId = 1;\n\tbool http2Enabled = 2;\n\tstring minVersion = 3;\n\tbytes sslCertsJSON = 4;\n\tbytes hstsJSON = 5;\n\tint32 clientAuthType = 6;\n\tbytes clientCACertsJSON = 7;\n\trepeated string cipherSuites = 8;\n\tbool cipherSuitesIsOn = 9;\n\tbool ocspIsOn = 10;\n}",
      "doc": "修改Policy"
    },
    {
      "name": "FindEnabledSSLPolicyConfigRequest",
      "code": "\nmessage FindEnabledSSLPolicyConfigRequest {\n\tint64 sslPolicyId = 1;\n}",
      "doc": "查找Policy"
    },
    {
      "name": "FindEnabledSSLPolicyConfigResponse",
      "code": "\n\nmessage FindEnabledSSLPolicyConfigResponse {\n\tbytes sslPolicyJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "SysLockerLockRequest",
      "code": "\nmessage SysLockerLockRequest {\n\tstring key = 1;\n\tint64 timeoutSeconds = 2;\n}",
      "doc": "获得锁"
    },
    {
      "name": "SysLockerLockResponse",
      "code": "\n\nmessage SysLockerLockResponse {\n\tbool ok = 1;\n}",
      "doc": ""
    },
    {
      "name": "SysLockerUnlockRequest",
      "code": "\nmessage SysLockerUnlockRequest {\n\tstring key = 1;\n}",
      "doc": "释放锁"
    },
    {
      "name": "UpdateSysSettingRequest",
      "code": "\nmessage UpdateSysSettingRequest {\n\tstring code = 1;\n\tbytes valueJSON = 2;\n}",
      "doc": "更改配置"
    },
    {
      "name": "ReadSysSettingRequest",
      "code": "\nmessage ReadSysSettingRequest {\n\tstring code = 1;\n}",
      "doc": "读取配置"
    },
    {
      "name": "ReadSysSettingResponse",
      "code": "\n\nmessage ReadSysSettingResponse {\n\tbytes valueJSON = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindTrafficDailyStatWithDayResponse",
      "code": "\n\nmessage FindTrafficDailyStatWithDayResponse {\n\tTrafficDailyStat trafficDailyStat = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindTrafficDailyStatWithDayRequest",
      "code": "\nmessage FindTrafficDailyStatWithDayRequest {\n\tstring day = 1; // YYYYMMDD\n\tstring minute = 2; // HHIISS，可选项\n}",
      "doc": "查找某日统计"
    },
    {
      "name": "RegisterUserRequest",
      "code": "\nmessage RegisterUserRequest {\n\tstring username = 1;\n\tstring password = 2;\n\tstring mobile = 3;\n\tstring email = 4;\n\tstring fullname = 5;\n\tstring ip = 6;\n\tstring source = 7;\n}",
      "doc": "注册用户"
    },
    {
      "name": "FindUserNodeClusterIdRequest",
      "code": "\nmessage FindUserNodeClusterIdRequest {\n\tint64 userId = 1;\n}",
      "doc": "获取用户所在的集群ID"
    },
    {
      "name": "FindAllUserFeatureDefinitionsRequest",
      "code": "\nmessage FindAllUserFeatureDefinitionsRequest {\n\n}",
      "doc": "获取所有的功能定义"
    },
    {
      "name": "ComposeUserDashboardResponse",
      "code": "\n\nmessage ComposeUserDashboardResponse {\n\tint64 countServers = 1;\n\tint64 monthlyTrafficBytes = 2;\n\tint64 monthlyPeekTrafficBytes = 3;\n\tint64 dailyTrafficBytes = 4;\n\tint64 dailyPeekTrafficBytes = 5;\n\trepeated DailyStat dailyTrafficStats = 6;\n\trepeated DailyStat dailyPeekTrafficStats = 7;\n\n\n\tmessage DailyStat {\n\t\tstring day = 1;\n\t\tint64 count = 2;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "CreateUserResponse",
      "code": "\n\nmessage CreateUserResponse {\n\tint64 userId = 1;\n}",
      "doc": ""
    },
    {
      "name": "LoginUserResponse",
      "code": "\n\nmessage LoginUserResponse {\n\tint64 userId = 1;\n\tbool isOk = 2;\n\tstring message = 3;\n}",
      "doc": ""
    },
    {
      "name": "UpdateUserInfoRequest",
      "code": "\nmessage UpdateUserInfoRequest {\n\tint64 userId = 1;\n\tstring fullname = 2;\n\tstring mobile = 3;\n\tstring email = 4;\n}",
      "doc": "修改用户基本信息"
    },
    {
      "name": "FindUserNodeClusterIdResponse",
      "code": "\n\nmessage FindUserNodeClusterIdResponse {\n\tint64 nodeClusterId = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateUserRequest",
      "code": "\nmessage UpdateUserRequest {\n\tint64 userId = 1;\n\tstring username = 2;\n\tstring password = 3;\n\tstring fullname = 4;\n\tstring mobile = 5;\n\tstring tel = 6;\n\tstring email = 7;\n\tstring remark = 8;\n\tbool isOn = 9;\n\tint64 nodeClusterId = 10;\n}",
      "doc": "修改用户"
    },
    {
      "name": "ListEnabledUsersRequest",
      "code": "\nmessage ListEnabledUsersRequest {\n\tstring keyword = 1;\n\tbool isVerifying = 4;\n\tint64 offset = 2;\n\tint64 size = 3;\n}",
      "doc": "列出单页用户"
    },
    {
      "name": "CheckUserUsernameResponse",
      "code": "\n\nmessage CheckUserUsernameResponse {\n\tbool exists = 1;\n}",
      "doc": ""
    },
    {
      "name": "ComposeUserDashboardRequest",
      "code": "\nmessage ComposeUserDashboardRequest {\n\tint64 userId = 1;\n}",
      "doc": "取得用户Dashboard数据"
    },
    {
      "name": "UpdateUserFeaturesRequest",
      "code": "\nmessage UpdateUserFeaturesRequest {\n\tint64 userId = 1;\n\trepeated string featureCodes = 2;\n}",
      "doc": "设置用户能使用的功能"
    },
    {
      "name": "ComposeUserGlobalBoardRequest",
      "code": "\nmessage ComposeUserGlobalBoardRequest {\n\n}",
      "doc": "组合看板数据"
    },
    {
      "name": "DeleteUserRequest",
      "code": "\nmessage DeleteUserRequest {\n\tint64 userId = 1;\n}",
      "doc": "删除用户"
    },
    {
      "name": "CreateUserRequest",
      "code": "\nmessage CreateUserRequest {\n\tstring username = 1;\n\tstring password = 2;\n\tstring fullname = 3;\n\tstring mobile = 4;\n\tstring tel = 5;\n\tstring email = 6;\n\tstring remark = 7;\n\tstring source = 8;\n\tint64 nodeClusterId = 9;\n}",
      "doc": "创建用户"
    },
    {
      "name": "VerifyUserRequest",
      "code": "\nmessage VerifyUserRequest {\n\tint64 userId = 1;\n\tbool isRejected = 2;\n\tstring rejectReason = 3;\n}",
      "doc": "审核用户"
    },
    {
      "name": "FindEnabledUserResponse",
      "code": "\n\nmessage FindEnabledUserResponse {\n\tUser user = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateUserLoginRequest",
      "code": "\nmessage UpdateUserLoginRequest {\n\tint64 userId = 1;\n\tstring username = 2;\n\tstring password = 3;\n}",
      "doc": "修改用户登录信息"
    },
    {
      "name": "FindUserFeaturesRequest",
      "code": "\nmessage FindUserFeaturesRequest {\n\tint64 userId = 1;\n}",
      "doc": "获取用户所有的功能列表"
    },
    {
      "name": "ListEnabledUsersResponse",
      "code": "\n\nmessage ListEnabledUsersResponse {\n\trepeated User users = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindUserFeaturesResponse",
      "code": "\n\nmessage FindUserFeaturesResponse {\n\trepeated UserFeature features = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledUsersRequest",
      "code": "\nmessage CountAllEnabledUsersRequest {\n\tstring keyword = 1;\n\tbool isVerifying = 2;\n}",
      "doc": "计算用户数量"
    },
    {
      "name": "FindEnabledUserRequest",
      "code": "\nmessage FindEnabledUserRequest {\n\tint64 userId = 1;\n}",
      "doc": "查询单个用户信息"
    },
    {
      "name": "CheckUserUsernameRequest",
      "code": "\nmessage CheckUserUsernameRequest {\n\tint64 userId = 1;\n\tstring username = 2;\n}",
      "doc": "检查用户名是否存在"
    },
    {
      "name": "ComposeUserGlobalBoardResponse",
      "code": "\n\nmessage ComposeUserGlobalBoardResponse {\n\tint64 totalUsers = 1;\n\tint64 countTodayUsers = 2;\n\tint64 countWeeklyUsers = 3;\n\tint64 countUserNodes = 4;\n\tint64 countOfflineUserNodes = 5;\n\tint64 countVerifyingUsers = 6;\n\n\trepeated DailyStat dailyStats = 30;\n\trepeated NodeValue cpuNodeValues = 31;\n\trepeated NodeValue memoryNodeValues = 32;\n\trepeated NodeValue loadNodeValues = 33;\n\trepeated TrafficStat topTrafficStats = 34;\n\n\n\tmessage DailyStat {\n\t\tstring day = 1;\n\t\tint64 count = 2;\n\t}\n\n\n\tmessage TrafficStat {\n\t\tint64 userId = 1;\n\t\tstring userName = 2;\n\t\tint64 countRequests = 3;\n\t\tint64 bytes = 4;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "LoginUserRequest",
      "code": "\nmessage LoginUserRequest {\n\tstring username = 1;\n\tstring password = 2;\n}",
      "doc": "登录"
    },
    {
      "name": "FindAllUserFeatureDefinitionsResponse",
      "code": "\n\nmessage FindAllUserFeatureDefinitionsResponse {\n\trepeated UserFeature features = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledUserAccessKeysResponse",
      "code": "\n\nmessage FindAllEnabledUserAccessKeysResponse {\n\trepeated UserAccessKey userAccessKeys = 1;\n}",
      "doc": ""
    },
    {
      "name": "DeleteUserAccessKeyRequest",
      "code": "\nmessage DeleteUserAccessKeyRequest {\n\tint64 userAccessKeyId = 1;\n}",
      "doc": "删除AccessKey"
    },
    {
      "name": "UpdateUserAccessKeyIsOnRequest",
      "code": "\nmessage UpdateUserAccessKeyIsOnRequest {\n\tint64 userAccessKeyId = 1;\n\tbool isOn = 2;\n}",
      "doc": "设置是否启用AccessKey"
    },
    {
      "name": "CountAllEnabledUserAccessKeysRequest",
      "code": "\nmessage CountAllEnabledUserAccessKeysRequest {\n\tint64 adminId = 1;\n\tint64 userId = 2;\n}",
      "doc": "计算AccessKey数量"
    },
    {
      "name": "CreateUserAccessKeyRequest",
      "code": "\nmessage CreateUserAccessKeyRequest {\n\tint64 userId = 1;\n\tint64 adminId = 3;\n\tstring description = 2;\n}",
      "doc": "创建AccessKey"
    },
    {
      "name": "CreateUserAccessKeyResponse",
      "code": "\n\nmessage CreateUserAccessKeyResponse {\n\tint64 userAccessKeyId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledUserAccessKeysRequest",
      "code": "\nmessage FindAllEnabledUserAccessKeysRequest {\n\tint64 userId = 1;\n\tint64 adminId = 2;\n}",
      "doc": "查找所有的AccessKey"
    },
    {
      "name": "UpdateUserAccountRequest",
      "code": "\nmessage UpdateUserAccountRequest {\n\tint64 userAccountId = 1;\n\tfloat delta = 2;\n\tstring eventType = 3;\n\tstring description = 4;\n\tbytes paramsJSON = 5;\n}",
      "doc": "修改用户账户"
    },
    {
      "name": "CountUserAccountsRequest",
      "code": "\nmessage CountUserAccountsRequest {\n\tstring keyword = 1;\n}",
      "doc": "计算账户数量"
    },
    {
      "name": "ListUserAccountsRequest",
      "code": "\nmessage ListUserAccountsRequest  {\n\tstring keyword = 1;\n\tint64 offset = 2;\n\tint64 size = 3;\n}",
      "doc": "列出单页账户"
    },
    {
      "name": "ListUserAccountsResponse",
      "code": "\n\nmessage ListUserAccountsResponse {\n\trepeated UserAccount userAccounts = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledUserAccountWithUserIdRequest",
      "code": "\nmessage FindEnabledUserAccountWithUserIdRequest {\n\tint64 userId = 1;\n}",
      "doc": "根据用户ID查找单个账户"
    },
    {
      "name": "FindEnabledUserAccountWithUserIdResponse",
      "code": "\n\nmessage FindEnabledUserAccountWithUserIdResponse {\n\tUserAccount userAccount = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledUserAccountRequest",
      "code": "\nmessage FindEnabledUserAccountRequest {\n\tint64 userAccountId = 1;\n}",
      "doc": "查找单个账户"
    },
    {
      "name": "FindEnabledUserAccountResponse",
      "code": "\n\nmessage FindEnabledUserAccountResponse {\n\tUserAccount userAccount = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListUserAccountDailyStatsRequest",
      "code": "\nmessage ListUserAccountDailyStatsRequest {\n\tstring dayFrom = 1;\n\tstring dayTo = 2;\n}",
      "doc": "列出按天统计"
    },
    {
      "name": "ListUserAccountDailyStatsResponse",
      "code": "\n\nmessage ListUserAccountDailyStatsResponse {\n\trepeated Stat stats = 1;\n\n\n\tmessage Stat {\n\t\tstring day = 1; // YYYYMMDD\n\t\tfloat income = 2;\n\t\tfloat expense = 3;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "ListUserAccountMonthlyStatsRequest",
      "code": "\nmessage ListUserAccountMonthlyStatsRequest {\n\tstring dayFrom = 1;\n\tstring dayTo = 2;\n}",
      "doc": "列出按月统计"
    },
    {
      "name": "ListUserAccountMonthlyStatsResponse",
      "code": "\n\nmessage ListUserAccountMonthlyStatsResponse {\n\trepeated Stat stats = 1;\n\n\n\tmessage Stat {\n\t\tstring month = 1; // YYYYMM\n\t\tfloat income = 2;\n\t\tfloat expense = 3;\n\t}\n}",
      "doc": ""
    },
    {
      "name": "CountUserAccountLogsRequest",
      "code": "\nmessage CountUserAccountLogsRequest {\n\tint64 userAccountId = 1;\n\tstring keyword = 2;\n\tstring eventType = 3;\n}",
      "doc": "计算日志数量"
    },
    {
      "name": "ListUserAccountLogsRequest",
      "code": "\nmessage ListUserAccountLogsRequest {\n\tint64 userAccountId = 1;\n\tstring keyword = 2;\n\tstring eventType = 3;\n\tint64 offset = 4;\n\tint64 size = 5;\n}",
      "doc": "列出单页日志"
    },
    {
      "name": "ListUserAccountLogsResponse",
      "code": "\n\nmessage ListUserAccountLogsResponse {\n\trepeated UserAccountLog userAccountLogs = 1;\n}",
      "doc": ""
    },
    {
      "name": "GenerateAllUserBillsRequest",
      "code": "\nmessage GenerateAllUserBillsRequest {\n\tstring month = 1;\n}",
      "doc": "手工生成账单"
    },
    {
      "name": "CountAllUserBillsRequest",
      "code": "\nmessage CountAllUserBillsRequest {\n\tint32 paidFlag = 1; // 0|1|-1\n\tint64 userId = 2;\n\tstring month = 3;\n}",
      "doc": "计算所有账单数量"
    },
    {
      "name": "SumUserUnpaidBillsResponse",
      "code": "\n\nmessage SumUserUnpaidBillsResponse {\n\tfloat amount = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListUserBillsRequest",
      "code": "\nmessage ListUserBillsRequest {\n\tint32 paidFlag = 1;\n\tint64 userId = 2;\n\tstring month = 5;\n\n\tint64 offset = 3;\n\tint64 size = 4;\n}",
      "doc": "列出单页账单"
    },
    {
      "name": "ListUserBillsResponse",
      "code": "\n\nmessage ListUserBillsResponse {\n\trepeated UserBill userBills = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindUserBillRequest",
      "code": "\nmessage FindUserBillRequest {\n\tint64 userBillId = 1;\n}",
      "doc": "查找账单信息"
    },
    {
      "name": "FindUserBillResponse",
      "code": "\n\nmessage FindUserBillResponse {\n\tUserBill userBill = 1;\n}",
      "doc": ""
    },
    {
      "name": "PayUserBillRequest",
      "code": "\nmessage PayUserBillRequest {\n\tint64 userBillId = 1;\n}",
      "doc": "支付账单"
    },
    {
      "name": "SumUserUnpaidBillsRequest",
      "code": "\nmessage SumUserUnpaidBillsRequest {\n\tint64 userId = 1;\n}",
      "doc": "计算用户所有未支付账单总额"
    },
    {
      "name": "FindAllEnabledUserNodesRequest",
      "code": "\nmessage FindAllEnabledUserNodesRequest {\n\n}",
      "doc": "列出所有可用用户节点"
    },
    {
      "name": "FindEnabledUserNodeResponse",
      "code": "\n\nmessage FindEnabledUserNodeResponse {\n\tUserNode userNode = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledUserNodesWithSSLCertIdRequest",
      "code": "\nmessage CountAllEnabledUserNodesWithSSLCertIdRequest {\n\tint64 sslCertId = 1;\n}",
      "doc": "计算使用某个SSL证书的用户节点数量"
    },
    {
      "name": "UpdateUserNodeRequest",
      "code": "\nmessage UpdateUserNodeRequest {\n\tint64 userNodeId = 1;\n\tstring name = 2;\n\tstring description = 3;\n\tbytes httpJSON = 4;\n\tbytes httpsJSON = 5;\n\tbytes accessAddrsJSON = 6;\n\tbool isOn = 7;\n}",
      "doc": "修改用户节点"
    },
    {
      "name": "DeleteUserNodeRequest",
      "code": "\nmessage DeleteUserNodeRequest {\n\tint64 userNodeId = 1;\n}",
      "doc": "删除用户节点"
    },
    {
      "name": "UpdateUserNodeStatusRequest",
      "code": "\nmessage UpdateUserNodeStatusRequest {\n\tint64 userNodeId = 1;\n\tbytes statusJSON = 2;\n}",
      "doc": "更新节点状态"
    },
    {
      "name": "FindEnabledUserNodeRequest",
      "code": "\nmessage FindEnabledUserNodeRequest {\n\tint64 userNodeId = 1;\n}",
      "doc": "根据ID查找节点"
    },
    {
      "name": "FindCurrentUserNodeResponse",
      "code": "\n\nmessage FindCurrentUserNodeResponse {\n\tUserNode userNode = 1;\n}",
      "doc": ""
    },
    {
      "name": "ListEnabledUserNodesRequest",
      "code": "\nmessage ListEnabledUserNodesRequest {\n\tint64 offset = 1;\n\tint64 size = 2;\n}",
      "doc": "列出单页的用户节点"
    },
    {
      "name": "ListEnabledUserNodesResponse",
      "code": "\n\nmessage ListEnabledUserNodesResponse {\n\trepeated UserNode userNodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "CreateUserNodeRequest",
      "code": "\nmessage CreateUserNodeRequest {\n\tstring name = 1;\n\tstring description = 2;\n\tbytes httpJSON = 3;\n\tbytes httpsJSON = 4;\n\tbytes accessAddrsJSON = 5;\n\tbool isOn = 6;\n}",
      "doc": "创建用户节点"
    },
    {
      "name": "CreateUserNodeResponse",
      "code": "\n\nmessage CreateUserNodeResponse {\n\tint64 userNodeId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindCurrentUserNodeRequest",
      "code": "\nmessage FindCurrentUserNodeRequest {\n\n}",
      "doc": "获取当前用户节点"
    },
    {
      "name": "FindAllEnabledUserNodesResponse",
      "code": "\n\nmessage FindAllEnabledUserNodesResponse {\n\trepeated UserNode userNodes = 1;\n}",
      "doc": ""
    },
    {
      "name": "CountAllEnabledUserNodesRequest",
      "code": "\nmessage CountAllEnabledUserNodesRequest {\n\n}",
      "doc": "计算用户节点数量"
    },
    {
      "name": "CountAllEnabledUserPlansRequest",
      "code": "\nmessage CountAllEnabledUserPlansRequest {\n\tbool isAvailable = 1;\n\tbool isExpired = 2;\n\tint32 expiringDays = 3;\n\tint64 userId = 4;\n}",
      "doc": "计算已购套餐数"
    },
    {
      "name": "ListEnabledUserPlansRequest",
      "code": "\nmessage ListEnabledUserPlansRequest {\n\tbool isAvailable = 1;\n\tbool isExpired = 2;\n\tint32 expiringDays = 3;\n\tint64 userId = 4;\n\tint64 offset = 5;\n\tint64 size = 6;\n}",
      "doc": "列出单页已购套餐"
    },
    {
      "name": "ListEnabledUserPlansResponse",
      "code": "\n\nmessage ListEnabledUserPlansResponse {\n\trepeated UserPlan userPlans = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindAllEnabledUserPlansForServerRequest",
      "code": "\nmessage FindAllEnabledUserPlansForServerRequest {\n\tint64 userId = 1;\n\tint64 serverId = 2;\n}",
      "doc": "查找所有服务可用的套餐"
    },
    {
      "name": "BuyUserPlanResponse",
      "code": "\n\nmessage BuyUserPlanResponse {\n\tint64 userPlanId = 1;\n}",
      "doc": ""
    },
    {
      "name": "FindEnabledUserPlanResponse",
      "code": "\n\nmessage FindEnabledUserPlanResponse {\n\tUserPlan userPlan = 1;\n}",
      "doc": ""
    },
    {
      "name": "UpdateUserPlanRequest",
      "code": "\nmessage UpdateUserPlanRequest {\n\tint64 userPlanId = 1;\n\tint64 planId = 2;\n\tstring dayTo = 3;\n\tbool isOn = 4;\n\tstring name = 5;\n}",
      "doc": "修改已购套餐"
    },
    {
      "name": "DeleteUserPlanRequest",
      "code": "\nmessage DeleteUserPlanRequest {\n\tint64 userPlanId = 1;\n}",
      "doc": "删除已购套餐"
    },
    {
      "name": "FindAllEnabledUserPlansForServerResponse",
      "code": "\n\nmessage FindAllEnabledUserPlansForServerResponse {\n\trepeated UserPlan userPlans = 1;\n}",
      "doc": ""
    },
    {
      "name": "BuyUserPlanRequest",
      "code": "\nmessage BuyUserPlanRequest{\n\tint64 userId = 1;\n\tint64 planId = 2;\n\tstring dayTo = 3;\n\tstring period = 4;\n\tint32  countPeriod = 5;\n\tstring name = 6;\n}",
      "doc": "添加已购套餐"
    },
    {
      "name": "RenewUserPlanRequest",
      "code": "\nmessage RenewUserPlanRequest {\n\tint64 userPlanId = 1;\n\tstring dayTo = 3;\n\tstring period = 4;\n\tint32  countPeriod = 5;\n}",
      "doc": "续费套餐"
    },
    {
      "name": "FindEnabledUserPlanRequest",
      "code": "\nmessage FindEnabledUserPlanRequest {\n\tint64 userPlanId = 1;\n}",
      "doc": "查找单个已购套餐信息"
    }
  ]
}